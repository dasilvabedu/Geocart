{"version":3,"sources":["layout/Footer/styles.js","layout/Footer/index.js","components/Nav/MenuButton/index.js","layout/Header/styles.js","layout/Header/index.js","layout/BasePage/styles.js","layout/BasePage/index.js","components/Map/index.js","store/actions/metadados.js","services/metadados.js","store/selectors/metadados.js","components/Objetos/index.js","pages/GeoEspaciais/Consulta/styles.js","pages/GeoEspaciais/Consulta/index.js","pages/GeoEspaciais/Inclusao/styles.js","pages/GeoEspaciais/Inclusao/index.js","pages/Home/styles.js","pages/Home/index.js","components/Dialog/index.js","components/Table/index.js","components/Toast/index.js","pages/Metadados/Consultar/index.js","pages/Metadados/Validar/styles.js","pages/Metadados/Validar/index.js","pages/Metadados/Atualizacao/styles.js","pages/Metadados/Atualizacao/index.js","pages/Metadados/Exclusao/Objetos/index.js","pages/Metadados/Exclusao/styles.js","services/metadados.v2.js","pages/Metadados/Exclusao/index.js","pages/NotFound/styles.js","pages/NotFound/index.js","pages/ObjetosTabulares/Atualizacao/Objetos/index.js","pages/ObjetosTabulares/Atualizacao/styles.js","pages/ObjetosTabulares/Atualizacao/index.js","store/reducers/metadados.js","store/index.js","styles/global.js","index.js","assets/logo.png"],"names":["Wrapper","styled","footer","CopyText","small","Footer","MenuButton","name","children","useState","anchorEl","setAnchorEl","handleClose","Button","color","aria-owns","aria-haspopup","onClick","event","currentTarget","Menu","id","open","Boolean","onClose","onClickCapture","LogoImage","img","AppBar","MaterialAppBar","Actions","div","Header","position","Toolbar","to","src","logo","MenuItem","component","NavLink","PageWrapper","ContentWrapper","BasePage","contentMinHeight","window","innerHeight","style","minHeight","marginTop","padding","props","width","height","Map","metadado","this","pontoCentral","lat","replace","split","long","zoom","layer","map","L","center","zoomControl","tileLayer","addTo","layers","format","transparent","detectRetina","maxZoom","maxNativeZoom","setView","React","Component","loadMetadadosSuccess","metadados","type","payload","loadMetadadoSelectedSuccess","mttTabela","loadMetadadoSelectedSuccessEditaveis","tabela","updateMetadadoSelected","campo","setMetadadoSelectedMessage","message","urlBase","loadMetadadosTotal","dispatch","a","fetch","response","json","aresposta","codigo","cabecalho","Error","mensagem","loadDadoParaValidacao","text","tipo","loading","loadDadoPorExtenso","onTabelaSelectedUrl","updateMetadado","body","JSON","stringify","headers","method","updatedMetadado","setMessage","getMetadados","state","data","getMetadadosTotalLoading","isLoading","getMetadadoSelectedLoading","metadadoSelected","getAllMetadadosTotal","createSelector","filter","isCompleted","getAllMetadadoSelectedCabecalho","getAllMetadadoSelectedCampos","campos","getAllMetadadoSelectedDados","dados","getAllMetadadoSelectedTabela","getAllMetadadoSelectedMessage","getAllMetadadoSelectedEditaveis","editaveis","camposTabelaEditaveis","connect","metadadoSelectedTabela","onTabelaSelected","mttTababela","startLoadingMetadados","useEffect","tabelaSelecionada","find","mtt_tabela","mtt_descricao","setState","metadadosSorted","slice","sort","b","x","toLowerCase","y","NativeSelect","value","onChange","target","inputProps","index","key","Container","CardHeader","CardHeaderMui","isLoadingMetadadoSelected","metadadoSelectedCabecalho","useSelector","Grid","container","spacing","item","Card","title","CardContent","xs","CircularProgress","Inclusao","objetos","setObjetos","objeto","setObjeto","fetchObjetos","variant","Metadados","PaperComponent","handle","cancel","Paper","borderTop","CustomDialog","labelButton","action","dialogTitle","editData","handleChange","onCloseDialog","isUpdateDisabled","entry","elementoEditavel","currElement","Object","entries","keys","length","Dialog","aria-labelledby","DialogTitle","cursor","DialogContent","TextField","dado","label","defaultValue","InputProps","readOnly","Typography","gutterBottom","DialogActions","autoFocus","dataToUpdate","String","prototype","replaceAll","RegExp","ButtonAction","actionDados","Icon","IconButton","aria-label","CellAction","infoDados","updateDados","excluirDados","TableCell","align","Info","Edit","Delete","TitleAction","CustomTable","contentMaxHeight","customFilterCampos","customFilterDados","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","includes","titulo","TableBody","severity","Snackbar","autoHideDuration","Alert","useStyles","makeStyles","theme","root","flexGrow","paper","overflow","margin","image","display","maxWidth","formControl","minWidth","selectEmpty","header","alignItems","background","paddingLeft","lineHeight","metadadoSelectedCampos","metadadoSelectedDados","metadadoSelectedMessage","metadadoSelectedEditaveis","onUpdatePressed","onSetMessagePressed","classes","texto","openToast","tipoToast","textoToast","info","fields","createPropertyObject","entryPreference","values","onGeneratedData","elementsParse","jsonData","tempData","keyValue","valueValue","push","createKeyAndValueObjects","metadadoMap","elementsKey","elements","elementsStringify","parse","loadingMessage","loadingAction","LinearProgress","content","Toast","className","justify","sm","FormControl","direction","Array","isArray","val","dadoAlteracao","mta_identificador","MessageArea","validarMetadado","setText","handleValidar","attrKeys","float","attr","hover","Objetos","URL","fetchObjetosTotal","fetchObjetoTabelaExtenso","fetchObjetoAptoExclusao","excluirObjeto","Service","confirm","alert","h1","NotFound","console","log","onRemovePressed","removeMetadadoUrl","removedMetadado","metadadoId","excluido","removeMetadado","setLoading","update","isMttTabela","mtt_identificador","handleDelete","field","initialState","initialStateSelected","reducers","metadadoIdToRemove","idToUpdate","campoUpdated","keyCampo","keyCampoUpdate","valCampoUpdate","persistConfig","storage","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","persistedReducer","persistReducer","createGlobalStyle","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","basename","exact","path","Home","GeoEspaciais","ObjetosTabulares","document","getElementById","module","exports"],"mappings":"shBAEO,IAAMA,EAAUC,IAAOC,OAAV,KAQPC,EAAWF,IAAOG,MAAV,KCNN,SAASC,IACtB,OACE,kBAACL,EAAD,KACE,kBAACG,EAAD,iG,gECFS,SAASG,EAAT,GAAyC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAAY,EACrBC,mBAAS,MADY,mBAC9CC,EAD8C,KACpCC,EADoC,KAK/CC,EAAc,kBAAMD,EAAY,OAEtC,OACE,oCACE,kBAACE,EAAA,EAAD,CACEC,MAAM,UACNC,YAAWL,EAAW,cAAgB,KACtCM,gBAAc,OACdC,QAVa,SAACC,GAAD,OAAWP,EAAYO,EAAMC,iBAYzCZ,GAEH,kBAACa,EAAA,EAAD,CACEC,GAAG,cACHX,SAAUA,EACVY,KAAMC,QAAQb,GACdc,QAASZ,EACTa,eAAgBb,GAEfJ,I,4WC1BF,IAAMkB,EAAYzB,IAAO0B,IAAV,KAOTC,EAAS3B,YAAO4B,IAAP5B,CAAH,KAKN6B,EAAU7B,IAAO8B,IAAV,KCNL,SAASC,IAKtB,OACE,kBAAC,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAASC,GAAG,KACV,kBAACT,EAAD,CAAWU,IAAKC,OAElB,kBAAC/B,EAAD,CAAYC,KAAK,aACf,kBAAC+B,EAAA,EAAD,CAAUC,UAAWC,IAASL,GAAG,wBAAjC,aAGA,kBAACG,EAAA,EAAD,CAAUC,UAAWC,IAASL,GAAG,sBAAjC,mBAGA,kBAACG,EAAA,EAAD,CAAUC,UAAWC,IAASL,GAAG,0BAAjC,qBAGA,kBAACG,EAAA,EAAD,CAAUC,UAAWC,IAASL,GAAG,uBAAjC,gBAIF,kBAAC7B,EAAD,CAAYC,KAAK,wBACf,kBAAC+B,EAAA,EAAD,CAAUC,UAAWC,IAASL,GAAG,2BAAjC,aAIF,kBAAC7B,EAAD,CAAYC,KAAK,sBACf,kBAAC+B,EAAA,EAAD,CAAUC,UAAWC,IAASL,GAAG,kCAAjC,sBAIF,kBAACL,EAAD,KACE,kBAACjB,EAAA,EAAD,CAAQC,MAAM,UAAUyB,UAAWC,IAASL,GAAG,KAA/C,UAGA,kBAACtB,EAAA,EAAD,CAAQC,MAAM,UAAUG,QAtCZ,cAsCZ,W,+OC9CH,IAAMwB,EAAcxC,IAAO8B,IAAV,KAMXW,EAAiBzC,IAAO8B,IAAV,KC2BZY,MAxBf,YAAiC,IAAbnC,EAAY,EAAZA,SACZoC,EAAmBC,OAAOC,YAAP,GAEzB,OACE,kBAACL,EAAD,KACE,kBAACT,EAAD,MACA,kBAACU,EAAD,CACEK,MAAO,CACLC,UAAWJ,EACXK,UAAW,OACXC,QAAS,WAGV1C,GAEH,kBAACH,EAAD,Q,sMCpBN,IAAML,EAAUC,IAAO8B,IAAV,KACF,SAACoB,GAAD,OAAWA,EAAMC,SAChB,SAACD,GAAD,OAAWA,EAAME,UAGRC,E,kLACE,IACXC,EAAaC,KAAKL,MAAlBI,SAEFE,EACJF,GAAYA,EAAS,qCACjBA,EAAS,qCACT,KACAG,EAAMD,EACRA,EAAaE,QAAQ,IAAK,IAAIA,QAAQ,OAAQ,IAAIC,MAAM,KAAK,IAC5D,UACCC,EAAOJ,EACTA,EAAaE,QAAQ,IAAK,IAAIA,QAAQ,OAAQ,IAAIC,MAAM,KAAK,IAC5D,UACCE,EACJP,GAAYA,EAAS,wCACjBA,EAAS,wCACT,EACAQ,EACJR,GAAYA,EAAS,mCACjBA,EAAS,mCACT,GAENC,KAAKQ,IAAMC,IAAED,IAAI,MAAO,CACtBE,OAAQ,CAACR,EAAKG,GACdC,OACAK,aAAa,IAGCF,IAAEG,UAAU,0CAA2C,IAC/DC,MAAMb,KAAKQ,KAEnBC,IAAEG,UAAU,qDAAsD,CAChEE,OAAQP,EACRQ,OAAQ,YACRC,aAAa,EACbC,cAAc,EACdC,QAAS,GACTC,cAAe,KACdN,MAAMb,KAAKQ,O,2CAGM,IACZT,EAAaC,KAAKL,MAAlBI,SAEFE,EACJF,GAAYA,EAAS,qCACjBA,EAAS,qCACT,KACAG,EAAMD,EACRA,EAAaE,QAAQ,IAAK,IAAIA,QAAQ,OAAQ,IAAIC,MAAM,KAAK,IAC5D,UACCC,EAAOJ,EACTA,EAAaE,QAAQ,IAAK,IAAIA,QAAQ,OAAQ,IAAIC,MAAM,KAAK,IAC5D,UACCE,EACJP,GAAYA,EAAS,wCACjBA,EAAS,wCACT,EAENC,KAAKQ,IAAIY,QAAQ,CAAClB,EAAKG,GAAOC,K,+BAI9B,OAAO,kBAAC,EAAD,CAASV,MAAM,OAAOC,OAAO,QAAQhC,GAAG,Y,GAhElBwD,IAAMC,W,sDCL1BC,GAAuB,SAACC,GAAD,MAAgB,CAClDC,KAFoC,yBAGpCC,QAAS,CAAEF,eAeAG,GAA8B,SAACC,EAAWJ,GAAZ,MAA2B,CACpEC,KAF4C,iCAG5CC,QAAS,CAAEE,YAAWJ,eAKXK,GAAuC,SAACL,EAAWM,GAAZ,MAAwB,CAC1EL,KAFA,2CAGAC,QAAS,CAAEF,YAAWM,YAeXC,GAAyB,SAAClE,EAAImE,GAAL,MAAgB,CACpDP,KAFsC,2BAGtCC,QAAS,CAAE7D,KAAImE,WAIJC,GAA6B,SAACC,GAAD,MAAc,CACtDT,KAF2C,gCAG3CC,QAAS,CAAEQ,aC1CPC,GAAU,+DA8BHC,GAAqB,2DAAM,WAAOC,GAAP,kBAAAC,EAAA,4DAEpC,kDAFoC,SAKpCD,ED/C0C,CAC5CZ,KAFwC,+BC2CF,SAMbc,MAAM,GAAD,OAAIJ,IAAJ,OAJ5B,oDAFoC,cAM9BK,EAN8B,gBAOZA,EAASC,OAPG,UASD,OAF7BjB,EAP8B,QAStBkB,UAAUC,OATY,iBAUlCN,EAASd,GAAqBC,EAAUoB,YAVN,8BAWzB,IAAIC,MAAMrB,EAAUkB,UAAUI,UAXL,QAapCT,EAASU,GAvCuB,yBAwChCV,EAASU,GA1CqB,uBA4BM,kDAgBpCV,ED/CuC,CACzCZ,KAFoC,2BCiDlCY,EACEJ,GAA2B,CACzBnE,MAAM,EACNkF,KAAK,wCAAD,aACJC,KAAM,QACNC,SAAS,KAtBuB,0DAAN,uDA4BrBC,GAAqB,SAACvB,GAAD,gDAAe,WAAOS,GAAP,oBAAAC,EAAA,6DACzCc,EADyC,mCACSxB,EADT,sBAI7CS,EDzDiD,CACnDZ,KAFA,uCCsD+C,SAKtBc,MAAM,GAAD,OAAIJ,IAAJ,OAAciB,IALG,cAKvCZ,EALuC,gBAMrBA,EAASC,OANY,UAQV,OAF7BjB,EANuC,QAQ/BkB,UAAUC,OARqB,iBAS3CN,EAASV,GAA4BC,EAAWJ,IATL,8BAUlC,IAAIqB,MAAMrB,EAAUkB,UAAUI,UAVI,0DAY7CT,ED/C8C,CAChDZ,KAF4C,mCCiD1CY,EACEJ,GAA2B,CACzBnE,MAAM,EACNkF,KAAK,wCAAD,aACJC,KAAM,QACNC,SAAS,KAlBgC,0DAAf,uDAwBrBH,GAAwB,SAACnB,GAAD,gDAAe,WAAOS,GAAP,oBAAAC,EAAA,6DAC5Cc,EAD4C,mCACMxB,GADN,kBAIzBW,MAAMJ,GAAUiB,GAJS,cAI1CZ,EAJ0C,gBAKxBA,EAASC,OALe,OAK1CjB,EAL0C,OAOhDa,EAASR,GAAqCL,EAAWI,IAPT,kDAShDS,EDpE8C,CAChDZ,KAF4C,mCCsE1CY,EACEJ,GAA2B,CACzBnE,MAAM,EACNkF,KAAK,wCAAD,aACJC,KAAM,QACNC,SAAS,KAfmC,0DAAf,uDAiDxBG,GAAiB,SAACxF,EAAI4E,GAAL,gDAAc,WAAOJ,GAAP,oBAAAC,EAAA,qGAGlCgB,EAAOC,KAAKC,UAAUf,GAHY,SAIjBF,MAAM,GAAD,OAAIJ,IAAJ,OAJY,iCAIuB,CAC7DsB,QAAS,CACP,eAAgB,oBAElBC,OAAQ,OACRJ,SATsC,cAIlCd,EAJkC,gBAWVA,EAASC,OAXC,OAWlCkB,EAXkC,OAYxCtB,EAASN,GAAuBlE,EAAI4E,IACpCJ,EACEJ,GAA2B,CACzBnE,MAAM,EACNkF,KAAMW,EAAgBjB,UAAUI,SAChCI,SAAS,EACTD,KAA2C,MAArCU,EAAgBjB,UAAUC,OAAiB,UAAY,WAlBzB,kDAsBxCN,EACEJ,GAA2B,CACzBnE,MAAM,EACNkF,KAAK,sCAAD,aACJC,KAAM,QACNC,SAAS,KA3B2B,0DAAd,uDAiCjBU,GAAa,SAAC1B,GAAD,gDAAa,WAAOG,GAAP,UAAAC,EAAA,sDACrCD,EAASJ,GAA2BC,IADC,2CAAb,uD,kBC/Kb2B,GAAe,SAACC,GAAD,OAAWA,EAAMtC,UAAUuC,MAI1CC,GAA2B,SAACF,GAAD,OAAWA,EAAMtC,UAAUyC,WAGtDC,GAA6B,SAACJ,GAAD,OACxCA,EAAMK,iBAAiBF,WA8BZG,IAdyBC,aACpCR,IACA,SAACrC,GAAD,OAAeA,EAAU8C,QAAO,SAACvE,GAAD,OAAeA,EAASwE,kBAGtBF,aAAeR,IAAc,SAACrC,GAAD,OAC/DA,EAAU8C,QAAO,SAACvE,GAAD,OAAcA,EAASwE,kBAGXF,aAC7BR,IACA,SAACrC,GAAD,OAAeA,KAGmB6C,cAnCH,SAACP,GAAD,OAAWA,EAAMtC,UAAUuC,QAqC1D,SAACvC,GAAD,OAAeA,MAQJgD,IALyBH,cArCH,SAACP,GAAD,OAAWA,EAAMK,iBAAiBJ,QAuCnE,SAACvC,GAAD,OAAeA,KAG8B6C,cAtCH,SAACP,GAAD,OAC1CA,EAAMK,iBAAiBvB,aAuCvB,SAACpB,GAAD,OAAeA,MAGJiD,GAA+BJ,cAzCH,SAACP,GAAD,OACvCA,EAAMK,iBAAiBO,UA0CvB,SAAClD,GAAD,OAAeA,KAGJmD,GAA8BN,cA5CH,SAACP,GAAD,OAAWA,EAAMK,iBAAiBS,SA8CxE,SAACpD,GAAD,OAAeA,KAGJqD,GAA+BR,cAhDH,SAACP,GAAD,OACvCA,EAAMK,iBAAiBvC,aAiDvB,SAACJ,GAAD,OAAeA,KAGJsD,GAAgCT,cA/CH,SAACP,GAAD,OACxCA,EAAMK,iBAAiBjC,WAgDvB,SAACV,GAAD,OAAeA,KAGJuD,GAAkCV,cAxDH,SAACP,GAAD,6BACvCA,EAAMK,iBAAiBa,WADgB,aAEvClB,EAAMK,iBAAiBc,2BAwD1B,SAACzD,GAAD,OAAeA,KCCjB,IAiBe0D,gBAjBS,SAACpB,GAAD,MAAY,CAClCtC,UAAW4C,GAAqBN,GAChCqB,uBAAwBN,GAA6Bf,OAG5B,SAACzB,GAAD,MAAe,CACxC+C,iBAAkB,SAACC,GAAD,OAAiBhD,EAASc,GAAmBkC,KAC/DC,sBAAuB,kBAAMjD,EAASD,UAUzB8C,EAhFf,YAKI,IAJF1D,EAIC,EAJDA,UACA8D,EAGC,EAHDA,sBACAH,EAEC,EAFDA,uBACAC,EACC,EADDA,iBAEAG,qBAAU,WACRD,MACC,CAACA,IAEJ,IAAME,EAAoBhE,EAAUiE,MAAK,SAAC1F,GACxC,OAAOA,EAAS2F,aAAeP,KANhC,EASyBlI,mBAAS,CACjCF,KAAMyI,EAAoBA,EAAkBE,WAAa,GACzDC,cAAeH,EAAoBA,EAAkBG,cAAgB,GACrED,WAAYF,EAAoBA,EAAkBE,WAAa,KAZhE,mBASM5B,EATN,KASa8B,EATb,KAeKC,EAAkBrE,EAAUsE,MAAM,GAiBxC,OAhBAD,EAAgBE,MAAK,SAAUzD,EAAG0D,GAChC,IAAMC,EAAI3D,EAAEoD,WAAWQ,cACjBC,EAAIH,EAAEN,WAAWQ,cACvB,OAAOD,EAAIE,GAAK,EAAIF,EAAIE,EAAI,EAAI,KAchC,kBAACC,GAAA,EAAD,CACEC,MAAOvC,EAAM6B,cACbW,SAbiB,SAAC5I,GAAW,IAAD,IACNA,EAAM6I,OAAtBxJ,EADsB,EACtBA,KAAMsJ,EADgB,EAChBA,MACdjB,EAAiBiB,GACjBT,EAAS,6BACJ9B,GADG,uBAEL/G,EAAOsJ,GAFF,2BAGMA,GAHN,MAWNG,WAAY,CACVzJ,KAAM,gBACNc,GAAI,eAGLiG,EAAM4B,WACL,4BAAQW,MAAOvC,EAAM4B,YAClB5B,EAAM6B,cADT,KAC0B7B,EAAM4B,WADhC,KAIA,4BAAQW,MAAM,IAAd,aAGDR,EAAgBrF,KAAI,SAACT,EAAU0G,GAAX,OACnB,4BAAQJ,MAAOtG,EAAS2F,WAAYgB,IAAKD,GACtC1G,EAAS4F,cADZ,KAC6B5F,EAAS2F,WADtC,Y,2NCnED,IAAMiB,GAAYlK,IAAO8B,IAAV,MAITqI,GAAanK,YAAOoK,KAAPpK,CAAH,MCsCvB,IAceyI,gBAdS,SAACpB,GAAD,MAAY,CAClCgD,0BAA2B5C,GAA2BJ,GACtDiD,0BAA2BvC,GAAgCV,OAGlC,iBAAO,KASnBoB,EA7Cf,YAA6E,IAAzD6B,EAAwD,EAAxDA,0BAA2BD,EAA6B,EAA7BA,0BACvC3C,EAAmB6C,aAAY,SAAClD,GAAD,OAAWA,EAAMK,oBAEtD,OACE,kBAACwC,GAAD,KACE,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,YAClB,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,SAIN,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,IACb,kBAACH,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAO,UAAYnD,EAAiBvC,YAChD,kBAAC2F,EAAA,EAAD,KACGT,EACC,kBAACW,EAAA,EAAD,MAEA,kBAAC,EAAD,CAAK1H,SAAUgH,EAA0B,a,iNChClD,IAAMJ,GAAYlK,IAAO8B,IAAV,MAITqI,GAAanK,YAAOoK,KAAPpK,CAAH,MCqFRiL,OA/Ef,WAAqB,IAAD,EACYzK,mBAAS,IADrB,mBACX0K,EADW,KACFC,EADE,OAEU3K,mBAAS,CAAEyI,WAAY,GAAIC,cAAe,KAFpD,mBAEXkC,EAFW,KAEHC,EAFG,KAuBlB,OAnBAvC,qBAAU,WAAM,8CACd,6BAAAjD,EAAA,sEACyBC,MACrB,iGAFJ,cACQC,EADR,YAIEoF,EAJF,SAIoBpF,EAASC,OAJ7B,mBAIqCG,WAJrC,0DADc,uBAAC,WAAD,wBAQdmF,KACC,IAWD,kBAAC,GAAD,KACE,kBAACd,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,YAClB,kBAACC,EAAA,EAAD,KACE,kBAACnB,GAAA,EAAD,CACEC,MAAOwB,EAAOlC,cACdW,SAjBO,SAAC5I,GAAW,IAAD,EACNA,EAAM6I,OAAhBF,GADgB,EACtBtJ,KADsB,EAChBsJ,OAEdyB,EAAU,CACRpC,WAAYW,KAcFG,WAAY,CACV3I,GAAI,aACJd,KAAM,kBAGP8K,EAAOnC,WACN,4BAAQW,MAAOwB,EAAOnC,YACnBmC,EAAOlC,cADV,KAC2BkC,EAAOnC,WADlC,KAIA,4BAAQW,MAAM,IAAd,aAGDsB,EAAQnH,KAAI,SAACqH,EAAQpB,GAAT,OACX,4BAAQC,IAAKD,EAAOJ,MAAOwB,EAAOnC,YAC/BmC,EAAOlC,cADV,KAC2BkC,EAAOnC,WADlC,SAKJ,yBAAKnG,MAAO,CAAEE,UAAW,SACvB,kBAACpC,EAAA,EAAD,CAAQ2K,QAAQ,aAAhB,mBAMV,kBAACf,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG5H,MAAO,CAAEE,UAAW,SAC9C,kBAACwH,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,wBAClB,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAKxH,SAAU8H,OAIrB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,qBAClB,kBAACC,EAAA,EAAD,W,+IClFL,IAAMZ,GAAYlK,IAAO8B,IAAV,MCUP0J,OARf,WACE,OACE,kBAAC,GAAD,KACE,gF,wHCQAC,I,MAAiB,SAACvI,GACtB,OACE,kBAAC,KAAD,CACEwI,OAAO,0BACPC,OAAQ,oCAER,kBAACC,GAAA,EAAD,iBAAW1I,EAAX,CAAkBJ,MAAO,CAAE+I,UAAW,2BA0H7BC,GArHM,SAAC5I,GAAW,IAE7B7B,EAUE6B,EAVF7B,KACAV,EASEuC,EATFvC,YACAoL,EAQE7I,EARF6I,YACAC,EAOE9I,EAPF8I,OACAvG,EAMEvC,EANFuC,QACAwG,EAKE/I,EALF+I,YAP4B,EAY1B/I,EAJFoE,YAR4B,MAQrB,GARqB,IAY1BpE,EAHF+E,cAT4B,MASnB,GATmB,IAY1B/E,EAFFqF,iBAV4B,MAUhB,GAVgB,IAY1BrF,EADFgJ,gBAX4B,WAcJtH,IAAMpE,SAAS,IAdX,mBAcvB6G,EAduB,KAchB8B,EAdgB,KAmBxBgD,EAAe,SAAClL,GAAW,IAAD,EACNA,EAAM6I,OAAtBxJ,EADsB,EACtBA,KAAMsJ,EADgB,EAChBA,MACdT,EAAS,6BAAK9B,GAAN,kBAAc/G,EAAKqD,MAAM,MAAM,GAAGD,QAAQ,IAAK,IAAMkG,MAGzDwC,EAAgB,WACpBjD,EAAS,IAGTxI,KAGI0L,EAAmB,SAACC,GACxB,IAAKJ,EAAU,OAAOA,EAGtB,IAAMK,EAAmBhE,EAAUS,MAAK,SAACwD,GAKvC,cAA2BC,OAAOC,QAAQF,GAA1C,eAAwD,CAAC,IAAD,sBAAvC5C,GAAuC,WACtD,GAAI0C,IAAK,UAAQ1C,EAAR,KAAkB,OAAO4C,EAEpC,OAAO,QAWT,OAPED,GAGM,QAFNA,EACEE,OAAOE,KAAKJ,GAAkBE,OAAOE,KAAKJ,GAAkBK,OAAS,KAQ3E,OACE,8BACE,kBAACC,GAAA,EAAD,CACExL,KAAMA,EACNE,QAAS6K,EACTX,eAAgBA,GAChBqB,kBAAgB,0BAEhB,kBAACC,GAAA,EAAD,CAAajK,MAAO,CAAEkK,OAAQ,QAAU5L,GAAG,0BACxC6K,GAAe,kBAElB,kBAACgB,GAAA,EAAD,KACGxH,GACCwC,EAAOlE,KAAI,SAACwB,GAAD,OACR2G,EAMC,kBAACgB,GAAA,EAAD,CACE5M,KAAMiF,EAAM4H,KAAKxJ,MAAM,OAAO,GAC9ByJ,MAAO7H,EAAM4H,KAAKxJ,MAAM,OAAO,GAC/B0J,aAAc/F,EAAK/B,EAAM4H,MACzBG,WAAY,CACVC,SAAUlB,EAAiB9G,EAAM4H,KAAKxJ,MAAM,MAAM,KAEpDb,MAAO,CAAEK,MAAO,QAChB0G,SAAUsC,IAbZ,kBAACqB,GAAA,EAAD,CAAYjC,QAAQ,QAAQkC,cAAY,GACtC,gCAASlI,EAAM4H,KAAKxJ,MAAM,OAAO,GAAjC,MACC2D,EAAK/B,EAAM4H,WAgBtB,kBAACO,GAAA,EAAD,KACI1B,EACA,kBAACpL,EAAA,EAAD,CAEE+M,WAAS,EACT9M,MAAM,UACNG,QAAS,WACP,IAAI4M,EAAevG,EACnBuG,EAAY,gBACPA,GAEL5B,EAAO1E,EAAKmF,OAAOE,KAAKrF,GAAM,IAAKsG,GACnCxB,MAGDL,GAAe,QAdT,KAiBX,kBAACnL,EAAA,EAAD,CAAQ+M,WAAS,EAAC9M,MAAM,UAAUG,QAASoL,GAA3C,c,oICxHVyB,OAAOC,UAAUC,WAAa,SAAU/E,EAAMtF,GAE5C,OADYH,KACDG,QACT,IAAIsK,OAAOhF,EAAKtF,QAAQ,wBAAyB,QAAS,KAC1DA,IAGJ,IAAMuK,GAAe,SAAC,GAAyC,IAAvCd,EAAsC,EAAtCA,KAAMlF,EAAgC,EAAhCA,OAAQiG,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACjD,OAAQD,EACN,kBAACE,GAAA,EAAD,CACEvN,MAAM,UACNwN,aAAW,iBACX/L,UAAU,OACVtB,QAAS,WACPkN,EAAYf,EAAMlF,KAGpB,kBAACkG,EAAD,OATkB,MAclBG,GAAa,SAAC,GAA4D,IAA1DnB,EAAyD,EAAzDA,KAAMlF,EAAmD,EAAnDA,OAAQsG,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC1D,OAAKF,GAAcE,GAAiBD,EAGlC,kBAACE,GAAA,EAAD,CAAWC,MAAM,SAAS7L,MAAO,CAAEK,MAAO,UACxC,kBAAC,GAAD,CACEgK,KAAMA,EACNlF,OAAQA,EACRiG,YAAaK,EACbJ,KAAMS,OAER,kBAAC,GAAD,CACEzB,KAAMA,EACNlF,OAAQA,EACRiG,YAAaM,EACbL,KAAMU,OAER,kBAAC,GAAD,CACE1B,KAAMA,EACNlF,OAAQA,EACRiG,YAAaO,EACbN,KAAMW,QApB4C,MA0BpDC,GAAc,SAAC,GAA8C,IAA5CR,EAA2C,EAA3CA,UAAWE,EAAgC,EAAhCA,aAAcD,EAAkB,EAAlBA,YAC9C,OAAKD,GAAcE,GAAiBD,EAE7B,kBAACE,GAAA,EAAD,CAAWC,MAAM,UAAjB,eAFiD,MAmE3CK,GA9DK,SAAC9L,GAAW,IAAD,EAUzBA,EARF+E,cAF2B,MAElB,GAFkB,EAG3BE,EAOEjF,EAPFiF,MACAoG,EAMErL,EANFqL,UACAE,EAKEvL,EALFuL,aACAD,EAIEtL,EAJFsL,YACAS,EAGE/L,EAHF+L,iBAP2B,EAUzB/L,EAFFgM,0BAR2B,MAQN,GARM,IAUzBhM,EADFiM,yBAT2B,MASP,GATO,EAY7B,OACE,kBAACC,GAAA,EAAD,CAAgBtM,MAAO,CAAEuM,UAAWJ,IAClC,kBAACK,GAAA,EAAD,CAAOC,cAAY,EAAClB,aAAW,gBAC7B,kBAACmB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGxH,EAAOlE,KAAI,SAACwB,GAAD,OACV2J,EAAmBtC,OACjBsC,EAAmBQ,SAASnK,EAAMoK,QAChC,kBAACjB,GAAA,EAAD,CAAWC,MAAM,UAAUpJ,EAAMoK,QAC/B,KAEJ,kBAACjB,GAAA,EAAD,CAAWC,MAAM,UAAUpJ,EAAMoK,WAGpC1H,EAAO2E,OACN,kBAAC,GAAD,CACE2B,UAAWA,EACXE,aAAcA,EACdD,YAAaA,IAEb,OAGR,kBAACoB,GAAA,EAAD,KACGzH,EAAMpE,KAAI,SAACoJ,GAAD,OACT,kBAACsC,GAAA,EAAD,CAAUxF,IAAKkD,EAAK/L,IACjB6G,EAAOlE,KAAI,SAACwB,GAAD,OACV4J,EAAkBvC,OAChBuC,EAAkBO,SAASnK,EAAM4H,MAC/B,kBAACuB,GAAA,EAAD,CAAWC,MAAM,UAAUxB,EAAK5H,EAAM4H,OACpC,KAEJ,kBAACuB,GAAA,EAAD,CAAWC,MAAM,UAAUxB,EAAK5H,EAAM4H,UAG1C,kBAAC,GAAD,CACEA,KAAMA,EACNlF,OAAQA,EACRsG,UAAWA,EACXC,YAAaA,EACbC,aAAcA,Y,oBCpHf,mBAAGpN,EAAH,EAAGA,KAAMV,EAAT,EAASA,YAAaJ,EAAtB,EAAsBA,SAAUsP,EAAhC,EAAgCA,SAAhC,OACb,kBAACC,GAAA,EAAD,CAAUzO,KAAMA,EAAME,QAASZ,EAAaoP,iBAAkB,KAC5D,kBAACC,GAAA,EAAD,CAAOzO,QAASZ,EAAa4K,QAAQ,SAASsE,SAAUA,GACrDtP,KC0BD0P,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVrN,UAAW,QAEbsN,MAAO,CACLrN,QAASkN,EAAMzF,QAAQ,GACvBtH,OAAQ,IACRmN,SAAU,OACVC,OAAQ,MACR3E,UAAW,qBAEb4E,MAAO,CACLtN,MAAO,IACPC,OAAQ,KAEV1B,IAAK,CACH8O,OAAQ,OACRE,QAAS,QACTC,SAAU,OACVtB,UAAW,QAEbuB,YAAa,CACXJ,OAAQL,EAAMzF,QAAQ,GACtBmG,SAAU,KAEZC,YAAa,CACX9N,UAAWmN,EAAMzF,QAAQ,IAE3BqG,OAAQ,CACNC,WAAY,SACZC,WAAY,UACZpQ,MAAO,QACPqQ,YAAa,MACbV,OAAQ,QACRW,WAAY,WAqYD1I,gBAnBS,SAACpB,GAAD,MAAY,CAClCG,UAAWD,GAAyBF,GACpCtC,UAAW4C,GAAqBN,GAChCgD,0BAA2B5C,GAA2BJ,GACtDiD,0BAA2BvC,GAAgCV,GAC3D+J,uBAAwBpJ,GAA6BX,GACrDgK,sBAAuBnJ,GAA4Bb,GACnDqB,uBAAwBN,GAA6Bf,GACrDiK,wBAAyBjJ,GAA8BhB,GACvDkK,0BAA2BjJ,GAAgCjB,OAGlC,SAACzB,GAAD,MAAe,CACxC+C,iBAAkB,SAACC,GAAD,OAAiBhD,EAASc,GAAmBkC,KAC/D4I,gBAAiB,SAACpQ,EAAI4E,GAAL,OAAcJ,EAASgB,GAAexF,EAAI4E,KAC3DyL,oBAAqB,SAAChM,GAAD,OAAaG,EAASuB,GAAW1B,KACtDoD,sBAAuB,kBAAMjD,EAASD,UAGzB8C,EAjYG,SAAC,GAcZ,IAbL1D,EAaI,EAbJA,UACAuF,EAYI,EAZJA,0BACA8G,EAWI,EAXJA,uBACAC,EAUI,EAVJA,sBACA3I,EASI,EATJA,uBACA4I,EAQI,EARJA,wBACAC,EAOI,EAPJA,0BACAC,EAMI,EANJA,gBACA7I,EAKI,EALJA,iBACA8I,EAII,EAJJA,oBACAjK,EAGI,EAHJA,UACA6C,EAEI,EAFJA,0BACAxB,EACI,EADJA,sBAEAC,qBAAU,WACRD,MACC,CAACA,IAEJ,IAAM6I,EAAUzB,KACVlH,EAAoBhE,EAAUiE,MAAK,SAAC1F,GACxC,OAAOA,EAAS2F,aAAeP,KAP7B,EAUsB9D,IAAMpE,SAAS,CACvCF,KAAMyI,EAAoBA,EAAkBE,WAAa,GACzDC,cAAeH,EAAoBA,EAAkBG,cAAgB,GACrED,WAAYF,EAAoBA,EAAkBE,WAAa,GAC/D5C,SAAU,CACRhF,MAAM,EACNsQ,MAAO,GACPnL,KAAM,UACNc,KAAM,KACNW,OAAQ,GACR8D,YAAa,KACbE,YAAa,KACbxG,QAAS,KACTuG,OAAQ,KACR4F,WAAW,EACXC,UAAW,UACXC,WAAY,KACZ5F,UAAU,KA3BV,mBAUG7E,EAVH,KAUU8B,EAVV,KAyCE4I,EAAO,SAAC5E,EAAM6E,GAClB,IAAM3L,EAAW,CACfhF,MAAM,EAENmF,KAAM,UACNc,KAAM6F,EACNlF,OAAQ+J,EACR9F,UAAU,GAEZ/C,EAAS,6BAAK9B,GAAN,IAAahB,eAiCvBwH,OAAOC,UAAUC,WAAa,SAAU/E,EAAMtF,GAE5C,OADYH,KACDG,QACT,IAAIsK,OAAOhF,EAAKtF,QAAQ,wBAAyB,QAAS,KAC1DA,IAIJ,IAAMuO,EAAuB,SAACzF,EAAa0F,GACzC,OAAOzF,OAAOC,QAAQF,GAAazI,KAAI,YAAoB,IAAD,mBAAjBkG,EAAiB,KAAZkI,EAAY,KACxD,MAA2B,QAApBD,EACH,CACEvC,OAAO,GAAD,OAAK1F,EAAItG,MAAM,OAAO,IAC5BwJ,KAAK,GAAD,OAAKlD,IAHR,eAMAA,EANA,UAMSkI,QAKpB,SAASC,EAAgBC,GAGvB,IAFA,IAAIC,EAAW,GACTC,EAAW,GACjB,MAAwB9F,OAAOC,QAAQ2F,GAAvC,eAAuD,CAAC,IAA1CzI,EAAyC,uBACjD9C,KAAKC,UAAU6C,GAAO8F,SAAS,UAAS4C,EAAW,IACvD,cAAqC7F,OAAOC,QAAQ9C,GAApD,eAA4D,CAAC,IAAD,sBAAhD4I,EAAgD,KAAtCC,EAAsC,KAC1DH,EAASE,GAAYC,EACjBD,EAAS9C,SAAS,SAAS6C,EAASG,KAAKJ,IAKjD,OAAOC,EAGT,IAAMI,EAA2B,WAAwC,IAAvCC,EAAsC,uDAAxB,GAAIV,EAAoB,uCAClEW,EAAc,GACdR,EAAgB,KACdS,EAAWF,EAAY7O,KAAI,SAACyI,GAChC,OAAQqG,EAAcZ,EAAqBzF,EAAa0F,MAG1D,GAAwB,QAApBA,EAA2B,CAC7B,IAAMa,EAAoBjM,KAAKC,UAAU+L,GACtC/E,WAAW,OAAQ,MACnBA,WAAW,OAAQ,MACnBA,WAAW,UAAW,OACtBA,WAAW,MAAO,MAClBA,WAAW,MAAO,MAClBA,WAAW,QAAS,OAEvBsE,EAAgBD,EADhBC,EAAgBvL,KAAKkM,MAAMD,SAG3BV,EAAgBQ,EAGlB,OAAOR,GAeHY,EAAiB,kBAACjI,EAAA,EAAD,MACjBkI,EAAgB,kBAACC,GAAA,EAAD,MAChB/J,EAAkBrE,EAAUsE,MAAM,GACxCD,EAAgBE,MAAK,SAAUzD,EAAG0D,GAChC,IAAMC,EAAI3D,EAAEoD,WAAWQ,cACjBC,EAAIH,EAAEN,WAAWQ,cACvB,OAAOD,EAAIE,GAAK,EAAIF,EAAIE,EAAI,EAAI,KAGlC,IAAM0J,EACJ,oCACE,kBAACC,GAAD,CACEhS,KAAMgG,EAAMhB,SAASuL,WAAaN,EAAwBjQ,KAC1DV,YAAa,WACXwI,EAAS,6BAAK9B,GAAN,IAAahB,SAAU,CAAEuL,WAAW,MAC5CH,EAAoB,CAClBpQ,MAAM,EACNkF,KAAM,KACNC,KAAM,UACNC,SAAS,KAGboJ,SACExI,EAAMhB,SAASuL,UACXvK,EAAMhB,SAASwL,UACfP,EAAwB9K,MAG7Ba,EAAMhB,SAASyL,WACfR,EAAwB/K,MAG1B+K,EAAwB7K,QAAUyM,EAAgB,KAEnD,kBAAC,GAAD,CACE7R,KAAMgG,EAAMhB,SAAShF,KACrBgF,SAAUgB,EAAMhB,SAChBiB,KAAMD,EAAMhB,SAASiB,KACrBW,OAAQZ,EAAMhB,SAAS4B,OACvB8D,YAAa1E,EAAMhB,SAAS0F,YAC5BE,YAAa5E,EAAMhB,SAAS4F,YAC5BxG,QAAS4B,EAAMhB,SAASZ,QACxBuG,OAAQ3E,EAAMhB,SAAS2F,OACvB0F,QAASA,EACTxF,SAAU7E,EAAMhB,SAAS6F,SACzB3D,UAAWgJ,EACX5Q,YAAa,kBAAMwI,EAAS,6BAAK9B,GAAN,IAAahB,SAAU,CAAEhF,MAAM,SAG5D,yBAAKiS,UAAW5B,EAAQtB,MACtB,kBAAC5F,EAAA,EAAD,CAAMC,WAAS,EAAC8I,QAAQ,SAASvC,WAAW,SAAStG,QAAS,GAC5D,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACa,GAAA,EAAD,CAAO0H,UAAW5B,EAAQpB,OACxB,yBAAKgD,UAAW5B,EAAQX,OAAQjO,MAAO,CAAEE,UAAW,UAClD,wCAEF,kBAACwH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GAAIyI,IAAE,EAAC/I,WAAS,GAC7B,kBAACD,EAAA,EAAD,CAAMG,MAAI,EAACI,IAAE,GACX,kBAAC0I,GAAA,EAAD,CAAaH,UAAW5B,EAAQd,aAC9B,kBAACjH,GAAA,EAAD,CACEC,MAAOvC,EAAM6B,cACbW,SA1LD,SAAC5I,GAAW,IAAD,IACNA,EAAM6I,OAAtBxJ,EADsB,EACtBA,KAAMsJ,EADgB,EAChBA,MACdjB,EAAiBiB,GACjBT,EAAS,6BACJ9B,GADG,uBAEL/G,EAAOsJ,GAFF,2BAGMA,GAHN,MAwLYG,WAAY,CACVzJ,KAAM,gBACNc,GAAI,eAGLiG,EAAM4B,WACL,4BAAQW,MAAOvC,EAAM4B,YAClB5B,EAAM6B,cADT,KAC0B7B,EAAM4B,WADhC,KAIA,4BAAQW,MAAM,IAAd,aAGDR,EAAgBrF,KAAI,SAACT,EAAU0G,GAAX,OACnB,4BAAQJ,MAAOtG,EAAS2F,WAAYgB,IAAKD,GACtC1G,EAAS4F,cADZ,KAC6B5F,EAAS2F,WADtC,aAUZ,yBAAKqK,UAAW5B,EAAQX,QACtB,oDAEF,kBAACvG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GAAIyI,IAAE,EAAC/I,WAAS,GAC7B,kBAACD,EAAA,EAAD,CACEG,MAAI,EACJI,IAAE,EACFN,WAAS,EACTiJ,UAAU,SACVhJ,QAAS,EACTsG,WAAW,SACXuC,QAAQ,UAER,kBAAC/I,EAAA,EAAD,CAAMG,MAAI,EAACI,IAAE,GACVV,EACC4I,EACEU,MAAMC,QAAQtJ,IAChBA,EAA0BsC,OAC1BtC,EAA0BvG,KAAI,SAACyI,GAAD,OAC5BC,OAAOC,QAAQF,GAAazI,KAAI,mCAAEkG,EAAF,KAAO4J,EAAP,YAC9B,kBAACrG,GAAA,EAAD,CAAYjC,QAAQ,QAAQkC,cAAY,EAACxD,IAAKA,GAC5C,gCAASA,EAAItG,MAAM,OAAO,GAA1B,MACCkQ,SAKP,wBAAI/Q,MAAO,CAAEE,UAAW,SACrB,IACD,mFAGHqH,EACC,GAEA,kBAAC,GAAD,CACElC,MAAOwK,EACLvB,EACA,UAEFnJ,OAAQ0K,EACNvB,EACA,OAEF7C,UAAWwD,EACXvD,YA3OT,SAACrB,EAAM6E,GACpB,IAAM3L,EAAW,CACfhF,MAAM,EAENmF,KAAM,UACNuF,YAAa,YACbE,YAAa,qBACb3E,KAAM6F,EACNlF,OAAQ+J,EACR9F,UAAU,EACVF,OATe,SASR5K,EAAI0S,GACT3K,EAAS,6BAAK9B,GAAN,IAAahB,SAAU,CAAEuL,WAAW,EAAOvQ,MAAM,MACzD,IAAMuM,EAAY,6BACbkG,GADa,IAGhBzO,OAAQ,uBACR0O,kBAAmB3S,IAErBqQ,EAAoB,CAClBpQ,MAAM,EACNkF,KAAM,KACNC,KAAM,UACNC,SAAS,IAEX+K,EAAgBpQ,EAAIwM,KAGxBzE,EAAS,6BAAK9B,GAAN,IAAahB,eAiNC4I,iBAAkB,IAClBC,mBAnJG,CACzB,oDACA,kCACA,6BAiJsBC,kBA9IE,CACxB,wDACA,sCACA,yCAqJM,kBAAC3E,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACa,GAAA,EAAD,CAAO0H,UAAW5B,EAAQpB,OACxB,yBAAKgD,UAAW5B,EAAQX,OAAQjO,MAAO,CAAEE,UAAW,UAClD,sDAEF,kBAACwH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CACEG,MAAI,EACJI,GAAI,GACJyI,IAAE,EACF/I,WAAS,EACTuG,WAAW,SACXuC,QAAQ,UAEPlJ,EACC4I,EACExG,OAAO0F,OAAO7H,GAA2B,IAC3CmC,OAAO0F,OAAO7H,GAA2B,GACvC,kCAII,iBAFNmC,OAAO0F,OAAO7H,GAA2B,GACvC,iCAEF,kBAAC,GAAD,CACEnC,MAAOwK,EACLtB,EACA,UAEFpJ,OAAQ0K,EACNtB,EACA,OAEF9C,UAAWwD,IAGb,kBAAC,EAAD,CACEzO,SAAUmJ,OAAO0F,OAAO7H,GAA2B,YAYvE,OAAO9C,EAAYyL,EAAiBG,K,4QClb/B,IAAMlJ,GAAYlK,IAAO8B,IAAV,MAITkS,GAAchU,IAAO8B,IAAV,MCgDT2G,gBANS,iBAAO,MAEJ,SAAC7C,GAAD,MAAe,CACxCqO,gBAAiB,kBAAMrO,EdsIM,wBAAM,6BAAAC,EAAA,sEACZC,MAAMJ,GAAO,sBADD,cAC7BK,EAD6B,gBAEtBA,EAASC,OAFa,wFcnItByC,EAvCC,SAAC,GAAyB,IAAvBwL,EAAsB,EAAtBA,gBAAsB,EACfzT,qBADe,mBAChC+F,EADgC,KAC1B2N,EAD0B,KAGjCC,EAAa,yCAAG,6BAAAtO,EAAA,6DACpBqO,EAAQ,CAAC,qDADW,SAGGD,IAHH,OAGdlO,EAHc,OAKpBmO,EAAQnO,EAASI,WALG,2CAAH,qDAQnB,OACE,kBAAC,GAAD,KACE,kBAACqE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAACT,GAAA,EAAD,CACEU,MAAM,kBACN/H,MAAO,CAAEmO,WAAY,UAAWpQ,MAAO,UAEzC,kBAACiK,EAAA,EAAD,KACE,kBAAClK,EAAA,EAAD,CAAQ2K,QAAQ,YAAYvK,QAASmT,GAArC,mBAGA,kBAACH,GAAD,KAAclN,KAAKC,UAAUR,Y,8LCpCpC,IAAM2D,GAAYlK,IAAO8B,IAAV,MAETqI,GAAanK,YAAOoK,KAAPpK,CAAH,MC6HvB,IAceyI,gBAdS,SAACpB,GAAD,MAAY,CAClCgD,0BAA2B5C,GAA2BJ,GACtDiD,0BAA2BvC,GAAgCV,OAGlC,iBAAO,KASnBoB,EAlHf,YAAgF,IAAzD6B,EAAwD,EAAxDA,0BAA2BD,EAA6B,EAA7BA,0BAC1C3C,EAAmB6C,aAAY,SAAClD,GAAD,OAAWA,EAAMK,oBAEhD0M,EAAW,CACf,gDACA,wDACA,yDACA,sCACA,+BACA,4CACA,oDACA,wCACA,sEACA,oDAGF,OACE,kBAAC,GAAD,KACE,kBAAC5J,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACa,GAAA,EAAD,KACE,kBAAChB,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,YAClB,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,UAKR,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,4BAClB,kBAACC,EAAA,EAAD,QAIJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAAC,GAAD,CACEC,MAAO,uBAAyBnD,EAAiBvC,YAEnD,kBAAC2F,EAAA,EAAD,KACE,yBAAKhI,MAAO,CAAEuR,MAAO,UACnB,kBAACzT,EAAA,EAAD,CAAQ2K,QAAQ,aAAhB,wBAEDlB,EACC,kBAACW,EAAA,EAAD,MAEAV,EAA0BvG,KAAI,SAACyI,GAAD,OAC5BC,OAAOC,QAAQF,GAAazI,KAAI,mCAAEkG,EAAF,KAAO4J,EAAP,YAC9B,kBAACrG,GAAA,EAAD,CAAYjC,QAAQ,QAAQkC,cAAY,EAACxD,IAAKA,GAC5C,gCAASA,EAAItG,MAAM,OAAO,GAA1B,MACCkQ,aASjB,kBAACrJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,wBAClB,kBAACC,EAAA,EAAD,KACE,kBAACsE,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACG2E,EAASrQ,KAAI,SAACkG,GAAD,OACZ,kBAACyE,GAAA,EAAD,CAAWzE,IAAKA,GAAMA,EAAItG,MAAM,OAAO,OAEzC,kBAAC+K,GAAA,EAAD,sBAGJ,kBAACkB,GAAA,EAAD,KACGlI,EAAiBO,OAAOlE,KAAI,SAACuQ,EAAMtK,GAAP,OAC3B,kBAACyF,GAAA,EAAD,CAAU8E,OAAK,EAACtK,IAAKD,GAClBoK,EAASrQ,KAAI,SAACkG,GAAD,OACZ,kBAACyE,GAAA,EAAD,CAAWzE,IAAKA,GAAMqK,EAAKrK,IAAQ,WAErC,kBAACyE,GAAA,EAAD,KACE,kBAACN,GAAA,EAAD,CAAYvN,MAAM,UAAUyB,UAAU,QACpC,kBAAC,KAAD,uBCtEbkS,OAvCf,YAA6C,IAA1BlN,EAAyB,EAAzBA,KAAMsC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC9B,OACE,6BACGvC,EAAKsF,QAAU,EACd,kBAAC5B,EAAA,EAAD,MAEA,kBAACrB,GAAA,EAAD,CACEC,MAAOA,EACPG,WAAY,CACVzJ,KAAM,gBACNc,GAAI,cAENyI,SAAUA,GAETD,EAAMX,WACL,4BAAQW,MAAOA,EAAMX,YAClBW,EAAMV,cADT,KAC0BU,EAAMX,WADhC,KAIA,4BAAQW,MAAM,IAAd,gCAGDtC,EAAKvD,KAAI,SAACqH,EAAQpB,GAAT,OACR,4BAAQC,IAAKD,EAAOJ,MAAOwB,EAAOnC,YAC/BmC,EAAOlC,cADV,KAC2BkC,EAAOnC,WADlC,W,+GC1BL,IAAMiB,GAAYlK,IAAO8B,IAAV,MCFhB2S,GAAM,+DAECC,GAAiB,yCAAG,2CAAA7O,EAAA,6DAAOW,EAAP,+BAAc,GAAd,SACRV,MAAM,GAAD,OAAI2O,GAAJ,oCAAmCjO,IADhC,cACzBT,EADyB,gBAGlBA,EAASC,OAHS,mFAAH,qDAMjB2O,GAAwB,yCAAG,2CAAA9O,EAAA,yDACvB,MAD8BR,EAAP,+BAAgB,IAAhB,yCACZ,IADY,uBAGfS,MAAM,GAAD,OAAI2O,GAAJ,oCAAmCpP,IAHzB,cAGhCU,EAHgC,gBAKzBA,EAASC,OALgB,mFAAH,qDAQxB4O,GAAuB,yCAAG,6BAAA/O,EAAA,sEACdC,MAAM,GAAD,OAAI2O,GAAJ,2BADS,cAC/B1O,EAD+B,gBAGxBA,EAASC,OAHe,mFAAH,qDAMvB6O,GAAa,yCAAG,WAAOxP,GAAP,gBAAAQ,EAAA,sEACJC,MAAM,GAAD,OAAI2O,GAAJ,yCAAwCpP,IADzC,cACrBU,EADqB,gBAGdA,EAASC,OAHK,mFAAH,sDCgCXyC,sBA7Cf,WAAqB,IAAD,EACUjI,mBAAS,IADnB,mBACX4K,EADW,aAEY5K,mBAAS,KAFrB,mBAEX0K,EAFW,KAEFC,EAFE,KAIlBrC,qBAAU,WAAM,8CACd,6BAAAjD,EAAA,sEACyBiP,KADzB,OACQ/O,EADR,OAEEoF,EAAWpF,EAASI,WAFtB,4CADc,uBAAC,WAAD,wBAMdmF,KACC,IAEH,IAAMa,EAAY,yCAAG,WAAOlL,GAAP,kBAAA4E,EAAA,2DACK5E,EAAM6I,OADX,EACXxJ,KAAMsJ,EADK,EACLA,OAEEhH,OAAOmS,QAAP,2CAAgDnL,EAAhD,OAHG,gCAMMkL,GAAsBlL,GAN5B,OAOiB,MAPjB,OAOJ3D,UAAUC,QACrB8O,MAAM,mCARS,2CAAH,sDAalB,OACE,kBAAC,GAAD,KACE,kBAACxK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAACT,GAAA,EAAD,CACEU,MAAM,cACN/H,MAAO,CAAEmO,WAAY,UAAWpQ,MAAO,UAEzC,kBAACiK,EAAA,EAAD,KACE,kBAAC,GAAD,CAASxD,KAAM4D,EAAStB,MAAOwB,EAAQvB,SAAUsC,Y,uEC3CxD,IAAMjC,GAAYlK,IAAOiV,GAAV,MCMPC,OAJf,WACE,OAAO,kBAAC,GAAD,sCCoCMV,OApCf,YAA6C,IAA1BlN,EAAyB,EAAzBA,KAAMsC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAE9B,OADAsL,QAAQC,IAAI9N,EAAMsC,GAEhB,6BACE,kBAACD,GAAA,EAAD,CACEC,MAAOA,EACPG,WAAY,CACVzJ,KAAM,gBACNc,GAAI,cAENyI,SAAUA,GAETD,EAAMX,WACL,4BAAQW,MAAOA,EAAMX,YAClBW,EAAMV,cADT,KAC0BU,EAAMX,WADhC,KAIA,4BAAQW,MAAM,IAAd,aAGDtC,EAAKvD,KAAI,SAACqH,EAAQpB,GAAT,OACR,4BAAQC,IAAKD,EAAOJ,MAAOwB,EAAOnC,YAC/BmC,EAAOlC,cADV,KAC2BkC,EAAOnC,WADlC,W,8LCvBH,IAAMiB,GAAYlK,IAAO8B,IAAV,MAETqI,GAAanK,YAAOoK,KAAPpK,CAAH,MC8PvB,IAWeyI,gBAXS,SAACpB,GAAD,MAAY,CAClCkK,0BAA2BjJ,GAAgCjB,OAGlC,SAACzB,GAAD,MAAe,CACxCyP,gBAAiB,SAACzM,EAAaxH,GAAd,OACfwE,EzBrJ0B,SAACT,EAAW/D,GAAZ,gDAAmB,WAAOwE,GAAP,oBAAAC,EAAA,6DACzCyP,EADyC,oCACQnQ,EADR,0BACmC/D,GADnC,kBAGtB0E,MAAM,GAAD,OAAIJ,IAAJ,OAAc4P,GAAqB,CAC7DrO,OAAQ,QAJmC,cAGvClB,EAHuC,gBAMfA,EAASC,OANM,OAMvCuP,EANuC,OAO7C3P,EDlFmD,CACrDZ,KAFsC,2BAGtCC,QAAS,CAAEuQ,WCgFuBD,EAAgBE,YAChD7P,EACEJ,GAA2B,CACzBnE,MAAM,EACNkF,KAAMgP,EAAgBtP,UAAUI,SAChCI,SAAS,EACTD,KAA2C,MAArC+O,EAAgBtP,UAAUC,OAAiB,UAAY,WAbpB,kDAiB7CN,EACEJ,GAA2B,CACzBnE,MAAM,EACNkF,KAAK,mCAAD,aACJC,KAAM,QACNC,SAAS,KAtBgC,0DAAnB,sDyBqJjBiP,CAAe9M,EAAaxH,KACvCoQ,gBAAiB,SAACpQ,EAAI4E,GAAL,OAAcJ,EAASgB,GAAexF,EAAI4E,KAC3DyL,oBAAqB,SAAChM,GAAD,OAAaG,EAASuB,GAAW1B,QAGzCgD,EAzPf,YAKI,IAJF4M,EAIC,EAJDA,gBACA7D,EAGC,EAHDA,gBACAC,EAEC,EAFDA,oBACAF,EACC,EADDA,0BACC,EAsByB/Q,mBArBJ,CACpBF,KAAM,GACN4I,cAAe,GACfD,WAAY,GACZ5C,SAAU,CACRhF,MAAM,EACNsQ,MAAO,GACPnL,KAAM,UACNc,KAAM,KACNW,OAAQ,GACR8D,YAAa,KACbE,YAAa,KACbxG,QAAS,KACTuG,OAAQ,KACR4F,WAAW,EACXC,UAAW,UACXC,WAAY,KACZ5F,UAAU,KAlBb,mBAsBM7E,EAtBN,KAsBa8B,EAtBb,OAuB2B3I,mBAAS,IAvBpC,mBAuBM4K,EAvBN,KAuBcC,EAvBd,OAwB6B7K,mBAAS,IAxBtC,mBAwBM0K,EAxBN,KAwBeC,EAxBf,OAyB6B3K,oBAAS,GAzBtC,mBAyBMiG,EAzBN,KAyBekP,EAzBf,KA2BD7M,qBAAU,WAAM,8CACd,6BAAAjD,EAAA,6DACE8P,GAAW,GADb,SAEyBb,GAA0B,gBAFnD,OAEQ/O,EAFR,OAGEoF,EAAWpF,EAASI,WACpBwP,GAAW,GAJb,4CADc,uBAAC,WAAD,wBAQdrK,KACC,IAEH,IAAMa,EAAY,yCAAG,WAAOlL,GAAP,wBAAA4E,EAAA,+DACK5E,EAAM6I,OADX,EACXxJ,KAAMsJ,EADK,EACLA,MAEd+L,GAAW,GAHQ,SAIIb,GAAiClL,GAJrC,OAIb7D,EAJa,OAMbkD,EAAalD,EAASI,UAAU,GAAG,mCACnC+C,EAAgBnD,EAASI,UAAU,GAAG,uCAE5CkF,EAAU,6BAAKtF,GAAN,IAAgBkD,aAAYC,mBACrCyM,GAAW,GAVQ,2CAAH,sDAaZC,EAAS,SAACzI,EAAM6E,GAAiC,IAAzB6D,EAAwB,wDAC9CxP,EAAW,CACfhF,MAAM,EACNmF,KAAM,UACNuF,YAAa,YACbE,YAAa,qBACb3E,KAAM6F,EAAKP,OAAS,EAAIO,EAAK,GAAKA,EAClClF,OAAQ+J,EACR9F,UAAU,EACVF,OARe,SAQR5K,EAAI0S,GACT3K,EAAS,6BAAK9B,GAAN,IAAahB,SAAU,CAAEuL,WAAW,EAAOvQ,MAAM,MACzD,IAAMuM,EAAeiI,EAAW,6BAEvB/B,GAFuB,IAG1BzO,OzB5EoB,qByB6EpByQ,kBAAmB1U,IAJO,6BAOvB0S,GAPuB,IAQ1BzO,OzB/EsB,uByBgFtB0O,kBAAmB3S,IAGzBqQ,EAAoB,CAClBpQ,MAAM,EACNkF,KAAM,KACNC,KAAM,UACNC,SAAS,IAEX+K,EAAgBpQ,EAAIwM,KAGxBzE,EAAS,6BAAK9B,GAAN,IAAahB,eAOjB4L,EAAuB,SAACzF,EAAa0F,GACzC,OAAOzF,OAAOC,QAAQF,GAAazI,KAAI,YAAoB,IAAD,mBAAjBkG,EAAiB,KAAZkI,EAAY,KACxD,MAA2B,QAApBD,EACH,CACEvC,OAAO,GAAD,OAAK1F,EAAItG,MAAM,OAAO,IAC5BwJ,KAAK,GAAD,OAAKlD,IAHR,eAMAA,EANA,UAMSkI,QAKdQ,EAA2B,WAAwC,IAAvCC,EAAsC,uDAAxB,GAAIV,EAAoB,uCAClEW,EAAc,GACdR,EAAgB,KACdS,EAAWF,EAAY7O,KAAI,SAACyI,GAChC,OAAQqG,EAAcZ,EAAqBzF,EAAa0F,MAG1D,GAAwB,QAApBA,EAA2B,CAC7B,IAAMa,EAAoBjM,KAAKC,UAAU+L,GACtC/E,WAAW,OAAQ,MACnBA,WAAW,OAAQ,MACnBA,WAAW,UAAW,OACtBA,WAAW,MAAO,MAClBA,WAAW,MAAO,MAClBA,WAAW,QAAS,OAEvBsE,EAAgBD,EADhBC,EAAgBvL,KAAKkM,MAAMD,SAG3BV,EAAgBQ,EAGlB,OAAOR,GAGT,SAASD,EAAgBC,GAGvB,IAFA,IAAIC,EAAW,GACTC,EAAW,GACjB,MAA2B9F,OAAOC,QAAQ2F,GAA1C,eAA0D,CAAC,IAAD,sBAAzCzI,GAAyC,WACpD9C,KAAKC,UAAU6C,GAAO8F,SAAS,UAAS4C,EAAW,IACvD,cAAqC7F,OAAOC,QAAQ9C,GAApD,eAA4D,CAAC,IAAD,sBAAhD4I,EAAgD,KAAtCC,EAAsC,KAC1DH,EAASE,GAAYC,EACjBD,EAAS9C,SAAS,SAAS6C,EAASG,KAAKJ,IAGjD,OAAOC,EAGyBnH,EAAOjF,UAAzC,IACMiL,EAAyBhG,EAAOnD,OAahC8N,EAAY,yCAAG,WAAO5I,EAAM6I,GAAb,UAAAnQ,EAAA,0DACHjD,OAAOmS,QAAQ,qCADZ,gCAIXM,EAAgBjK,EAAOnC,WAAYkE,EAAKV,OAAOE,KAAKQ,GAAM,KAJ/C,OAKjB6H,MAAM,sCALW,2CAAH,wDAqBlB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CACE3T,KAAMgG,EAAMhB,SAAShF,KACrBgF,SAAUgB,EAAMhB,SAChBiB,KAAMD,EAAMhB,SAASiB,KACrBW,OAAQZ,EAAMhB,SAAS4B,OACvB8D,YAAa1E,EAAMhB,SAAS0F,YAC5BE,YAAa5E,EAAMhB,SAAS4F,YAC5BxG,QAAS4B,EAAMhB,SAASZ,QACxBuG,OAAQ3E,EAAMhB,SAAS2F,OACvBE,SAAU7E,EAAMhB,SAAS6F,SACzB3D,UAAWgJ,EACX5Q,YAAa,kBAAMwI,EAAS,6BAAK9B,GAAN,IAAahB,SAAU,CAAEhF,MAAM,SAG5D,kBAACmJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,GACb,kBAACH,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,YAClB,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CAASlB,MAAOwB,EAAQ9D,KAAM4D,EAASrB,SAAUsC,QAKzD,kBAAC3B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACI,GAAI,IACZtE,EACC,kBAACuE,EAAA,EAAD,MAEA,kBAACJ,EAAA,EAAD,KACE,kBAAC,GAAD,CAAYC,MAAM,0BAClB,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,CACE3C,MAAOwK,EACLvB,EACA,UAEFnJ,OAAQ0K,EACNvB,EACA,OAEF5C,YAAaoH,EACbnH,aAAcsH,EACd9G,iBAAkB,IAClBC,mBA1DW,CACzB,oDACA,kCACA,6BAwDcC,kBArDU,CACxB,wDACA,sCACA,2C,uECvLE8G,GAAe,CAAEzO,WAAW,EAAOF,KAAM,IAgCzC4O,GAAuB,CAC3B1O,WAAW,EACXF,KAAM,GACNnB,UAAW,GACX8B,OAAQ,GACRE,MAAO,GACPI,UAAW,GACXC,sBAAuB,GACvBrD,UAAW,KACXM,QAAS,CACPpE,MAAM,EACNkF,KAAM,KACNC,KAAM,UACNC,SAAS,ICnDP0P,GAAW,CACfpR,UDMuB,WAAmC,IAAlCsC,EAAiC,uDAAzB4O,GAAcjK,EAAW,uCACjDhH,EAAkBgH,EAAlBhH,KAAMC,EAAY+G,EAAZ/G,QACd,OAAQD,GACN,I3BdkC,yB2BcJ,IACpBD,EAAcE,EAAdF,UACR,OAAO,6BACFsC,GADL,IAEEG,WAAW,EACXF,KAAMvC,IAIV,I3B5BsC,6B2B6BpC,OAAO,6BACFsC,GADL,IAEEG,WAAW,IAIf,I3BxBkC,yB2ByBhC,OAAO,6BACFH,GADL,IAEEG,WAAW,IAIf,QACE,OAAOH,IChCXK,iBDoD8B,WAA2C,IAA1CL,EAAyC,uDAAjC6O,GAAsBlK,EAAW,uCAChEhH,EAAkBgH,EAAlBhH,KAAMC,EAAY+G,EAAZ/G,QACd,OAAQD,GACN,I3B5C0C,iC2B4CJ,IAC5BG,EAAyBF,EAAzBE,UAAWJ,EAAcE,EAAdF,UACnB,OAAO,6BACFsC,GADL,IAEEG,WAAW,EACXF,KAAMvC,EACNoB,UAAWpB,EAAUoB,UACrB8B,OAAQlD,EAAUkD,OAClBE,MAAOpD,EAAUoD,MACjBhD,YACAM,QAAS,CAAEpE,MAAM,EAAOkF,KAAM,KAAMC,KAAM,UAAWC,SAAS,KAIlE,I3BnDF,2C2BmDkD,IACtC1B,EAAsBE,EAAtBF,UAAWM,EAAWJ,EAAXI,OAEnB,M1BpE4B,uB0BoExBA,EACK,6BACFgC,GADL,IAEEmB,sBAAuBzD,EAAUkD,SAI9B,6BACFZ,GADL,IAEEkB,UAAWxD,EAAUkD,SAIzB,I3BxDoC,2B2BwDJ,IACVmO,EAAuBnR,EAAnCuQ,WACR,OAAO,6BACFnO,GADL,IAEEc,MAAOd,EAAMc,MAAMN,QACjB,SAACsF,GAAD,OAAUA,EAAKV,OAAOE,KAAKQ,GAAM,MAAQiJ,OAK/C,I3B5DoC,2B2B4DJ,IAClBC,EAAoCpR,EAAxC7D,GAAuBkV,EAAiBrR,EAAxBM,MAExB,OAAO,6BACF8B,GADL,IAEEY,OAAQZ,EAAMY,OAAOlE,KAAI,SAACwB,GAYxB,OAXIA,EAAMkH,OAAOE,KAAKpH,GAAO,MAAQ8Q,GACnC5J,OAAOC,QAAQnH,GAAOxB,KAAI,YAAiB,IAAfwS,EAAc,oBACxC9J,OAAOC,QAAQ4J,GAAcvS,KAC3B,YAAuC,IAAD,mBAApCyS,EAAoC,KAApBC,EAAoB,KAChCF,EAAS5S,MAAM,MAAM,KAArB,UAA+B6S,EAA/B,OACFjR,EAAMgR,GAAYE,SAMrBlR,KAETY,UAAWkB,EAAMlB,UAAUpC,KAAI,SAACuD,GAY9B,OAXIA,EAAKmF,OAAOE,KAAKrF,GAAM,KAAO+O,GAChC5J,OAAOC,QAAQpF,GAAMvD,KAAI,YAAiB,IAAfwS,EAAc,oBACvC9J,OAAOC,QAAQ4J,GAAcvS,KAC3B,YAAuC,IAAD,mBAApCyS,EAAoC,KAApBC,EAAoB,KAChCF,EAAS5S,MAAM,MAAM,KAArB,UAA+B6S,EAA/B,OACFlP,EAAKiP,GAAYE,SAMpBnP,OAKb,I3B1FyC,gC2B0FJ,IAC3B7B,EAAYR,EAAZQ,QACR,OAAO,6BACF4B,GADL,IAEE5B,YAIJ,I3BrIF,qC2BsII,OAAO,6BACF4B,GADL,IAEEG,WAAW,IAIf,I3B1H0C,iC2B2HxC,OAAO,6BACFH,GADL,IAEEG,WAAW,IAIf,QACE,OAAOH,KCvJPqP,GAAgB,CACpBzM,IAAK,OACL0M,aACAC,gBAAiBC,MAGbC,GAAcC,2BAAgBZ,IAC9Ba,GAAmBC,YAAeP,GAAeI,I,69BCnBxCI,mBAAf,MCeMC,GFOJC,uBAAYJ,GAAkBK,+BAAoBC,2BAAgBC,QEN9DC,GAAYC,YAAaN,IAE/BO,IAASC,OACP,kBAAC,IAAD,CAAUR,MAAOA,IACf,kBAAC,cAAD,CAAa1Q,QAAS,2CAAuB+Q,UAAWA,IACtD,kBAAC,IAAD,CAAeI,SAAS,KACtB,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIxV,UAAWyV,KACjC,kBAAC,IAAD,CACED,KAAK,uBACLxV,UAAWkJ,KAEb,kBAAC,IAAD,CAAOsM,KAAK,qBAAqBxV,UAAWkJ,KAC5C,kBAAC,IAAD,CACEsM,KAAK,yBACLxV,UAAWkJ,KAEb,kBAAC,IAAD,CAAOsM,KAAK,sBAAsBxV,UAAWkJ,KAC7C,kBAAC,IAAD,CACEsM,KAAK,0BACLxV,UAAW0V,KAEb,kBAAC,IAAD,CACEF,KAAK,0BACLxV,UAAW0V,KAEb,kBAAC,IAAD,CACEF,KAAK,iCACLxV,UAAW2V,KAEb,kBAAC,IAAD,CAAO3V,UAAW4S,OAGtB,kBAAC,GAAD,SAINgD,SAASC,eAAe,U,wCCxD1BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.463e3c90.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Wrapper = styled.footer`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  background-color: #636466;\n  justify-content: center;\n`\n\nexport const CopyText = styled.small`\n  font-size: 12px;\n  color: white;\n`\n","import React from 'react'\n\nimport { CopyText, Wrapper } from './styles'\n\nexport default function Footer() {\n  return (\n    <Wrapper>\n      <CopyText>\n        © Copyright - China Three Gorges Brasil Energia Ltda. - Todos os\n        direitos reservados\n      </CopyText>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Button, Menu } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nexport default function MenuButton({ name, children }) {\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleMenu = (event) => setAnchorEl(event.currentTarget)\n\n  const handleClose = () => setAnchorEl(null)\n\n  return (\n    <>\n      <Button\n        color='primary'\n        aria-owns={anchorEl ? 'menu-appbar' : null}\n        aria-haspopup='true'\n        onClick={handleMenu}\n      >\n        {name}\n      </Button>\n      <Menu\n        id='menu-appbar'\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        onClickCapture={handleClose}\n      >\n        {children}\n      </Menu>\n    </>\n  )\n}\n\nMenuButton.propTypes = {\n  name: PropTypes.string,\n  children: PropTypes.any,\n}\n","import { AppBar as MaterialAppBar } from '@material-ui/core'\nimport styled from 'styled-components'\n\nexport const LogoImage = styled.img`\n  display: block;\n  max-width: 132px;\n  height: auto;\n  margin-right: 15px;\n`\n\nexport const AppBar = styled(MaterialAppBar)`\n  && {\n    background: #fff;\n  }\n`\nexport const Actions = styled.div`\n  margin-left: auto;\n`\n","import React from 'react'\n\nimport { MenuItem, Button, Toolbar } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\nimport logo from '../../assets/logo.png'\nimport MenuButton from '../../components/Nav/MenuButton'\nimport { AppBar, LogoImage, Actions } from './styles'\n\nexport default function Header() {\n  const closeWindow = () => {\n    // redirect to anywhere ?\n  }\n\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <NavLink to='/'>\n          <LogoImage src={logo} />\n        </NavLink>\n        <MenuButton name='Metadados'>\n          <MenuItem component={NavLink} to='/metadados/consultar'>\n            Consultar\n          </MenuItem>\n          <MenuItem component={NavLink} to='/metadados/validar'>\n            Validação\n          </MenuItem>\n          <MenuItem component={NavLink} to='/metadados/atualizacao'>\n            Atualização\n          </MenuItem>\n          <MenuItem component={NavLink} to='/metadados/exclusao'>\n            Exclusão\n          </MenuItem>\n        </MenuButton>\n        <MenuButton name='Objetos Geoespaciais'>\n          <MenuItem component={NavLink} to='/geo-espaciais/consulta'>\n            Consulta\n          </MenuItem>\n        </MenuButton>\n        <MenuButton name=' Objetos Tabulares'>\n          <MenuItem component={NavLink} to='/objetos-tabulares/atualizacao'>\n            Atualização\n          </MenuItem>\n        </MenuButton>\n        <Actions>\n          <Button color='primary' component={NavLink} to='/'>\n            Voltar\n          </Button>\n          <Button color='primary' onClick={closeWindow}>\n            Sair\n          </Button>\n        </Actions>\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import styled from 'styled-components'\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  flex: 1;\n`\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Footer from '../Footer'\nimport Header from '../Header'\nimport { ContentWrapper, PageWrapper } from './styles'\n\nconst HEADER_HEIGHT = 50\nconst FOOTER_HEIGHT = 30\n\nfunction BasePage({ children }) {\n  const contentMinHeight = window.innerHeight - (HEADER_HEIGHT + FOOTER_HEIGHT)\n\n  return (\n    <PageWrapper>\n      <Header />\n      <ContentWrapper\n        style={{\n          minHeight: contentMinHeight,\n          marginTop: '20px',\n          padding: '0 10px',\n        }}\n      >\n        {children}\n      </ContentWrapper>\n      <Footer />\n    </PageWrapper>\n  )\n}\n\nBasePage.propTypes = {\n  children: PropTypes.any,\n}\n\nexport default BasePage\n","import React from 'react'\n\nimport L from 'leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n`\n\nexport default class Map extends React.Component {\n  componentDidMount() {\n    const { metadado } = this.props\n\n    const pontoCentral =\n      metadado && metadado['Q - Centro para Zoom (mtt_centro)']\n        ? metadado['Q - Centro para Zoom (mtt_centro)']\n        : null\n    const lat = pontoCentral\n      ? pontoCentral.replace('[', '').replace(/\\s+/g, '').split(',')[0]\n      : -14.235004\n    const long = pontoCentral\n      ? pontoCentral.replace(']', '').replace(/\\s+/g, '').split(',')[1]\n      : -14.235004\n    const zoom =\n      metadado && metadado['M - Nível de Zoom (mtt_nivelzoom)']\n        ? metadado['M - Nível de Zoom (mtt_nivelzoom)']\n        : 3\n    const layer =\n      metadado && metadado['B - Nome da Tabela (mtt_tabela)']\n        ? metadado['B - Nome da Tabela (mtt_tabela)']\n        : ''\n\n    this.map = L.map('map', {\n      center: [lat, long],\n      zoom,\n      zoomControl: true,\n    })\n\n    const basemap = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {})\n    basemap.addTo(this.map)\n\n    L.tileLayer('https://portal.geocart.xyz/geoserver/portalseg/wms', {\n      layers: layer,\n      format: 'image/png',\n      transparent: true,\n      detectRetina: true,\n      maxZoom: 20,\n      maxNativeZoom: 17,\n    }).addTo(this.map)\n  }\n\n  componentDidUpdate() {\n    const { metadado } = this.props\n\n    const pontoCentral =\n      metadado && metadado['Q - Centro para Zoom (mtt_centro)']\n        ? metadado['Q - Centro para Zoom (mtt_centro)']\n        : null\n    const lat = pontoCentral\n      ? pontoCentral.replace('[', '').replace(/\\s+/g, '').split(',')[0]\n      : -14.235004\n    const long = pontoCentral\n      ? pontoCentral.replace(']', '').replace(/\\s+/g, '').split(',')[1]\n      : -14.235004\n    const zoom =\n      metadado && metadado['M - Nível de Zoom (mtt_nivelzoom)']\n        ? metadado['M - Nível de Zoom (mtt_nivelzoom)']\n        : 3\n\n    this.map.setView([lat, long], zoom)\n  }\n\n  render() {\n    return <Wrapper width='100%' height='463px' id='map' />\n  }\n}\n","export const LOAD_METADADOS_IN_PROGRESS = 'LOAD_METADADOS_IN_PROGRESS'\nexport const loadMetadadosInProgress = () => ({\n  type: LOAD_METADADOS_IN_PROGRESS,\n})\n\nexport const LOAD_METADADOS_SUCCESS = 'LOAD_METADADOS_SUCCESS'\nexport const loadMetadadosSuccess = (metadados) => ({\n  type: LOAD_METADADOS_SUCCESS,\n  payload: { metadados },\n})\n\nexport const LOAD_METADADOS_FAILURE = 'LOAD_METADADOS_FAILURE'\nexport const loadMetadadosFailure = () => ({\n  type: LOAD_METADADOS_FAILURE,\n})\n\nexport const LOAD_METADADO_SELECTED_IN_PROGRESS =\n  'LOAD_METADADO_SELECTED_IN_PROGRESS'\nexport const loadMetadadoSelectedInProgress = () => ({\n  type: LOAD_METADADO_SELECTED_IN_PROGRESS,\n})\n\nexport const LOAD_METADADO_SELECTED_SUCCESS = 'LOAD_METADADO_SELECTED_SUCCESS'\nexport const loadMetadadoSelectedSuccess = (mttTabela, metadados) => ({\n  type: LOAD_METADADO_SELECTED_SUCCESS,\n  payload: { mttTabela, metadados },\n})\n\nexport const LOAD_METADADO_SELECTED_SUCCESS_EDITAVEIS =\n  'LOAD_METADADO_SELECTED_SUCCESS_EDITAVEIS'\nexport const loadMetadadoSelectedSuccessEditaveis = (metadados, tabela) => ({\n  type: LOAD_METADADO_SELECTED_SUCCESS_EDITAVEIS,\n  payload: { metadados, tabela },\n})\n\nexport const LOAD_METADADO_SELECTED_FAILURE = 'LOAD_METADADO_SELECTED_FAILURE'\nexport const loadMetadadoSelectedFailure = () => ({\n  type: LOAD_METADADO_SELECTED_FAILURE,\n})\n\nexport const REMOVE_METADADO_SELECTED = 'REMOVE_METADADO_SELECTED'\nexport const removeMetadadoSelected = (metadadoId) => ({\n  type: REMOVE_METADADO_SELECTED,\n  payload: { metadadoId },\n})\n\nexport const UPDATE_METADADO_SELECTED = 'UPDATE_METADADO_SELECTED'\nexport const updateMetadadoSelected = (id, campo) => ({\n  type: UPDATE_METADADO_SELECTED,\n  payload: { id, campo },\n})\n\nexport const SET_METADADO_SELECTED_MESSAGE = 'SET_METADADO_SELECTED_MESSAGE'\nexport const setMetadadoSelectedMessage = (message) => ({\n  type: SET_METADADO_SELECTED_MESSAGE,\n  payload: { message },\n})\n","import {\n  loadMetadadosInProgress,\n  loadMetadadosSuccess,\n  loadMetadadosFailure,\n  loadMetadadoSelectedInProgress,\n  loadMetadadoSelectedSuccess,\n  loadMetadadoSelectedSuccessEditaveis,\n  loadMetadadoSelectedFailure,\n  removeMetadadoSelected,\n  updateMetadadoSelected,\n  setMetadadoSelectedMessage,\n} from '../store/actions/metadados'\n\nconst urlBase = 'http://moduloespacializacao.herokuapp.com/seguranca_barragem'\n\nexport const MTT_METADADOTABELA = 'mtt_metadadotabela'\n\nexport const MTA_METADADOATRIBUTO = 'mta_metadadoatributo'\n\nexport const loadMetadados = () => async (dispatch) => {\n  try {\n    dispatch(loadMetadadosInProgress())\n    const response = await fetch(\n      'http://localhost:8080/seguranca_barragem/metadado/simple'\n    )\n    const metadados = await response.json()\n\n    if (metadados.aresposta.codigo === 200)\n      dispatch(loadMetadadosSuccess(metadados.cabecalho))\n    else throw new Error(metadados.aresposta.mensagem)\n  } catch (e) {\n    dispatch(loadMetadadosFailure())\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a requisição ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const loadMetadadosTotal = () => async (dispatch) => {\n  const loadMetadadosTotalUrl =\n    '/metadado/total?campos=mtt_tabela,mtt_descricao'\n\n  try {\n    dispatch(loadMetadadosInProgress())\n    const response = await fetch(`${urlBase}${loadMetadadosTotalUrl}`)\n    const metadados = await response.json()\n\n    if (metadados.aresposta.codigo === 200)\n      dispatch(loadMetadadosSuccess(metadados.cabecalho))\n    else throw new Error(metadados.aresposta.mensagem)\n\n    dispatch(loadDadoParaValidacao(MTA_METADADOATRIBUTO))\n    dispatch(loadDadoParaValidacao(MTT_METADADOTABELA))\n  } catch (e) {\n    dispatch(loadMetadadosFailure())\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a requisição ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const loadDadoPorExtenso = (mttTabela) => async (dispatch) => {\n  const onTabelaSelectedUrl = `/dado/extenso?mtt_tabela=${mttTabela}&limite=5`\n\n  try {\n    dispatch(loadMetadadoSelectedInProgress())\n    const response = await fetch(`${urlBase}${onTabelaSelectedUrl}`)\n    const metadados = await response.json()\n\n    if (metadados.aresposta.codigo === 200)\n      dispatch(loadMetadadoSelectedSuccess(mttTabela, metadados))\n    else throw new Error(metadados.aresposta.mensagem)\n  } catch (e) {\n    dispatch(loadMetadadoSelectedFailure())\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a requisição ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const loadDadoParaValidacao = (mttTabela) => async (dispatch) => {\n  const onTabelaSelectedUrl = `/dado/extenso?mtt_tabela=${mttTabela}`\n\n  try {\n    const response = await fetch(urlBase + onTabelaSelectedUrl)\n    const metadados = await response.json()\n\n    dispatch(loadMetadadoSelectedSuccessEditaveis(metadados, mttTabela))\n  } catch (e) {\n    dispatch(loadMetadadoSelectedFailure())\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a requisição ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const removeMetadado = (mttTabela, id) => async (dispatch) => {\n  const removeMetadadoUrl = `/dado/excluido?mtt_tabela=${mttTabela}&identificador=${id}`\n  try {\n    const response = await fetch(`${urlBase}${removeMetadadoUrl}`, {\n      method: 'GET', // OR DELETE\n    })\n    const removedMetadado = await response.json()\n    dispatch(removeMetadadoSelected(removedMetadado.excluido))\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: removedMetadado.aresposta.mensagem,\n        loading: false,\n        tipo: removedMetadado.aresposta.codigo === 200 ? 'success' : 'error',\n      })\n    )\n  } catch (e) {\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a exclusão ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const updateMetadado = (id, json) => async (dispatch) => {\n  const updateMetadadoUrl = `/dado/convencional/atualizado`\n  try {\n    const body = JSON.stringify(json)\n    const response = await fetch(`${urlBase}${updateMetadadoUrl}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body,\n    })\n    const updatedMetadado = await response.json()\n    dispatch(updateMetadadoSelected(id, json))\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: updatedMetadado.aresposta.mensagem,\n        loading: false,\n        tipo: updatedMetadado.aresposta.codigo === 200 ? 'success' : 'error',\n      })\n    )\n  } catch (e) {\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a atualizacão ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const setMessage = (message) => async (dispatch) => {\n  dispatch(setMetadadoSelectedMessage(message))\n}\n\nexport const displayAlert = (text) => () => {\n  alert(`Error ${text}`)\n}\n\nexport const validarMetadado = () => async () => {\n  const response = await fetch(urlBase + `/metadado/validado`)\n  return await response.json()\n}\n","import { createSelector } from 'reselect'\n\nexport const getMetadados = (state) => state.metadados.data\nexport const getMetadadosLoading = (state) => state.metadados.isLoading\n\nexport const getMetadadosTotal = (state) => state.metadados.data\nexport const getMetadadosTotalLoading = (state) => state.metadados.isLoading\n\nexport const getMetadadoSelected = (state) => state.metadadoSelected.data\nexport const getMetadadoSelectedLoading = (state) =>\n  state.metadadoSelected.isLoading\n\nexport const getMetadadoSelectedCabecalho = (state) =>\n  state.metadadoSelected.cabecalho\nexport const getMetadadoSelectedCampos = (state) =>\n  state.metadadoSelected.campos\nexport const getMetadadoSelectedDados = (state) => state.metadadoSelected.dados\nexport const getMetadadoSelectedTabela = (state) =>\n  state.metadadoSelected.mttTabela\nexport const getMetadadoSelectedEditaveis = (state) => [\n  ...state.metadadoSelected.editaveis,\n  ...state.metadadoSelected.camposTabelaEditaveis,\n]\nexport const getMetadadoSelectedMessage = (state) =>\n  state.metadadoSelected.message\n\nexport const getIncompleteMetadados = createSelector(\n  getMetadados,\n  (metadados) => metadados.filter((metadado) => !metadado.isCompleted)\n)\n\nexport const getCompleteMetadados = createSelector(getMetadados, (metadados) =>\n  metadados.filter((metadado) => metadado.isCompleted)\n)\n\nexport const getAllMetadados = createSelector(\n  getMetadados,\n  (metadados) => metadados\n)\n\nexport const getAllMetadadosTotal = createSelector(\n  getMetadadosTotal,\n  (metadados) => metadados\n)\n\nexport const getAllMetadadoSelected = createSelector(\n  getMetadadoSelected,\n  (metadados) => metadados\n)\n\nexport const getAllMetadadoSelectedCabecalho = createSelector(\n  getMetadadoSelectedCabecalho,\n  (metadados) => metadados\n)\n\nexport const getAllMetadadoSelectedCampos = createSelector(\n  getMetadadoSelectedCampos,\n  (metadados) => metadados\n)\n\nexport const getAllMetadadoSelectedDados = createSelector(\n  getMetadadoSelectedDados,\n  (metadados) => metadados\n)\n\nexport const getAllMetadadoSelectedTabela = createSelector(\n  getMetadadoSelectedTabela,\n  (metadados) => metadados\n)\n\nexport const getAllMetadadoSelectedMessage = createSelector(\n  getMetadadoSelectedMessage,\n  (metadados) => metadados\n)\n\nexport const getAllMetadadoSelectedEditaveis = createSelector(\n  getMetadadoSelectedEditaveis,\n  (metadados) => metadados\n)\n","import React, { useState, useEffect } from 'react'\n\nimport { NativeSelect } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport {\n  loadMetadadosTotal,\n  loadDadoPorExtenso,\n} from '../../services/metadados'\nimport {\n  getAllMetadadosTotal,\n  getAllMetadadoSelectedTabela,\n} from '../../store/selectors/metadados'\n\nfunction Objetos({\n  metadados,\n  startLoadingMetadados,\n  metadadoSelectedTabela,\n  onTabelaSelected,\n}) {\n  useEffect(() => {\n    startLoadingMetadados()\n  }, [startLoadingMetadados])\n\n  const tabelaSelecionada = metadados.find((metadado) => {\n    return metadado.mtt_tabela === metadadoSelectedTabela\n  })\n\n  const [state, setState] = useState({\n    name: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mtt_descricao: tabelaSelecionada ? tabelaSelecionada.mtt_descricao : '',\n    mtt_tabela: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n  })\n\n  const metadadosSorted = metadados.slice(0)\n  metadadosSorted.sort(function (a, b) {\n    const x = a.mtt_tabela.toLowerCase()\n    const y = b.mtt_tabela.toLowerCase()\n    return x < y ? -1 : x > y ? 1 : 0\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    onTabelaSelected(value)\n    setState({\n      ...state,\n      [name]: value,\n      mtt_tabela: value,\n    })\n  }\n\n  return (\n    <NativeSelect\n      value={state.mtt_descricao}\n      onChange={handleChange}\n      inputProps={{\n        name: 'mtt_descricao',\n        id: 'mtt_tabela',\n      }}\n    >\n      {state.mtt_tabela ? (\n        <option value={state.mtt_tabela}>\n          {state.mtt_descricao} ({state.mtt_tabela})\n        </option>\n      ) : (\n        <option value=''>Selecione</option>\n      )}\n\n      {metadadosSorted.map((metadado, index) => (\n        <option value={metadado.mtt_tabela} key={index}>\n          {metadado.mtt_descricao} ({metadado.mtt_tabela})\n        </option>\n      ))}\n    </NativeSelect>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  metadados: getAllMetadadosTotal(state),\n  metadadoSelectedTabela: getAllMetadadoSelectedTabela(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabelaSelected: (mttTababela) => dispatch(loadDadoPorExtenso(mttTababela)),\n  startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n})\n\nObjetos.propTypes = {\n  metadados: PropTypes.array,\n  onTabelaSelected: PropTypes.func.isRequired,\n  startLoadingMetadados: PropTypes.func.isRequired,\n  metadadoSelectedTabela: PropTypes.string,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Objetos)\n","import { CardHeader as CardHeaderMui } from '@material-ui/core'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  /* width: 100vw; */\n`\n\nexport const CardHeader = styled(CardHeaderMui)`\n  background: #1e74bb;\n  color: #fff;\n`\n","import React from 'react'\n\nimport { Grid, Card, CardContent, CircularProgress } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport { connect, useSelector } from 'react-redux'\n\nimport Map from '../../../components/Map'\nimport Objetos from '../../../components/Objetos'\nimport {\n  getMetadadoSelectedLoading,\n  getAllMetadadoSelectedCabecalho,\n} from '../../../store/selectors/metadados'\nimport { Container, CardHeader } from './styles'\n\nfunction Consulta({ metadadoSelectedCabecalho, isLoadingMetadadoSelected }) {\n  const metadadoSelected = useSelector((state) => state.metadadoSelected)\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        <Grid item>\n          <Card>\n            <CardHeader title='Objetos' />\n            <CardContent>\n              <Objetos />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader title={'Objeto ' + metadadoSelected.mttTabela} />\n            <CardContent>\n              {isLoadingMetadadoSelected ? (\n                <CircularProgress />\n              ) : (\n                <Map metadado={metadadoSelectedCabecalho[0]} />\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n})\n\nconst mapDispatchToProps = () => ({\n  // startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n})\n\nConsulta.propTypes = {\n  metadadoSelectedCabecalho: PropTypes.array,\n  isLoadingMetadadoSelected: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Consulta)\n","import { CardHeader as CardHeaderMui } from '@material-ui/core'\nimport styled from 'styled-components'\n\nexport const Container = styled.div`\n  /* width: 100vw; */\n`\n\nexport const CardHeader = styled(CardHeaderMui)`\n  background: #1e74bb;\n  color: #fff;\n`\n","import React, { useEffect, useState } from 'react'\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  NativeSelect,\n  Button,\n} from '@material-ui/core'\n\nimport Map from '../../../components/Map'\nimport { Container, CardHeader } from './styles'\n\nfunction Inclusao() {\n  const [objetos, setObjetos] = useState([])\n  const [objeto, setObjeto] = useState({ mtt_tabela: '', mtt_descricao: '' })\n\n  useEffect(() => {\n    async function fetchObjetos() {\n      const response = await fetch(\n        'http://moduloespacializacao.herokuapp.com/seguranca_barragem/metadado/total?mtt_tipo=espacial'\n      )\n      setObjetos((await response.json()).cabecalho)\n    }\n\n    fetchObjetos()\n  }, [])\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n\n    setObjeto({\n      mtt_tabela: value,\n    })\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Objetos' />\n            <CardContent>\n              <NativeSelect\n                value={objeto.mtt_descricao}\n                onChange={handleChange}\n                inputProps={{\n                  id: 'mtt_tabela',\n                  name: 'mtt_descricao',\n                }}\n              >\n                {objeto.mtt_tabela ? (\n                  <option value={objeto.mtt_tabela}>\n                    {objeto.mtt_descricao} ({objeto.mtt_tabela})\n                  </option>\n                ) : (\n                  <option value=''>Selecione</option>\n                )}\n\n                {objetos.map((objeto, index) => (\n                  <option key={index} value={objeto.mtt_tabela}>\n                    {objeto.mtt_descricao} ({objeto.mtt_tabela})\n                  </option>\n                ))}\n              </NativeSelect>\n              <div style={{ marginTop: '20px' }}>\n                <Button variant='contained'>Incorporar</Button>\n              </div>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1} style={{ marginTop: '10px' }}>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Objeto a incorporar' />\n            <CardContent>\n              <Map metadado={objeto} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Objeto existente' />\n            <CardContent></CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Inclusao\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import React from 'react'\n\nimport { Container } from './styles'\n\nfunction Metadados() {\n  return (\n    <Container>\n      <h1>Bem vindo ao Módulo de Espacialização</h1>\n    </Container>\n  )\n}\n\nexport default Metadados\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Paper from '@material-ui/core/Paper'\nimport Draggable from 'react-draggable'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\nimport '../Table/scroll.css'\n\nconst PaperComponent = (props) => {\n  return (\n    <Draggable\n      handle='#draggable-dialog-title'\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} style={{ borderTop: '3px solid #318EDA' }} />\n    </Draggable>\n  )\n}\n\nconst CustomDialog = (props) => {\n  const {\n    open,\n    handleClose,\n    labelButton,\n    action,\n    message,\n    dialogTitle,\n    data = [],\n    campos = [],\n    editaveis = [],\n    editData = false,\n  } = props\n\n  const [state, setState] = React.useState({\n    // name: null,\n    // value: null,\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setState({ ...state, [name.split(' (')[1].replace(')', '')]: value })\n  }\n\n  const onCloseDialog = () => {\n    setState({\n      /* name: null, value: null */\n    })\n    handleClose()\n  }\n\n  const isUpdateDisabled = (entry) => {\n    if (!editData) return editData\n\n    // console.log(`Pesquisando? ${entry}`);\n    const elementoEditavel = editaveis.find((currElement) => {\n      // eslint-disable-next-line array-callback-return\n      // eslint-disable-next-line no-unused-vars\n\n      // eslint-disable-next-line no-unused-vars\n      for (const [key, value] of Object.entries(currElement)) {\n        if (entry === `${value})`) return currElement\n      }\n      return null\n    })\n\n    const updateDisabled =\n      elementoEditavel &&\n      elementoEditavel[\n        Object.keys(elementoEditavel)[Object.keys(elementoEditavel).length - 1]\n      ] !== 'sim'\n\n    // console.log(`Editavel? ${elementoEditavel[Object.keys(elementoEditavel)[Object.keys(elementoEditavel).length - 1]]}`);\n\n    return updateDisabled\n  }\n\n  return (\n    <form>\n      <Dialog\n        open={open}\n        onClose={onCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby='draggable-dialog-title'\n      >\n        <DialogTitle style={{ cursor: 'move' }} id='draggable-dialog-title'>\n          {dialogTitle || 'Todos os Dados'}\n        </DialogTitle>\n        <DialogContent>\n          {message ||\n            campos.map((campo) =>\n              !editData ? (\n                <Typography variant='body2' gutterBottom>\n                  <strong>{campo.dado.split(' - ')[1]}: </strong>\n                  {data[campo.dado]}\n                </Typography>\n              ) : (\n                <TextField\n                  name={campo.dado.split(' - ')[1]}\n                  label={campo.dado.split(' - ')[1]}\n                  defaultValue={data[campo.dado]}\n                  InputProps={{\n                    readOnly: isUpdateDisabled(campo.dado.split(' (')[1]),\n                  }}\n                  style={{ width: '100%' }}\n                  onChange={handleChange}\n                />\n              )\n            )}\n        </DialogContent>\n        <DialogActions>\n          {!action ? null : (\n            <Button\n              // disabled={updateDisabled}\n              autoFocus\n              color='primary'\n              onClick={() => {\n                let dataToUpdate = state\n                dataToUpdate = {\n                  ...dataToUpdate,\n                }\n                action(data[Object.keys(data)[0]], dataToUpdate)\n                onCloseDialog()\n              }}\n            >\n              {labelButton || 'None'}\n            </Button>\n          )}\n          <Button autoFocus color='primary' onClick={onCloseDialog}>\n            Fechar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </form>\n  )\n}\n\nexport default CustomDialog\n","import React from 'react'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Delete from '@material-ui/icons/Delete'\nimport Edit from '@material-ui/icons/Edit'\nimport Info from '@material-ui/icons/Info'\n\nimport './scroll.css'\nString.prototype.replaceAll = function (find, replace) {\n  const str = this\n  return str.replace(\n    new RegExp(find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'),\n    replace\n  )\n}\nconst ButtonAction = ({ dado, campos, actionDados, Icon }) => {\n  return !actionDados ? null : (\n    <IconButton\n      color='primary'\n      aria-label='upload picture'\n      component='span'\n      onClick={() => {\n        actionDados(dado, campos)\n      }}\n    >\n      <Icon />\n    </IconButton>\n  )\n}\n\nconst CellAction = ({ dado, campos, infoDados, updateDados, excluirDados }) => {\n  if (!infoDados && !excluirDados && !updateDados) return null\n\n  return (\n    <TableCell align='center' style={{ width: '150px' }}>\n      <ButtonAction\n        dado={dado}\n        campos={campos}\n        actionDados={infoDados}\n        Icon={Info}\n      />\n      <ButtonAction\n        dado={dado}\n        campos={campos}\n        actionDados={updateDados}\n        Icon={Edit}\n      />\n      <ButtonAction\n        dado={dado}\n        campos={campos}\n        actionDados={excluirDados}\n        Icon={Delete}\n      />\n    </TableCell>\n  )\n}\n\nconst TitleAction = ({ infoDados, excluirDados, updateDados }) => {\n  if (!infoDados && !excluirDados && !updateDados) return null\n\n  return <TableCell align='center'>AÇÕES</TableCell>\n}\n\nconst CustomTable = (props) => {\n  const {\n    campos = [],\n    dados,\n    infoDados,\n    excluirDados,\n    updateDados,\n    contentMaxHeight,\n    customFilterCampos = [],\n    customFilterDados = [],\n  } = props\n\n  return (\n    <TableContainer style={{ maxHeight: contentMaxHeight }}>\n      <Table stickyHeader aria-label='sticky table'>\n        <TableHead>\n          <TableRow>\n            {campos.map((campo) =>\n              customFilterCampos.length ? (\n                customFilterCampos.includes(campo.titulo) ? (\n                  <TableCell align='center'>{campo.titulo}</TableCell>\n                ) : null\n              ) : (\n                <TableCell align='center'>{campo.titulo}</TableCell>\n              )\n            )}\n            {campos.length ? (\n              <TitleAction\n                infoDados={infoDados}\n                excluirDados={excluirDados}\n                updateDados={updateDados}\n              />\n            ) : null}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {dados.map((dado) => (\n            <TableRow key={dado.id}>\n              {campos.map((campo) =>\n                customFilterDados.length ? (\n                  customFilterDados.includes(campo.dado) ? (\n                    <TableCell align='center'>{dado[campo.dado]}</TableCell>\n                  ) : null\n                ) : (\n                  <TableCell align='center'>{dado[campo.dado]}</TableCell>\n                )\n              )}\n              <CellAction\n                dado={dado}\n                campos={campos}\n                infoDados={infoDados}\n                updateDados={updateDados}\n                excluirDados={excluirDados}\n              />\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default CustomTable\n","import React from 'react'\n\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\n\nexport default ({ open, handleClose, children, severity }) => (\n  <Snackbar open={open} onClose={handleClose} autoHideDuration={2000}>\n    <Alert onClose={handleClose} variant='filled' severity={severity}>\n      {children}\n    </Alert>\n  </Snackbar>\n)\n","import React, { useEffect } from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControl from '@material-ui/core/FormControl'\nimport Grid from '@material-ui/core/Grid'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport NativeSelect from '@material-ui/core/NativeSelect'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { connect } from 'react-redux'\n\nimport CustomDialog from '../../../components/Dialog'\nimport Map from '../../../components/Map'\nimport CustomTable from '../../../components/Table'\nimport Toast from '../../../components/Toast'\nimport {\n  loadMetadadosTotal,\n  loadDadoPorExtenso,\n  setMessage,\n  updateMetadado,\n} from '../../../services/metadados'\nimport {\n  getMetadadosTotalLoading,\n  getAllMetadadosTotal,\n  getMetadadoSelectedLoading,\n  getAllMetadadoSelectedCabecalho,\n  getAllMetadadoSelectedCampos,\n  getAllMetadadoSelectedDados,\n  getAllMetadadoSelectedTabela,\n  getAllMetadadoSelectedMessage,\n  getAllMetadadoSelectedEditaveis,\n} from '../../../store/selectors/metadados'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '16px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: 520,\n    overflow: 'auto',\n    margin: '8px',\n    borderTop: '2px solid #318EDA',\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  header: {\n    alignItems: 'center',\n    background: '#1E74BB',\n    color: 'white',\n    paddingLeft: '8px',\n    margin: '-16px',\n    lineHeight: '1.5',\n  },\n}))\n\nconst Metadados = ({\n  metadados,\n  metadadoSelectedCabecalho,\n  metadadoSelectedCampos,\n  metadadoSelectedDados,\n  metadadoSelectedTabela,\n  metadadoSelectedMessage,\n  metadadoSelectedEditaveis,\n  onUpdatePressed,\n  onTabelaSelected,\n  onSetMessagePressed,\n  isLoading,\n  isLoadingMetadadoSelected,\n  startLoadingMetadados,\n}) => {\n  useEffect(() => {\n    startLoadingMetadados()\n  }, [startLoadingMetadados])\n\n  const classes = useStyles()\n  const tabelaSelecionada = metadados.find((metadado) => {\n    return metadado.mtt_tabela === metadadoSelectedTabela\n  })\n\n  const [state, setState] = React.useState({\n    name: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mtt_descricao: tabelaSelecionada ? tabelaSelecionada.mtt_descricao : '',\n    mtt_tabela: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mensagem: {\n      open: false,\n      texto: '',\n      tipo: 'success',\n      data: null,\n      campos: [],\n      labelButton: null,\n      dialogTitle: null,\n      message: null,\n      action: null,\n      openToast: false,\n      tipoToast: 'success',\n      textoToast: null,\n      editData: false,\n    },\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    onTabelaSelected(value)\n    setState({\n      ...state,\n      [name]: value,\n      mtt_tabela: value,\n    })\n  }\n\n  const info = (dado, fields) => {\n    const mensagem = {\n      open: true,\n      //texto: `Consultar/Update ${dado.id}`,\n      tipo: 'success',\n      data: dado,\n      campos: fields,\n      editData: false,\n    }\n    setState({ ...state, mensagem })\n  }\n\n  const update = (dado, fields) => {\n    const mensagem = {\n      open: true,\n      //texto: `Consultar/Update ${dado.id}`,\n      tipo: 'success',\n      labelButton: 'Atualizar',\n      dialogTitle: 'Atualizar atributo',\n      data: dado,\n      campos: fields,\n      editData: true,\n      action(id, dadoAlteracao) {\n        setState({ ...state, mensagem: { openToast: false, open: false } })\n        const dataToUpdate = {\n          ...dadoAlteracao,\n          // tabela: state.mtt_tabela,\n          tabela: 'mta_metadadoatributo',\n          mta_identificador: id,\n        }\n        onSetMessagePressed({\n          open: false,\n          text: null,\n          tipo: 'success',\n          loading: true,\n        })\n        onUpdatePressed(id, dataToUpdate)\n      },\n    }\n    setState({ ...state, mensagem })\n  }\n\n  String.prototype.replaceAll = function (find, replace) {\n    const str = this\n    return str.replace(\n      new RegExp(find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'),\n      replace\n    )\n  }\n\n  const createPropertyObject = (currElement, entryPreference) => {\n    return Object.entries(currElement).map(([key, values]) => {\n      return entryPreference === 'key'\n        ? {\n            titulo: `${key.split(' - ')[1]}`,\n            dado: `${key}`,\n          }\n        : {\n            [key]: `${values}`,\n          }\n    })\n  }\n\n  function onGeneratedData(elementsParse) {\n    let jsonData = {}\n    const tempData = []\n    for (const [, value] of Object.entries(elementsParse)) {\n      if (JSON.stringify(value).includes('A - ')) jsonData = {}\n      for (const [keyValue, valueValue] of Object.entries(value)) {\n        jsonData[keyValue] = valueValue\n        if (keyValue.includes('A - ')) tempData.push(jsonData)\n        //console.log(key, value);\n      }\n    }\n    //console.log(tempData);\n    return tempData\n  }\n\n  const createKeyAndValueObjects = (metadadoMap = [], entryPreference) => {\n    let elementsKey = []\n    let elementsParse = null\n    const elements = metadadoMap.map((currElement) => {\n      return (elementsKey = createPropertyObject(currElement, entryPreference))\n    })\n\n    if (entryPreference !== 'key') {\n      const elementsStringify = JSON.stringify(elements)\n        .replaceAll('[[[{', '[{')\n        .replaceAll('}]]]', '}]')\n        .replaceAll('}]],[[{', '},{')\n        .replaceAll('[[{', '[{')\n        .replaceAll('}]]', '}]')\n        .replaceAll('}],[{', '},{')\n      elementsParse = JSON.parse(elementsStringify)\n      elementsParse = onGeneratedData(elementsParse)\n    } else {\n      elementsParse = elementsKey\n    }\n\n    return elementsParse\n  }\n\n  const customFilterCampos = [\n    'Nome Interno do Atributo na Tabela (mta_atributo)',\n    'Descrição (mta_descricao)',\n    'Tipo da Tabela (mta_tipo)',\n  ]\n\n  const customFilterDados = [\n    'B - Nome Interno do Atributo na Tabela (mta_atributo)',\n    'D - Descrição (mta_descricao)',\n    'E - Tipo da Tabela (mta_tipo)',\n  ]\n\n  const loadingMessage = <CircularProgress />\n  const loadingAction = <LinearProgress />\n  const metadadosSorted = metadados.slice(0)\n  metadadosSorted.sort(function (a, b) {\n    const x = a.mtt_tabela.toLowerCase()\n    const y = b.mtt_tabela.toLowerCase()\n    return x < y ? -1 : x > y ? 1 : 0\n  })\n\n  const content = (\n    <>\n      <Toast\n        open={state.mensagem.openToast || metadadoSelectedMessage.open}\n        handleClose={() => {\n          setState({ ...state, mensagem: { openToast: false } })\n          onSetMessagePressed({\n            open: false,\n            text: null,\n            tipo: 'success',\n            loading: false,\n          })\n        }}\n        severity={\n          state.mensagem.openToast\n            ? state.mensagem.tipoToast\n            : metadadoSelectedMessage.tipo\n        }\n      >\n        {state.mensagem.textoToast}\n        {metadadoSelectedMessage.text}\n      </Toast>\n\n      {metadadoSelectedMessage.loading ? loadingAction : null}\n\n      <CustomDialog\n        open={state.mensagem.open}\n        mensagem={state.mensagem}\n        data={state.mensagem.data}\n        campos={state.mensagem.campos}\n        labelButton={state.mensagem.labelButton}\n        dialogTitle={state.mensagem.dialogTitle}\n        message={state.mensagem.message}\n        action={state.mensagem.action}\n        classes={classes}\n        editData={state.mensagem.editData}\n        editaveis={metadadoSelectedEditaveis}\n        handleClose={() => setState({ ...state, mensagem: { open: false } })}\n      />\n\n      <div className={classes.root}>\n        <Grid container justify='center' alignItems='center' spacing={1}>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <div className={classes.header} style={{ marginTop: '-35px' }}>\n                <h3>Objetos</h3>\n              </div>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm container>\n                  <Grid item xs>\n                    <FormControl className={classes.formControl}>\n                      <NativeSelect\n                        value={state.mtt_descricao}\n                        onChange={handleChange}\n                        inputProps={{\n                          name: 'mtt_descricao',\n                          id: 'mtt_tabela',\n                        }}\n                      >\n                        {state.mtt_tabela ? (\n                          <option value={state.mtt_tabela}>\n                            {state.mtt_descricao} ({state.mtt_tabela})\n                          </option>\n                        ) : (\n                          <option value=''>Selecione</option>\n                        )}\n\n                        {metadadosSorted.map((metadado, index) => (\n                          <option value={metadado.mtt_tabela} key={index}>\n                            {metadado.mtt_descricao} ({metadado.mtt_tabela})\n                          </option>\n                        ))}\n                      </NativeSelect>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <div className={classes.header}>\n                <h3>Metadados do Objeto</h3>\n              </div>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm container>\n                  <Grid\n                    item\n                    xs\n                    container\n                    direction='column'\n                    spacing={2}\n                    alignItems='center'\n                    justify='center'\n                  >\n                    <Grid item xs>\n                      {isLoadingMetadadoSelected ? (\n                        loadingMessage\n                      ) : Array.isArray(metadadoSelectedCabecalho) &&\n                        metadadoSelectedCabecalho.length ? (\n                        metadadoSelectedCabecalho.map((currElement) =>\n                          Object.entries(currElement).map(([key, val]) => (\n                            <Typography variant='body2' gutterBottom key={key}>\n                              <strong>{key.split(' - ')[1]}: </strong>\n                              {val}\n                            </Typography>\n                          ))\n                        )\n                      ) : (\n                        <h2 style={{ marginTop: '80px' }}>\n                          {' '}\n                          <strong>Bem vindo ao Módulo de Espacialização</strong>\n                        </h2>\n                      )}\n                      {isLoadingMetadadoSelected ? (\n                        ''\n                      ) : (\n                        <CustomTable\n                          dados={createKeyAndValueObjects(\n                            metadadoSelectedCampos,\n                            'values'\n                          )}\n                          campos={createKeyAndValueObjects(\n                            metadadoSelectedCampos,\n                            'key'\n                          )}\n                          infoDados={info}\n                          updateDados={update}\n                          contentMaxHeight={350}\n                          customFilterCampos={customFilterCampos}\n                          customFilterDados={customFilterDados}\n                        />\n                      )}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <div className={classes.header} style={{ marginTop: '-35px' }}>\n                <h3>Conteúdo do Objeto</h3>\n              </div>\n              <Grid container spacing={2}>\n                <Grid\n                  item\n                  xs={12}\n                  sm\n                  container\n                  alignItems='center'\n                  justify='center'\n                >\n                  {isLoadingMetadadoSelected ? (\n                    loadingMessage\n                  ) : Object.values(metadadoSelectedCabecalho)[0] &&\n                    Object.values(metadadoSelectedCabecalho)[0][\n                      'D - Tipo da Tabela (mtt_tipo)'\n                    ] &&\n                    Object.values(metadadoSelectedCabecalho)[0][\n                      'D - Tipo da Tabela (mtt_tipo)'\n                    ] === 'convencional' ? (\n                    <CustomTable\n                      dados={createKeyAndValueObjects(\n                        metadadoSelectedDados,\n                        'values'\n                      )}\n                      campos={createKeyAndValueObjects(\n                        metadadoSelectedDados,\n                        'key'\n                      )}\n                      infoDados={info} /*excluirDados = {dialogRemove}*/\n                    />\n                  ) : (\n                    <Map\n                      metadado={Object.values(metadadoSelectedCabecalho)[0]}\n                    />\n                  )}\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n\n  return isLoading ? loadingMessage : content\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: getMetadadosTotalLoading(state),\n  metadados: getAllMetadadosTotal(state),\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n  metadadoSelectedCampos: getAllMetadadoSelectedCampos(state),\n  metadadoSelectedDados: getAllMetadadoSelectedDados(state),\n  metadadoSelectedTabela: getAllMetadadoSelectedTabela(state),\n  metadadoSelectedMessage: getAllMetadadoSelectedMessage(state),\n  metadadoSelectedEditaveis: getAllMetadadoSelectedEditaveis(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabelaSelected: (mttTababela) => dispatch(loadDadoPorExtenso(mttTababela)),\n  onUpdatePressed: (id, json) => dispatch(updateMetadado(id, json)),\n  onSetMessagePressed: (message) => dispatch(setMessage(message)),\n  startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Metadados)\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  flex-grow: 1;\n  margin-top: 16px;\n`\nexport const MessageArea = styled.div`\n  margin-top: 25px;\n  border: 2px solid #999;\n  height: 200px;\n  padding: 10px;\n`\n","import React, { useState } from 'react'\n\nimport {\n  Grid,\n  CardHeader,\n  Card,\n  CardContent,\n  Button,\n  FormHelperText,\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\n\nimport { validarMetadado } from '../../../services/metadados'\nimport { Container, MessageArea } from './styles'\n\nconst Validar = ({ validarMetadado }) => {\n  const [text, setText] = useState()\n\n  const handleValidar = async () => {\n    setText(['Em processamento. Pode demorar alguns minutos...'])\n\n    const response = await validarMetadado()\n\n    setText(response.cabecalho)\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader\n              title='Validação'\n              style={{ background: '#1E74BB', color: '#FFF' }}\n            />\n            <CardContent>\n              <Button variant='contained' onClick={handleValidar}>\n                Validar Objetos\n              </Button>\n              <MessageArea>{JSON.stringify(text)}</MessageArea>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst mapStateToProps = () => ({})\n\nconst mapDispatchToProps = (dispatch) => ({\n  validarMetadado: () => dispatch(validarMetadado()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Validar)\n","import { CardHeader as CardHeaderMui } from '@material-ui/core'\nimport styled from 'styled-components'\n\nexport const Container = styled.div``\n\nexport const CardHeader = styled(CardHeaderMui)`\n  background-color: #1e74bb;\n  color: #fff;\n`\n","import React from 'react'\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CircularProgress,\n  TableContainer,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableBody,\n  Button,\n  IconButton,\n  Paper,\n  TextField,\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\nimport PropTypes from 'prop-types'\nimport { connect, useSelector } from 'react-redux'\n\nimport Objetos from '../../../components/Objetos'\nimport {\n  getAllMetadadoSelectedCabecalho,\n  getMetadadoSelectedLoading,\n} from '../../../store/selectors/metadados'\nimport { Container, CardHeader } from './styles'\n\nfunction Atualizacao({ metadadoSelectedCabecalho, isLoadingMetadadoSelected }) {\n  const metadadoSelected = useSelector((state) => state.metadadoSelected)\n\n  const attrKeys = [\n    'A - Identificador Interno (mta_identificador)',\n    'B - Nome Interno do Atributo na Tabela (mta_atributo)',\n    'C - Sequência do Atributo na Tabela (mta_sequencia)',\n    'D - Descrição (mta_descricao)',\n    'E - Tipo do Campo (mta_tipo)',\n    'F - Obrigatoriedade (mta_obrigatoriedade)',\n    'G - Regra de Validação (mta_regravalidacao)',\n    'H - Observação (mta_observacao)',\n    'I - Identificador Interno do Metadado de Tabela (mtt_identificador)',\n    'J - Possibilidade de Edição (mta_editavel)',\n  ]\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <Paper>\n            <Card>\n              <CardHeader title='Objetos' />\n              <CardContent>\n                <Objetos />\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Área de Edição' />\n            <CardContent>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader\n              title={'Metadados do Objeto ' + metadadoSelected.mttTabela}\n            />\n            <CardContent>\n              <div style={{ float: 'right' }}>\n                <Button variant='contained'>Atualizar metadados</Button>\n              </div>\n              {isLoadingMetadadoSelected ? (\n                <CircularProgress />\n              ) : (\n                metadadoSelectedCabecalho.map((currElement) =>\n                  Object.entries(currElement).map(([key, val]) => (\n                    <Typography variant='body2' gutterBottom key={key}>\n                      <strong>{key.split(' - ')[1]}: </strong>\n                      {val}\n                    </Typography>\n                  ))\n                )\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Atributos do Objeto' />\n            <CardContent>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {attrKeys.map((key) => (\n                        <TableCell key={key}>{key.split(' - ')[1]}</TableCell>\n                      ))}\n                      <TableCell>Ações</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {metadadoSelected.campos.map((attr, index) => (\n                      <TableRow hover key={index}>\n                        {attrKeys.map((key) => (\n                          <TableCell key={key}>{attr[key] || 'null'}</TableCell>\n                        ))}\n                        <TableCell>\n                          <IconButton color='primary' component='span'>\n                            <EditIcon />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n})\n\nconst mapDispatchToProps = () => ({\n  // startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n})\n\nAtualizacao.propTypes = {\n  metadadoSelectedCabecalho: PropTypes.array,\n  isLoadingMetadadoSelected: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Atualizacao)\n","import React from 'react'\n\nimport { NativeSelect, CircularProgress } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nfunction Objetos({ data, value, onChange }) {\n  return (\n    <div>\n      {data.length <= 0 ? (\n        <CircularProgress />\n      ) : (\n        <NativeSelect\n          value={value}\n          inputProps={{\n            name: 'mtt_descricao',\n            id: 'mtt_tabela',\n          }}\n          onChange={onChange}\n        >\n          {value.mtt_tabela ? (\n            <option value={value.mtt_tabela}>\n              {value.mtt_descricao} ({value.mtt_tabela})\n            </option>\n          ) : (\n            <option value=''>Selecione o objeto a excluir</option>\n          )}\n\n          {data.map((objeto, index) => (\n            <option key={index} value={objeto.mtt_tabela}>\n              {objeto.mtt_descricao} ({objeto.mtt_tabela})\n            </option>\n          ))}\n        </NativeSelect>\n      )}\n    </div>\n  )\n}\n\nObjetos.propTypes = {\n  value: PropTypes.object,\n  data: PropTypes.array,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default Objetos\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  flex-grow: 1;\n  margin-top: 16px;\n`\n","const URL = 'http://moduloespacializacao.herokuapp.com/seguranca_barragem'\n\nexport const fetchObjetosTotal = async (tipo = '') => {\n  const response = await fetch(`${URL}/metadado/total?mtt_tipo=${tipo}`)\n\n  return await response.json()\n}\n\nexport const fetchObjetoTabelaExtenso = async (tabela = '') => {\n  if (tabela === '') return {}\n\n  const response = await fetch(`${URL}/dado/extenso?mtt_tabela=${tabela}`)\n\n  return await response.json()\n}\n\nexport const fetchObjetoAptoExclusao = async () => {\n  const response = await fetch(`${URL}/metadado/aptoexclusao`)\n\n  return await response.json()\n}\n\nexport const excluirObjeto = async (tabela) => {\n  const response = await fetch(`${URL}/metadado/excluido?mtt_tabela=${tabela}`)\n\n  return await response.json()\n}\n\nexport const excluirElemento = async (tabela, identificador) => {\n  const response = await fetch(\n    `${URL}/dado/excluido?mtt_tabela=${tabela}&identificador=${identificador}`\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport { Grid, Card, CardHeader, CardContent, Button } from '@material-ui/core'\nimport { connect } from 'react-redux'\n\nimport Objetos from './Objetos'\nimport { Container } from './styles'\nimport * as Service from '../../../services/metadados.v2'\n\nfunction Exclusao() {\n  const [objeto, setObjeto] = useState({})\n  const [objetos, setObjetos] = useState([])\n\n  useEffect(() => {\n    async function fetchObjetos() {\n      const response = await Service.fetchObjetoAptoExclusao()\n      setObjetos(response.cabecalho)\n    }\n\n    fetchObjetos()\n  }, [])\n\n  const handleChange = async (event) => {\n    const { name, value } = event.target\n\n    const confirm = window.confirm(`Confirma a exclusão do objeto ${value} ?`)\n\n    if (confirm) {\n      const response = await Service.excluirObjeto(value)\n      if (response.aresposta.codigo === 200) {\n        alert('Objeto excluído com sucesso.')\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader\n              title='Exclusão'\n              style={{ background: '#1E74BB', color: '#FFF' }}\n            />\n            <CardContent>\n              <Objetos data={objetos} value={objeto} onChange={handleChange} />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default connect()(Exclusao)\n","import styled from 'styled-components'\n\nexport const Container = styled.h1``\n","import React from 'react'\n\nimport { Container } from './styles'\n\nfunction NotFound() {\n  return <Container>Página não encontrada!</Container>\n}\n\nexport default NotFound\n","import React from 'react'\n\nimport { NativeSelect } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nfunction Objetos({ data, value, onChange }) {\n  console.log(data, value)\n  return (\n    <div>\n      <NativeSelect\n        value={value}\n        inputProps={{\n          name: 'mtt_descricao',\n          id: 'mtt_tabela',\n        }}\n        onChange={onChange}\n      >\n        {value.mtt_tabela ? (\n          <option value={value.mtt_tabela}>\n            {value.mtt_descricao} ({value.mtt_tabela})\n          </option>\n        ) : (\n          <option value=''>Selecione</option>\n        )}\n\n        {data.map((objeto, index) => (\n          <option key={index} value={objeto.mtt_tabela}>\n            {objeto.mtt_descricao} ({objeto.mtt_tabela})\n          </option>\n        ))}\n      </NativeSelect>\n    </div>\n  )\n}\n\nObjetos.propTypes = {\n  value: PropTypes.object,\n  data: PropTypes.array,\n  onChange: PropTypes.func.isRequired,\n}\n\nexport default Objetos\n","import { CardHeader as CardHeaderMui } from '@material-ui/core'\nimport styled from 'styled-components'\n\nexport const Container = styled.div``\n\nexport const CardHeader = styled(CardHeaderMui)`\n  background-color: #1e74bb;\n  color: #fff;\n`\n","import React, { useState, useEffect } from 'react'\n\nimport { Grid, Card, CardContent, CircularProgress } from '@material-ui/core'\n\nimport { getAllMetadadoSelectedEditaveis } from '../../../store/selectors/metadados'\n\nimport CustomTable from '../../../components/Table'\nimport CustomDialog from '../../../components/Dialog'\nimport * as Service from '../../../services/metadados.v2'\nimport Objetos from './Objetos'\nimport { Container, CardHeader } from './styles'\n\nimport {\n  removeMetadado,\n  setMessage,\n  updateMetadado,\n  MTT_METADADOTABELA,\n  MTA_METADADOATRIBUTO,\n} from '../../../services/metadados'\nimport { connect } from 'react-redux'\n\nfunction ObjetosTabulares({\n  onRemovePressed,\n  onUpdatePressed,\n  onSetMessagePressed,\n  metadadoSelectedEditaveis,\n}) {\n  const INITIAL_STATE = {\n    name: '',\n    mtt_descricao: '',\n    mtt_tabela: '',\n    mensagem: {\n      open: false,\n      texto: '',\n      tipo: 'success',\n      data: null,\n      campos: [],\n      labelButton: null,\n      dialogTitle: null,\n      message: null,\n      action: null,\n      openToast: false,\n      tipoToast: 'success',\n      textoToast: null,\n      editData: false,\n    },\n  }\n\n  const [state, setState] = useState(INITIAL_STATE)\n  const [objeto, setObjeto] = useState({})\n  const [objetos, setObjetos] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    async function fetchObjetos() {\n      setLoading(true)\n      const response = await Service.fetchObjetosTotal('convencional')\n      setObjetos(response.cabecalho)\n      setLoading(false)\n    }\n\n    fetchObjetos()\n  }, [])\n\n  const handleChange = async (event) => {\n    const { name, value } = event.target\n\n    setLoading(true)\n    const response = await Service.fetchObjetoTabelaExtenso(value)\n\n    const mtt_tabela = response.cabecalho[0]['B - Nome da Tabela (mtt_tabela)']\n    const mtt_descricao = response.cabecalho[0]['C - Descrição (mtt_descricao)']\n\n    setObjeto({ ...response, mtt_tabela, mtt_descricao })\n    setLoading(false)\n  }\n\n  const update = (dado, fields, isMttTabela = false) => {\n    const mensagem = {\n      open: true,\n      tipo: 'success',\n      labelButton: 'Atualizar',\n      dialogTitle: 'Atualizar atributo',\n      data: dado.length > 0 ? dado[0] : dado,\n      campos: fields,\n      editData: true,\n      action(id, dadoAlteracao) {\n        setState({ ...state, mensagem: { openToast: false, open: false } })\n        const dataToUpdate = isMttTabela\n          ? {\n              ...dadoAlteracao,\n              tabela: MTT_METADADOTABELA,\n              mtt_identificador: id,\n            }\n          : {\n              ...dadoAlteracao,\n              tabela: MTA_METADADOATRIBUTO,\n              mta_identificador: id,\n            }\n\n        onSetMessagePressed({\n          open: false,\n          text: null,\n          tipo: 'success',\n          loading: true,\n        })\n        onUpdatePressed(id, dataToUpdate)\n      },\n    }\n    setState({ ...state, mensagem })\n  }\n\n  const updateTabela = (dado, fields) => {\n    update(dado, fields, true)\n  }\n\n  const createPropertyObject = (currElement, entryPreference) => {\n    return Object.entries(currElement).map(([key, values]) => {\n      return entryPreference === 'key'\n        ? {\n            titulo: `${key.split(' - ')[1]}`,\n            dado: `${key}`,\n          }\n        : {\n            [key]: `${values}`,\n          }\n    })\n  }\n\n  const createKeyAndValueObjects = (metadadoMap = [], entryPreference) => {\n    let elementsKey = []\n    let elementsParse = null\n    const elements = metadadoMap.map((currElement) => {\n      return (elementsKey = createPropertyObject(currElement, entryPreference))\n    })\n\n    if (entryPreference !== 'key') {\n      const elementsStringify = JSON.stringify(elements)\n        .replaceAll('[[[{', '[{')\n        .replaceAll('}]]]', '}]')\n        .replaceAll('}]],[[{', '},{')\n        .replaceAll('[[{', '[{')\n        .replaceAll('}]]', '}]')\n        .replaceAll('}],[{', '},{')\n      elementsParse = JSON.parse(elementsStringify)\n      elementsParse = onGeneratedData(elementsParse)\n    } else {\n      elementsParse = elementsKey\n    }\n\n    return elementsParse\n  }\n\n  function onGeneratedData(elementsParse) {\n    let jsonData = {}\n    const tempData = []\n    for (const [key, value] of Object.entries(elementsParse)) {\n      if (JSON.stringify(value).includes('A - ')) jsonData = {}\n      for (const [keyValue, valueValue] of Object.entries(value)) {\n        jsonData[keyValue] = valueValue\n        if (keyValue.includes('A - ')) tempData.push(jsonData)\n      }\n    }\n    return tempData\n  }\n\n  const metadadoSelectedCabecalho = objeto.cabecalho ?? []\n  const metadadoSelectedCampos = objeto.campos\n\n  const info = (dado, fields) => {\n    const mensagem = {\n      open: true,\n      tipo: 'success',\n      data: dado,\n      campos: fields,\n      editData: false,\n    }\n    setState({ ...state, mensagem })\n  }\n\n  const handleDelete = async (dado, field) => {\n    const confirm = window.confirm('Por favor, confirme a exclusão')\n\n    if (confirm) {\n      await onRemovePressed(objeto.mtt_tabela, dado[Object.keys(dado)[0]])\n      alert('Exclusão realizada com sucesso.')\n    }\n  }\n\n  const customFilterCampos = [\n    'Nome Interno do Atributo na Tabela (mta_atributo)',\n    'Descrição (mta_descricao)',\n    'Tipo da Tabela (mta_tipo)',\n  ]\n\n  const customFilterDados = [\n    'B - Nome Interno do Atributo na Tabela (mta_atributo)',\n    'D - Descrição (mta_descricao)',\n    'E - Tipo da Tabela (mta_tipo)',\n  ]\n\n  return (\n    <Container>\n      <CustomDialog\n        open={state.mensagem.open}\n        mensagem={state.mensagem}\n        data={state.mensagem.data}\n        campos={state.mensagem.campos}\n        labelButton={state.mensagem.labelButton}\n        dialogTitle={state.mensagem.dialogTitle}\n        message={state.mensagem.message}\n        action={state.mensagem.action}\n        editData={state.mensagem.editData}\n        editaveis={metadadoSelectedEditaveis}\n        handleClose={() => setState({ ...state, mensagem: { open: false } })}\n      />\n\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Objetos' />\n            <CardContent>\n              <Objetos value={objeto} data={objetos} onChange={handleChange} />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <Card>\n              <CardHeader title='Conteúdo do objeto' />\n              <CardContent>\n                <CustomTable\n                  dados={createKeyAndValueObjects(\n                    metadadoSelectedCampos,\n                    'values'\n                  )}\n                  campos={createKeyAndValueObjects(\n                    metadadoSelectedCampos,\n                    'key'\n                  )}\n                  updateDados={update}\n                  excluirDados={handleDelete}\n                  contentMaxHeight={350}\n                  customFilterCampos={customFilterCampos}\n                  customFilterDados={customFilterDados}\n                />\n              </CardContent>\n            </Card>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  metadadoSelectedEditaveis: getAllMetadadoSelectedEditaveis(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRemovePressed: (mttTababela, id) =>\n    dispatch(removeMetadado(mttTababela, id)),\n  onUpdatePressed: (id, json) => dispatch(updateMetadado(id, json)),\n  onSetMessagePressed: (message) => dispatch(setMessage(message)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ObjetosTabulares)\n","import {\n  LOAD_METADADOS_FAILURE,\n  LOAD_METADADOS_IN_PROGRESS,\n  LOAD_METADADOS_SUCCESS,\n  LOAD_METADADO_SELECTED_FAILURE,\n  LOAD_METADADO_SELECTED_IN_PROGRESS,\n  LOAD_METADADO_SELECTED_SUCCESS,\n  LOAD_METADADO_SELECTED_SUCCESS_EDITAVEIS,\n  REMOVE_METADADO_SELECTED,\n  SET_METADADO_SELECTED_MESSAGE,\n  UPDATE_METADADO_SELECTED,\n} from '../actions/metadados'\n\nimport { MTT_METADADOTABELA } from '../../services/metadados'\n\nconst initialState = { isLoading: false, data: [] }\nexport const metadados = (state = initialState, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case LOAD_METADADOS_SUCCESS: {\n      const { metadados } = payload\n      return {\n        ...state,\n        isLoading: false,\n        data: metadados,\n      }\n    }\n\n    case LOAD_METADADOS_IN_PROGRESS: {\n      return {\n        ...state,\n        isLoading: true,\n      }\n    }\n\n    case LOAD_METADADOS_FAILURE: {\n      return {\n        ...state,\n        isLoading: false,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst initialStateSelected = {\n  isLoading: false,\n  data: [],\n  cabecalho: [],\n  campos: [],\n  dados: [],\n  editaveis: [],\n  camposTabelaEditaveis: [],\n  mttTabela: null,\n  message: {\n    open: false,\n    text: null,\n    tipo: 'success',\n    loading: false,\n  },\n}\nexport const metadadoSelected = (state = initialStateSelected, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case LOAD_METADADO_SELECTED_SUCCESS: {\n      const { mttTabela, metadados } = payload\n      return {\n        ...state,\n        isLoading: false,\n        data: metadados,\n        cabecalho: metadados.cabecalho,\n        campos: metadados.campos,\n        dados: metadados.dados,\n        mttTabela,\n        message: { open: false, text: null, tipo: 'success', loading: false },\n      }\n    }\n\n    case LOAD_METADADO_SELECTED_SUCCESS_EDITAVEIS: {\n      const { metadados, tabela } = payload\n\n      if (tabela === MTT_METADADOTABELA) {\n        return {\n          ...state,\n          camposTabelaEditaveis: metadados.campos,\n        }\n      }\n\n      return {\n        ...state,\n        editaveis: metadados.campos,\n      }\n    }\n\n    case REMOVE_METADADO_SELECTED: {\n      const { metadadoId: metadadoIdToRemove } = payload\n      return {\n        ...state,\n        dados: state.dados.filter(\n          (dado) => dado[Object.keys(dado)[0]] !== metadadoIdToRemove\n        ),\n      }\n    }\n\n    case UPDATE_METADADO_SELECTED: {\n      const { id: idToUpdate, campo: campoUpdated } = payload\n\n      return {\n        ...state,\n        campos: state.campos.map((campo) => {\n          if (campo[Object.keys(campo)[0]] === idToUpdate) {\n            Object.entries(campo).map(([keyCampo]) => {\n              Object.entries(campoUpdated).map(\n                ([keyCampoUpdate, valCampoUpdate]) => {\n                  if (keyCampo.split(' (')[1] === `${keyCampoUpdate})`) {\n                    campo[keyCampo] = valCampoUpdate\n                  }\n                }\n              )\n            })\n          }\n          return campo\n        }),\n        cabecalho: state.cabecalho.map((data) => {\n          if (data[Object.keys(data)[0]] == idToUpdate) {\n            Object.entries(data).map(([keyCampo]) => {\n              Object.entries(campoUpdated).map(\n                ([keyCampoUpdate, valCampoUpdate]) => {\n                  if (keyCampo.split(' (')[1] === `${keyCampoUpdate})`) {\n                    data[keyCampo] = valCampoUpdate\n                  }\n                }\n              )\n            })\n          }\n          return data\n        }),\n      }\n    }\n\n    case SET_METADADO_SELECTED_MESSAGE: {\n      const { message } = payload\n      return {\n        ...state,\n        message,\n      }\n    }\n\n    case LOAD_METADADO_SELECTED_IN_PROGRESS: {\n      return {\n        ...state,\n        isLoading: true,\n      }\n    }\n\n    case LOAD_METADADO_SELECTED_FAILURE: {\n      return {\n        ...state,\n        isLoading: false,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistReducer } from 'redux-persist'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport storage from 'redux-persist/lib/storage'\nimport thunk from 'redux-thunk'\n\nimport { metadados, metadadoSelected } from './reducers/metadados'\n\nconst reducers = {\n  metadados,\n  metadadoSelected,\n}\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n}\n\nconst rootReducer = combineReducers(reducers)\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const configureStore = () =>\n  createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  @import url(https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap);\n  @import url(https://fonts.googleapis.com/icon?family=Material+Icons);\n\n  html, body {\n    height: 100vh;\n  }\n    \n  body {\n    margin-top: 0;\n    margin-bottom: 0;\n    margin-left: 0;\n    margin-right: 0.23em;\n    padding: 0;\n    font-family: \"Lato\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n      \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n      \"Helvetica Neue\", sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: #f5f5f5;\n  }\n  \n  * {\n    outline: none;\n    list-style: none;\n    text-decoration: none;\n  }\n\n  *, *:before, *:after {\n    font-family: inherit;\n    box-sizing: inherit;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  }\n`\n","import React from 'react'\n\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/lib/integration/react'\n\nimport BasePage from './layout/BasePage'\nimport * as GeoEspaciais from './pages/GeoEspaciais'\nimport Home from './pages/Home'\nimport * as Metadados from './pages/Metadados'\nimport NotFound from './pages/NotFound'\nimport * as ObjetosTabulares from './pages/ObjetosTabulares'\nimport { configureStore } from './store'\nimport GlobalStyle from './styles/global'\n\nconst store = configureStore()\nconst persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<div>Loading...</div>} persistor={persistor}>\n      <BrowserRouter basename='/'>\n        <BasePage>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route\n              path='/metadados/consultar'\n              component={Metadados.Consultar}\n            />\n            <Route path='/metadados/validar' component={Metadados.Validar} />\n            <Route\n              path='/metadados/atualizacao'\n              component={Metadados.Atualizacao}\n            />\n            <Route path='/metadados/exclusao' component={Metadados.Exclusao} />\n            <Route\n              path='/geo-espaciais/consulta'\n              component={GeoEspaciais.Consulta}\n            />\n            <Route\n              path='/geo-espaciais/inclusao'\n              component={GeoEspaciais.Inclusao}\n            />\n            <Route\n              path='/objetos-tabulares/atualizacao'\n              component={ObjetosTabulares.Atualizacao}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </BasePage>\n        <GlobalStyle />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/logo.cfdf95aa.png\";"],"sourceRoot":""}