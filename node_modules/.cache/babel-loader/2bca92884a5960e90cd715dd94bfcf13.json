{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Grid,Card,CardContent,CircularProgress}from'@material-ui/core';import{getAllMetadadoSelectedEditaveis}from'../../../store/selectors/metadados';import CustomTable from'../../../components/Table';import CustomDialog from'../../../components/Dialog';import*as Service from'../../../services/metadados.v2';import Objetos from'./Objetos';import{Container,CardHeader}from'./styles';import{removeMetadado,setMessage,updateMetadado,MTT_METADADOTABELA,MTA_METADADOATRIBUTO}from'../../../services/metadados';import{connect}from'react-redux';function ObjetosTabulares(_ref){var _objeto$cabecalho;var onRemovePressed=_ref.onRemovePressed,onUpdatePressed=_ref.onUpdatePressed,onSetMessagePressed=_ref.onSetMessagePressed,metadadoSelectedEditaveis=_ref.metadadoSelectedEditaveis;var INITIAL_STATE={name:'',mtt_descricao:'',mtt_tabela:'',mensagem:{open:false,texto:'',tipo:'success',data:null,campos:[],labelButton:null,dialogTitle:null,message:null,action:null,openToast:false,tipoToast:'success',textoToast:null,editData:false}};var _useState=useState(INITIAL_STATE),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),objeto=_useState4[0],setObjeto=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),objetos=_useState6[0],setObjetos=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];useEffect(function(){function fetchObjetos(){return _fetchObjetos.apply(this,arguments);}function _fetchObjetos(){_fetchObjetos=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.next=3;return Service.fetchObjetosTotal('convencional');case 3:response=_context.sent;setObjetos(response.cabecalho);setLoading(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return _fetchObjetos.apply(this,arguments);}fetchObjetos();},[]);var handleChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var _event$target,name,value,response,mtt_tabela,mtt_descricao;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_event$target=event.target,name=_event$target.name,value=_event$target.value;setLoading(true);_context2.next=4;return Service.fetchObjetoTabelaExtenso(value);case 4:response=_context2.sent;mtt_tabela=response.cabecalho[0]['B - Nome da Tabela (mtt_tabela)'];mtt_descricao=response.cabecalho[0]['C - Descrição (mtt_descricao)'];setObjeto(_objectSpread(_objectSpread({},response),{},{mtt_tabela:mtt_tabela,mtt_descricao:mtt_descricao}));setLoading(false);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function handleChange(_x){return _ref2.apply(this,arguments);};}();var update=function update(dado,fields){var isMttTabela=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var mensagem={open:true,tipo:'success',labelButton:'Atualizar',dialogTitle:'Atualizar atributo',data:dado.length>0?dado[0]:dado,campos:fields,editData:true,action:function action(id,dadoAlteracao){setState(_objectSpread(_objectSpread({},state),{},{mensagem:{openToast:false,open:false}}));var dataToUpdate=isMttTabela?_objectSpread(_objectSpread({},dadoAlteracao),{},{tabela:MTT_METADADOTABELA,mtt_identificador:id}):_objectSpread(_objectSpread({},dadoAlteracao),{},{tabela:MTA_METADADOATRIBUTO,mta_identificador:id});onSetMessagePressed({open:false,text:null,tipo:'success',loading:true});onUpdatePressed(id,dataToUpdate);}};setState(_objectSpread(_objectSpread({},state),{},{mensagem:mensagem}));};var updateTabela=function updateTabela(dado,fields){update(dado,fields,true);};var createPropertyObject=function createPropertyObject(currElement,entryPreference){return Object.entries(currElement).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],values=_ref4[1];return entryPreference==='key'?{titulo:\"\".concat(key.split(' - ')[1]),dado:\"\".concat(key)}:_defineProperty({},key,\"\".concat(values));});};var createKeyAndValueObjects=function createKeyAndValueObjects(){var metadadoMap=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var entryPreference=arguments.length>1?arguments[1]:undefined;var elementsKey=[];var elementsParse=null;var elements=metadadoMap.map(function(currElement){return elementsKey=createPropertyObject(currElement,entryPreference);});if(entryPreference!=='key'){var elementsStringify=JSON.stringify(elements).replaceAll('[[[{','[{').replaceAll('}]]]','}]').replaceAll('}]],[[{','},{').replaceAll('[[{','[{').replaceAll('}]]','}]').replaceAll('}],[{','},{');elementsParse=JSON.parse(elementsStringify);elementsParse=onGeneratedData(elementsParse);}else{elementsParse=elementsKey;}return elementsParse;};function onGeneratedData(elementsParse){var jsonData={};var tempData=[];for(var _i=0,_Object$entries=Object.entries(elementsParse);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(JSON.stringify(value).includes('A - '))jsonData={};for(var _i2=0,_Object$entries2=Object.entries(value);_i2<_Object$entries2.length;_i2++){var _Object$entries2$_i=_slicedToArray(_Object$entries2[_i2],2),keyValue=_Object$entries2$_i[0],valueValue=_Object$entries2$_i[1];jsonData[keyValue]=valueValue;if(keyValue.includes('A - '))tempData.push(jsonData);}}return tempData;}var metadadoSelectedCabecalho=(_objeto$cabecalho=objeto.cabecalho)!==null&&_objeto$cabecalho!==void 0?_objeto$cabecalho:[];var metadadoSelectedCampos=objeto.campos;var info=function info(dado,fields){var mensagem={open:true,tipo:'success',data:dado,campos:fields,editData:false};setState(_objectSpread(_objectSpread({},state),{},{mensagem:mensagem}));};var handleDelete=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dado,field){var confirm;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:confirm=window.confirm('Por favor, confirme a exclusão');if(!confirm){_context3.next=5;break;}_context3.next=4;return onRemovePressed(objeto.mtt_tabela,dado[Object.keys(dado)[0]]);case 4:alert('Exclusão realizada com sucesso.');case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function handleDelete(_x2,_x3){return _ref6.apply(this,arguments);};}();var customFilterCampos=['Nome Interno do Atributo na Tabela (mta_atributo)','Descrição (mta_descricao)','Tipo da Tabela (mta_tipo)'];var customFilterDados=['B - Nome Interno do Atributo na Tabela (mta_atributo)','D - Descrição (mta_descricao)','E - Tipo da Tabela (mta_tipo)'];return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(CustomDialog,{open:state.mensagem.open,mensagem:state.mensagem,data:state.mensagem.data,campos:state.mensagem.campos,labelButton:state.mensagem.labelButton,dialogTitle:state.mensagem.dialogTitle,message:state.mensagem.message,action:state.mensagem.action,editData:state.mensagem.editData,editaveis:metadadoSelectedEditaveis,handleClose:function handleClose(){return setState(_objectSpread(_objectSpread({},state),{},{mensagem:{open:false}}));}}),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{title:\"Objetos\"}),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Objetos,{value:objeto,data:objetos,onChange:handleChange}))))),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},loading?/*#__PURE__*/React.createElement(CircularProgress,null):/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{title:\"Conte\\xFAdo do objeto\"}),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(CustomTable,{dados:createKeyAndValueObjects(metadadoSelectedCampos,'values'),campos:createKeyAndValueObjects(metadadoSelectedCampos,'key'),updateDados:update,excluirDados:handleDelete,contentMaxHeight:350,customFilterCampos:customFilterCampos,customFilterDados:customFilterDados}))))));}var mapStateToProps=function mapStateToProps(state){return{metadadoSelectedEditaveis:getAllMetadadoSelectedEditaveis(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onRemovePressed:function onRemovePressed(mttTababela,id){return dispatch(removeMetadado(mttTababela,id));},onUpdatePressed:function onUpdatePressed(id,json){return dispatch(updateMetadado(id,json));},onSetMessagePressed:function onSetMessagePressed(message){return dispatch(setMessage(message));}};};export default connect(mapStateToProps,mapDispatchToProps)(ObjetosTabulares);","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/pages/ObjetosTabulares/Atualizacao/index.js"],"names":["React","useState","useEffect","Grid","Card","CardContent","CircularProgress","getAllMetadadoSelectedEditaveis","CustomTable","CustomDialog","Service","Objetos","Container","CardHeader","removeMetadado","setMessage","updateMetadado","MTT_METADADOTABELA","MTA_METADADOATRIBUTO","connect","ObjetosTabulares","onRemovePressed","onUpdatePressed","onSetMessagePressed","metadadoSelectedEditaveis","INITIAL_STATE","name","mtt_descricao","mtt_tabela","mensagem","open","texto","tipo","data","campos","labelButton","dialogTitle","message","action","openToast","tipoToast","textoToast","editData","state","setState","objeto","setObjeto","objetos","setObjetos","loading","setLoading","fetchObjetos","fetchObjetosTotal","response","cabecalho","handleChange","event","target","value","fetchObjetoTabelaExtenso","update","dado","fields","isMttTabela","length","id","dadoAlteracao","dataToUpdate","tabela","mtt_identificador","mta_identificador","text","updateTabela","createPropertyObject","currElement","entryPreference","Object","entries","map","key","values","titulo","split","createKeyAndValueObjects","metadadoMap","elementsKey","elementsParse","elements","elementsStringify","JSON","stringify","replaceAll","parse","onGeneratedData","jsonData","tempData","includes","keyValue","valueValue","push","metadadoSelectedCabecalho","metadadoSelectedCampos","info","handleDelete","field","confirm","window","keys","alert","customFilterCampos","customFilterDados","mapStateToProps","mapDispatchToProps","dispatch","mttTababela","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Grid, Card, CardContent, CircularProgress } from '@material-ui/core'\n\nimport { getAllMetadadoSelectedEditaveis } from '../../../store/selectors/metadados'\n\nimport CustomTable from '../../../components/Table'\nimport CustomDialog from '../../../components/Dialog'\nimport * as Service from '../../../services/metadados.v2'\nimport Objetos from './Objetos'\nimport { Container, CardHeader } from './styles'\n\nimport {\n  removeMetadado,\n  setMessage,\n  updateMetadado,\n  MTT_METADADOTABELA,\n  MTA_METADADOATRIBUTO,\n} from '../../../services/metadados'\nimport { connect } from 'react-redux'\n\nfunction ObjetosTabulares({\n  onRemovePressed,\n  onUpdatePressed,\n  onSetMessagePressed,\n  metadadoSelectedEditaveis,\n}) {\n  const INITIAL_STATE = {\n    name: '',\n    mtt_descricao: '',\n    mtt_tabela: '',\n    mensagem: {\n      open: false,\n      texto: '',\n      tipo: 'success',\n      data: null,\n      campos: [],\n      labelButton: null,\n      dialogTitle: null,\n      message: null,\n      action: null,\n      openToast: false,\n      tipoToast: 'success',\n      textoToast: null,\n      editData: false,\n    },\n  }\n\n  const [state, setState] = useState(INITIAL_STATE)\n  const [objeto, setObjeto] = useState({})\n  const [objetos, setObjetos] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    async function fetchObjetos() {\n      setLoading(true)\n      const response = await Service.fetchObjetosTotal('convencional')\n      setObjetos(response.cabecalho)\n      setLoading(false)\n    }\n\n    fetchObjetos()\n  }, [])\n\n  const handleChange = async (event) => {\n    const { name, value } = event.target\n\n    setLoading(true)\n    const response = await Service.fetchObjetoTabelaExtenso(value)\n\n    const mtt_tabela = response.cabecalho[0]['B - Nome da Tabela (mtt_tabela)']\n    const mtt_descricao = response.cabecalho[0]['C - Descrição (mtt_descricao)']\n\n    setObjeto({ ...response, mtt_tabela, mtt_descricao })\n    setLoading(false)\n  }\n\n  const update = (dado, fields, isMttTabela = false) => {\n    const mensagem = {\n      open: true,\n      tipo: 'success',\n      labelButton: 'Atualizar',\n      dialogTitle: 'Atualizar atributo',\n      data: dado.length > 0 ? dado[0] : dado,\n      campos: fields,\n      editData: true,\n      action(id, dadoAlteracao) {\n        setState({ ...state, mensagem: { openToast: false, open: false } })\n        const dataToUpdate = isMttTabela\n          ? {\n              ...dadoAlteracao,\n              tabela: MTT_METADADOTABELA,\n              mtt_identificador: id,\n            }\n          : {\n              ...dadoAlteracao,\n              tabela: MTA_METADADOATRIBUTO,\n              mta_identificador: id,\n            }\n\n        onSetMessagePressed({\n          open: false,\n          text: null,\n          tipo: 'success',\n          loading: true,\n        })\n        onUpdatePressed(id, dataToUpdate)\n      },\n    }\n    setState({ ...state, mensagem })\n  }\n\n  const updateTabela = (dado, fields) => {\n    update(dado, fields, true)\n  }\n\n  const createPropertyObject = (currElement, entryPreference) => {\n    return Object.entries(currElement).map(([key, values]) => {\n      return entryPreference === 'key'\n        ? {\n            titulo: `${key.split(' - ')[1]}`,\n            dado: `${key}`,\n          }\n        : {\n            [key]: `${values}`,\n          }\n    })\n  }\n\n  const createKeyAndValueObjects = (metadadoMap = [], entryPreference) => {\n    let elementsKey = []\n    let elementsParse = null\n    const elements = metadadoMap.map((currElement) => {\n      return (elementsKey = createPropertyObject(currElement, entryPreference))\n    })\n\n    if (entryPreference !== 'key') {\n      const elementsStringify = JSON.stringify(elements)\n        .replaceAll('[[[{', '[{')\n        .replaceAll('}]]]', '}]')\n        .replaceAll('}]],[[{', '},{')\n        .replaceAll('[[{', '[{')\n        .replaceAll('}]]', '}]')\n        .replaceAll('}],[{', '},{')\n      elementsParse = JSON.parse(elementsStringify)\n      elementsParse = onGeneratedData(elementsParse)\n    } else {\n      elementsParse = elementsKey\n    }\n\n    return elementsParse\n  }\n\n  function onGeneratedData(elementsParse) {\n    let jsonData = {}\n    const tempData = []\n    for (const [key, value] of Object.entries(elementsParse)) {\n      if (JSON.stringify(value).includes('A - ')) jsonData = {}\n      for (const [keyValue, valueValue] of Object.entries(value)) {\n        jsonData[keyValue] = valueValue\n        if (keyValue.includes('A - ')) tempData.push(jsonData)\n      }\n    }\n    return tempData\n  }\n\n  const metadadoSelectedCabecalho = objeto.cabecalho ?? []\n  const metadadoSelectedCampos = objeto.campos\n\n  const info = (dado, fields) => {\n    const mensagem = {\n      open: true,\n      tipo: 'success',\n      data: dado,\n      campos: fields,\n      editData: false,\n    }\n    setState({ ...state, mensagem })\n  }\n\n  const handleDelete = async (dado, field) => {\n    const confirm = window.confirm('Por favor, confirme a exclusão')\n\n    if (confirm) {\n      await onRemovePressed(objeto.mtt_tabela, dado[Object.keys(dado)[0]])\n      alert('Exclusão realizada com sucesso.')\n    }\n  }\n\n  const customFilterCampos = [\n    'Nome Interno do Atributo na Tabela (mta_atributo)',\n    'Descrição (mta_descricao)',\n    'Tipo da Tabela (mta_tipo)',\n  ]\n\n  const customFilterDados = [\n    'B - Nome Interno do Atributo na Tabela (mta_atributo)',\n    'D - Descrição (mta_descricao)',\n    'E - Tipo da Tabela (mta_tipo)',\n  ]\n\n  return (\n    <Container>\n      <CustomDialog\n        open={state.mensagem.open}\n        mensagem={state.mensagem}\n        data={state.mensagem.data}\n        campos={state.mensagem.campos}\n        labelButton={state.mensagem.labelButton}\n        dialogTitle={state.mensagem.dialogTitle}\n        message={state.mensagem.message}\n        action={state.mensagem.action}\n        editData={state.mensagem.editData}\n        editaveis={metadadoSelectedEditaveis}\n        handleClose={() => setState({ ...state, mensagem: { open: false } })}\n      />\n\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Objetos' />\n            <CardContent>\n              <Objetos value={objeto} data={objetos} onChange={handleChange} />\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <Card>\n              <CardHeader title='Conteúdo do objeto' />\n              <CardContent>\n                <CustomTable\n                  dados={createKeyAndValueObjects(\n                    metadadoSelectedCampos,\n                    'values'\n                  )}\n                  campos={createKeyAndValueObjects(\n                    metadadoSelectedCampos,\n                    'key'\n                  )}\n                  updateDados={update}\n                  excluirDados={handleDelete}\n                  contentMaxHeight={350}\n                  customFilterCampos={customFilterCampos}\n                  customFilterDados={customFilterDados}\n                />\n              </CardContent>\n            </Card>\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  metadadoSelectedEditaveis: getAllMetadadoSelectedEditaveis(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRemovePressed: (mttTababela, id) =>\n    dispatch(removeMetadado(mttTababela, id)),\n  onUpdatePressed: (id, json) => dispatch(updateMetadado(id, json)),\n  onSetMessagePressed: (message) => dispatch(setMessage(message)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ObjetosTabulares)\n"]},"metadata":{},"sourceType":"module"}