{"ast":null,"code":"import{applyMiddleware,combineReducers,createStore}from'redux';import{composeWithDevTools}from'redux-devtools-extension';import{persistReducer}from'redux-persist';import autoMergeLevel2 from'redux-persist/lib/stateReconciler/autoMergeLevel2';import storage from'redux-persist/lib/storage';import thunk from'redux-thunk';import{metadados,metadadoSelected}from'./reducers/metadados';var reducers={metadados:metadados,metadadoSelected:metadadoSelected};var persistConfig={key:'root',storage:storage,stateReconciler:autoMergeLevel2};var rootReducer=combineReducers(reducers);var persistedReducer=persistReducer(persistConfig,rootReducer);export var configureStore=function configureStore(){return createStore(persistedReducer,composeWithDevTools(applyMiddleware(thunk)));};","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/store/index.js"],"names":["applyMiddleware","combineReducers","createStore","composeWithDevTools","persistReducer","autoMergeLevel2","storage","thunk","metadados","metadadoSelected","reducers","persistConfig","key","stateReconciler","rootReducer","persistedReducer","configureStore"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,eAA1B,CAA2CC,WAA3C,KAA8D,OAA9D,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mDAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CAEA,OAASC,SAAT,CAAoBC,gBAApB,KAA4C,sBAA5C,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACfF,SAAS,CAATA,SADe,CAEfC,gBAAgB,CAAhBA,gBAFe,CAAjB,CAKA,GAAME,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,MADe,CAEpBN,OAAO,CAAPA,OAFoB,CAGpBO,eAAe,CAAER,eAHG,CAAtB,CAMA,GAAMS,CAAAA,WAAW,CAAGb,eAAe,CAACS,QAAD,CAAnC,CACA,GAAMK,CAAAA,gBAAgB,CAAGX,cAAc,CAACO,aAAD,CAAgBG,WAAhB,CAAvC,CAEA,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAC5Bd,CAAAA,WAAW,CAACa,gBAAD,CAAmBZ,mBAAmB,CAACH,eAAe,CAACO,KAAD,CAAhB,CAAtC,CADiB,EAAvB","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistReducer } from 'redux-persist'\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2'\nimport storage from 'redux-persist/lib/storage'\nimport thunk from 'redux-thunk'\n\nimport { metadados, metadadoSelected } from './reducers/metadados'\n\nconst reducers = {\n  metadados,\n  metadadoSelected,\n}\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n}\n\nconst rootReducer = combineReducers(reducers)\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const configureStore = () =>\n  createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\n"]},"metadata":{},"sourceType":"module"}