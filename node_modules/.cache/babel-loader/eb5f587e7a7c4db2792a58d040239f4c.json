{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{loadMetadadosInProgress,loadMetadadosSuccess,loadMetadadosFailure,loadMetadadoSelectedInProgress,loadMetadadoSelectedSuccess,loadMetadadoSelectedSuccessEditaveis,loadMetadadoSelectedFailure,removeMetadadoSelected,updateMetadadoSelected,setMetadadoSelectedMessage}from'../store/actions/metadados';var urlBase='http://moduloespacializacao.herokuapp.com/seguranca_barragem';export var MTT_METADADOTABELA='mtt_metadadotabela';export var MTA_METADADOATRIBUTO='mta_metadadoatributo';export var loadMetadados=function loadMetadados(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,metadados;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(loadMetadadosInProgress());_context.next=4;return fetch('http://localhost:8080/seguranca_barragem/metadado/simple');case 4:response=_context.sent;_context.next=7;return response.json();case 7:metadados=_context.sent;if(!(metadados.aresposta.codigo===200)){_context.next=12;break;}dispatch(loadMetadadosSuccess(metadados.cabecalho));_context.next=13;break;case 12:throw new Error(metadados.aresposta.mensagem);case 13:_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);dispatch(loadMetadadosFailure());dispatch(setMetadadoSelectedMessage({open:true,text:\"Erro ao processar a requisi\\xE7\\xE3o \".concat(_context.t0),tipo:'error',loading:false}));case 19:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var loadMetadadosTotal=function loadMetadadosTotal(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var loadMetadadosTotalUrl,response,metadados;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:loadMetadadosTotalUrl='/metadado/total?campos=mtt_tabela,mtt_descricao';_context2.prev=1;dispatch(loadMetadadosInProgress());_context2.next=5;return fetch(\"\".concat(urlBase).concat(loadMetadadosTotalUrl));case 5:response=_context2.sent;_context2.next=8;return response.json();case 8:metadados=_context2.sent;if(!(metadados.aresposta.codigo===200)){_context2.next=13;break;}dispatch(loadMetadadosSuccess(metadados.cabecalho));_context2.next=14;break;case 13:throw new Error(metadados.aresposta.mensagem);case 14:dispatch(loadDadoParaValidacao(MTA_METADADOATRIBUTO));dispatch(loadDadoParaValidacao(MTT_METADADOTABELA));_context2.next=22;break;case 18:_context2.prev=18;_context2.t0=_context2[\"catch\"](1);dispatch(loadMetadadosFailure());dispatch(setMetadadoSelectedMessage({open:true,text:\"Erro ao processar a requisi\\xE7\\xE3o \".concat(_context2.t0),tipo:'error',loading:false}));case 22:case\"end\":return _context2.stop();}}},_callee2,null,[[1,18]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var loadDadoPorExtenso=function loadDadoPorExtenso(mttTabela){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var onTabelaSelectedUrl,response,metadados;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:onTabelaSelectedUrl=\"/dado/extenso?mtt_tabela=\".concat(mttTabela,\"&limite=5\");_context3.prev=1;dispatch(loadMetadadoSelectedInProgress());_context3.next=5;return fetch(\"\".concat(urlBase).concat(onTabelaSelectedUrl));case 5:response=_context3.sent;_context3.next=8;return response.json();case 8:metadados=_context3.sent;if(!(metadados.aresposta.codigo===200)){_context3.next=13;break;}dispatch(loadMetadadoSelectedSuccess(mttTabela,metadados));_context3.next=14;break;case 13:throw new Error(metadados.aresposta.mensagem);case 14:_context3.next=20;break;case 16:_context3.prev=16;_context3.t0=_context3[\"catch\"](1);dispatch(loadMetadadoSelectedFailure());dispatch(setMetadadoSelectedMessage({open:true,text:\"Erro ao processar a requisi\\xE7\\xE3o \".concat(_context3.t0),tipo:'error',loading:false}));case 20:case\"end\":return _context3.stop();}}},_callee3,null,[[1,16]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var loadDadoParaValidacao=function loadDadoParaValidacao(mttTabela){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var onTabelaSelectedUrl,response,metadados;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:onTabelaSelectedUrl=\"/dado/extenso?mtt_tabela=\".concat(mttTabela);_context4.prev=1;_context4.next=4;return fetch(urlBase+onTabelaSelectedUrl);case 4:response=_context4.sent;_context4.next=7;return response.json();case 7:metadados=_context4.sent;dispatch(loadMetadadoSelectedSuccessEditaveis(metadados,mttTabela));_context4.next=15;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](1);dispatch(loadMetadadoSelectedFailure());dispatch(setMetadadoSelectedMessage({open:true,text:\"Erro ao processar a requisi\\xE7\\xE3o \".concat(_context4.t0),tipo:'error',loading:false}));case 15:case\"end\":return _context4.stop();}}},_callee4,null,[[1,11]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var removeMetadado=function removeMetadado(mttTabela,id){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var removeMetadadoUrl,response,removedMetadado;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:removeMetadadoUrl=\"/dado/excluido?mtt_tabela=\".concat(mttTabela,\"&identificador=\").concat(id);_context5.prev=1;_context5.next=4;return fetch(\"\".concat(urlBase).concat(removeMetadadoUrl),{method:'GET'// OR DELETE\n});case 4:response=_context5.sent;_context5.next=7;return response.json();case 7:removedMetadado=_context5.sent;dispatch(removeMetadadoSelected(removedMetadado.excluido));dispatch(setMetadadoSelectedMessage({open:true,text:removedMetadado.aresposta.mensagem,loading:false,tipo:removedMetadado.aresposta.codigo===200?'success':'error'}));_context5.next=15;break;case 12:_context5.prev=12;_context5.t0=_context5[\"catch\"](1);dispatch(setMetadadoSelectedMessage({open:true,text:\"Erro ao processar a exclus\\xE3o \".concat(_context5.t0),tipo:'error',loading:false}));case 15:case\"end\":return _context5.stop();}}},_callee5,null,[[1,12]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var updateMetadado=function updateMetadado(id,json){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var updateMetadadoUrl,body,response,updatedMetadado;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:updateMetadadoUrl=\"/dado/convencional/atualizado\";_context6.prev=1;body=JSON.stringify(json);_context6.next=5;return fetch(\"\".concat(urlBase).concat(updateMetadadoUrl),{headers:{'Content-Type':'application/json'},method:'POST',body:body});case 5:response=_context6.sent;_context6.next=8;return response.json();case 8:updatedMetadado=_context6.sent;dispatch(updateMetadadoSelected(id,json));dispatch(setMetadadoSelectedMessage({open:true,text:updatedMetadado.aresposta.mensagem,loading:false,tipo:updatedMetadado.aresposta.codigo===200?'success':'error'}));_context6.next=16;break;case 13:_context6.prev=13;_context6.t0=_context6[\"catch\"](1);dispatch(setMetadadoSelectedMessage({open:true,text:\"Erro ao processar a atualizac\\xE3o \".concat(_context6.t0),tipo:'error',loading:false}));case 16:case\"end\":return _context6.stop();}}},_callee6,null,[[1,13]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var setMessage=function setMessage(message){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:dispatch(setMetadadoSelectedMessage(message));case 1:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x7){return _ref7.apply(this,arguments);};}();};export var displayAlert=function displayAlert(text){return function(){alert(\"Error \".concat(text));};};export var validarMetadado=function validarMetadado(){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var response;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return fetch(urlBase+\"/metadado/validado\");case 2:response=_context8.sent;_context8.next=5;return response.json();case 5:return _context8.abrupt(\"return\",_context8.sent);case 6:case\"end\":return _context8.stop();}}},_callee8);}));};","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/services/metadados.js"],"names":["loadMetadadosInProgress","loadMetadadosSuccess","loadMetadadosFailure","loadMetadadoSelectedInProgress","loadMetadadoSelectedSuccess","loadMetadadoSelectedSuccessEditaveis","loadMetadadoSelectedFailure","removeMetadadoSelected","updateMetadadoSelected","setMetadadoSelectedMessage","urlBase","MTT_METADADOTABELA","MTA_METADADOATRIBUTO","loadMetadados","dispatch","fetch","response","json","metadados","aresposta","codigo","cabecalho","Error","mensagem","open","text","tipo","loading","loadMetadadosTotal","loadMetadadosTotalUrl","loadDadoParaValidacao","loadDadoPorExtenso","mttTabela","onTabelaSelectedUrl","removeMetadado","id","removeMetadadoUrl","method","removedMetadado","excluido","updateMetadado","updateMetadadoUrl","body","JSON","stringify","headers","updatedMetadado","setMessage","message","displayAlert","alert","validarMetadado"],"mappings":"yVAAA,OACEA,uBADF,CAEEC,oBAFF,CAGEC,oBAHF,CAIEC,8BAJF,CAKEC,2BALF,CAMEC,oCANF,CAOEC,2BAPF,CAQEC,sBARF,CASEC,sBATF,CAUEC,0BAVF,KAWO,4BAXP,CAaA,GAAMC,CAAAA,OAAO,CAAG,8DAAhB,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,oBAA3B,CAEP,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,sBAA7B,CAEP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,kGAAM,iBAAOC,QAAP,yJAE/BA,QAAQ,CAACd,uBAAuB,EAAxB,CAAR,CAF+B,sBAGRe,CAAAA,KAAK,CAC1B,0DAD0B,CAHG,QAGzBC,QAHyB,qCAMPA,CAAAA,QAAQ,CAACC,IAAT,EANO,QAMzBC,SANyB,oBAQ3BA,SAAS,CAACC,SAAV,CAAoBC,MAApB,GAA+B,GARJ,2BAS7BN,QAAQ,CAACb,oBAAoB,CAACiB,SAAS,CAACG,SAAX,CAArB,CAAR,CAT6B,oCAUpB,IAAIC,CAAAA,KAAJ,CAAUJ,SAAS,CAACC,SAAV,CAAoBI,QAA9B,CAVoB,0FAY/BT,QAAQ,CAACZ,oBAAoB,EAArB,CAAR,CACAY,QAAQ,CACNL,0BAA0B,CAAC,CACzBe,IAAI,CAAE,IADmB,CAEzBC,IAAI,4DAFqB,CAGzBC,IAAI,CAAE,OAHmB,CAIzBC,OAAO,CAAE,KAJgB,CAAD,CADpB,CAAR,CAb+B,qEAAN,gEAAtB,CAwBP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,mGAAM,kBAAOd,QAAP,mKAChCe,qBADgC,CAEpC,iDAFoC,kBAKpCf,QAAQ,CAACd,uBAAuB,EAAxB,CAAR,CALoC,uBAMbe,CAAAA,KAAK,WAAIL,OAAJ,SAAcmB,qBAAd,EANQ,QAM9Bb,QAN8B,uCAOZA,CAAAA,QAAQ,CAACC,IAAT,EAPY,QAO9BC,SAP8B,qBAShCA,SAAS,CAACC,SAAV,CAAoBC,MAApB,GAA+B,GATC,4BAUlCN,QAAQ,CAACb,oBAAoB,CAACiB,SAAS,CAACG,SAAX,CAArB,CAAR,CAVkC,qCAWzB,IAAIC,CAAAA,KAAJ,CAAUJ,SAAS,CAACC,SAAV,CAAoBI,QAA9B,CAXyB,SAapCT,QAAQ,CAACgB,qBAAqB,CAAClB,oBAAD,CAAtB,CAAR,CACAE,QAAQ,CAACgB,qBAAqB,CAACnB,kBAAD,CAAtB,CAAR,CAdoC,qFAgBpCG,QAAQ,CAACZ,oBAAoB,EAArB,CAAR,CACAY,QAAQ,CACNL,0BAA0B,CAAC,CACzBe,IAAI,CAAE,IADmB,CAEzBC,IAAI,6DAFqB,CAGzBC,IAAI,CAAE,OAHmB,CAIzBC,OAAO,CAAE,KAJgB,CAAD,CADpB,CAAR,CAjBoC,uEAAN,kEAA3B,CA4BP,MAAO,IAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,SAAD,kGAAe,kBAAOlB,QAAP,iKACzCmB,mBADyC,oCACSD,SADT,+BAI7ClB,QAAQ,CAACX,8BAA8B,EAA/B,CAAR,CAJ6C,uBAKtBY,CAAAA,KAAK,WAAIL,OAAJ,SAAcuB,mBAAd,EALiB,QAKvCjB,QALuC,uCAMrBA,CAAAA,QAAQ,CAACC,IAAT,EANqB,QAMvCC,SANuC,qBAQzCA,SAAS,CAACC,SAAV,CAAoBC,MAApB,GAA+B,GARU,4BAS3CN,QAAQ,CAACV,2BAA2B,CAAC4B,SAAD,CAAYd,SAAZ,CAA5B,CAAR,CAT2C,qCAUlC,IAAII,CAAAA,KAAJ,CAAUJ,SAAS,CAACC,SAAV,CAAoBI,QAA9B,CAVkC,8FAY7CT,QAAQ,CAACR,2BAA2B,EAA5B,CAAR,CACAQ,QAAQ,CACNL,0BAA0B,CAAC,CACzBe,IAAI,CAAE,IADmB,CAEzBC,IAAI,6DAFqB,CAGzBC,IAAI,CAAE,OAHmB,CAIzBC,OAAO,CAAE,KAJgB,CAAD,CADpB,CAAR,CAb6C,uEAAf,kEAA3B,CAwBP,MAAO,IAAMG,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACE,SAAD,kGAAe,kBAAOlB,QAAP,iKAC5CmB,mBAD4C,oCACMD,SADN,0CAIzBjB,CAAAA,KAAK,CAACL,OAAO,CAAGuB,mBAAX,CAJoB,QAI1CjB,QAJ0C,uCAKxBA,CAAAA,QAAQ,CAACC,IAAT,EALwB,QAK1CC,SAL0C,gBAOhDJ,QAAQ,CAACT,oCAAoC,CAACa,SAAD,CAAYc,SAAZ,CAArC,CAAR,CAPgD,qFAShDlB,QAAQ,CAACR,2BAA2B,EAA5B,CAAR,CACAQ,QAAQ,CACNL,0BAA0B,CAAC,CACzBe,IAAI,CAAE,IADmB,CAEzBC,IAAI,6DAFqB,CAGzBC,IAAI,CAAE,OAHmB,CAIzBC,OAAO,CAAE,KAJgB,CAAD,CADpB,CAAR,CAVgD,uEAAf,kEAA9B,CAqBP,MAAO,IAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,SAAD,CAAYG,EAAZ,kGAAmB,kBAAOrB,QAAP,qKACzCsB,iBADyC,qCACQJ,SADR,2BACmCG,EADnC,0CAGtBpB,CAAAA,KAAK,WAAIL,OAAJ,SAAc0B,iBAAd,EAAmC,CAC7DC,MAAM,CAAE,KAAO;AAD8C,CAAnC,CAHiB,QAGvCrB,QAHuC,uCAMfA,CAAAA,QAAQ,CAACC,IAAT,EANe,QAMvCqB,eANuC,gBAO7CxB,QAAQ,CAACP,sBAAsB,CAAC+B,eAAe,CAACC,QAAjB,CAAvB,CAAR,CACAzB,QAAQ,CACNL,0BAA0B,CAAC,CACzBe,IAAI,CAAE,IADmB,CAEzBC,IAAI,CAAEa,eAAe,CAACnB,SAAhB,CAA0BI,QAFP,CAGzBI,OAAO,CAAE,KAHgB,CAIzBD,IAAI,CAAEY,eAAe,CAACnB,SAAhB,CAA0BC,MAA1B,GAAqC,GAArC,CAA2C,SAA3C,CAAuD,OAJpC,CAAD,CADpB,CAAR,CAR6C,qFAiB7CN,QAAQ,CACNL,0BAA0B,CAAC,CACzBe,IAAI,CAAE,IADmB,CAEzBC,IAAI,wDAFqB,CAGzBC,IAAI,CAAE,OAHmB,CAIzBC,OAAO,CAAE,KAJgB,CAAD,CADpB,CAAR,CAjB6C,uEAAnB,kEAAvB,CA4BP,MAAO,IAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACL,EAAD,CAAKlB,IAAL,kGAAc,kBAAOH,QAAP,0KACpC2B,iBADoC,kDAGlCC,IAHkC,CAG3BC,IAAI,CAACC,SAAL,CAAe3B,IAAf,CAH2B,wBAIjBF,CAAAA,KAAK,WAAIL,OAAJ,SAAc+B,iBAAd,EAAmC,CAC7DI,OAAO,CAAE,CACP,eAAgB,kBADT,CADoD,CAI7DR,MAAM,CAAE,MAJqD,CAK7DK,IAAI,CAAJA,IAL6D,CAAnC,CAJY,QAIlC1B,QAJkC,uCAWVA,CAAAA,QAAQ,CAACC,IAAT,EAXU,QAWlC6B,eAXkC,gBAYxChC,QAAQ,CAACN,sBAAsB,CAAC2B,EAAD,CAAKlB,IAAL,CAAvB,CAAR,CACAH,QAAQ,CACNL,0BAA0B,CAAC,CACzBe,IAAI,CAAE,IADmB,CAEzBC,IAAI,CAAEqB,eAAe,CAAC3B,SAAhB,CAA0BI,QAFP,CAGzBI,OAAO,CAAE,KAHgB,CAIzBD,IAAI,CAAEoB,eAAe,CAAC3B,SAAhB,CAA0BC,MAA1B,GAAqC,GAArC,CAA2C,SAA3C,CAAuD,OAJpC,CAAD,CADpB,CAAR,CAbwC,qFAsBxCN,QAAQ,CACNL,0BAA0B,CAAC,CACzBe,IAAI,CAAE,IADmB,CAEzBC,IAAI,2DAFqB,CAGzBC,IAAI,CAAE,OAHmB,CAIzBC,OAAO,CAAE,KAJgB,CAAD,CADpB,CAAR,CAtBwC,uEAAd,kEAAvB,CAiCP,MAAO,IAAMoB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,kGAAa,kBAAOlC,QAAP,sHACrCA,QAAQ,CAACL,0BAA0B,CAACuC,OAAD,CAA3B,CAAR,CADqC,wDAAb,kEAAnB,CAIP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACxB,IAAD,QAAU,WAAM,CAC1CyB,KAAK,iBAAUzB,IAAV,EAAL,CACD,CAF2B,EAArB,CAIP,MAAO,IAAM0B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,8EAAM,4KACZpC,CAAAA,KAAK,CAACL,OAAO,qBAAR,CADO,QAC7BM,QAD6B,uCAEtBA,CAAAA,QAAQ,CAACC,IAAT,EAFsB,iHAAN,IAAxB","sourcesContent":["import {\n  loadMetadadosInProgress,\n  loadMetadadosSuccess,\n  loadMetadadosFailure,\n  loadMetadadoSelectedInProgress,\n  loadMetadadoSelectedSuccess,\n  loadMetadadoSelectedSuccessEditaveis,\n  loadMetadadoSelectedFailure,\n  removeMetadadoSelected,\n  updateMetadadoSelected,\n  setMetadadoSelectedMessage,\n} from '../store/actions/metadados'\n\nconst urlBase = 'http://moduloespacializacao.herokuapp.com/seguranca_barragem'\n\nexport const MTT_METADADOTABELA = 'mtt_metadadotabela'\n\nexport const MTA_METADADOATRIBUTO = 'mta_metadadoatributo'\n\nexport const loadMetadados = () => async (dispatch) => {\n  try {\n    dispatch(loadMetadadosInProgress())\n    const response = await fetch(\n      'http://localhost:8080/seguranca_barragem/metadado/simple'\n    )\n    const metadados = await response.json()\n\n    if (metadados.aresposta.codigo === 200)\n      dispatch(loadMetadadosSuccess(metadados.cabecalho))\n    else throw new Error(metadados.aresposta.mensagem)\n  } catch (e) {\n    dispatch(loadMetadadosFailure())\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a requisição ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const loadMetadadosTotal = () => async (dispatch) => {\n  const loadMetadadosTotalUrl =\n    '/metadado/total?campos=mtt_tabela,mtt_descricao'\n\n  try {\n    dispatch(loadMetadadosInProgress())\n    const response = await fetch(`${urlBase}${loadMetadadosTotalUrl}`)\n    const metadados = await response.json()\n\n    if (metadados.aresposta.codigo === 200)\n      dispatch(loadMetadadosSuccess(metadados.cabecalho))\n    else throw new Error(metadados.aresposta.mensagem)\n\n    dispatch(loadDadoParaValidacao(MTA_METADADOATRIBUTO))\n    dispatch(loadDadoParaValidacao(MTT_METADADOTABELA))\n  } catch (e) {\n    dispatch(loadMetadadosFailure())\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a requisição ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const loadDadoPorExtenso = (mttTabela) => async (dispatch) => {\n  const onTabelaSelectedUrl = `/dado/extenso?mtt_tabela=${mttTabela}&limite=5`\n\n  try {\n    dispatch(loadMetadadoSelectedInProgress())\n    const response = await fetch(`${urlBase}${onTabelaSelectedUrl}`)\n    const metadados = await response.json()\n\n    if (metadados.aresposta.codigo === 200)\n      dispatch(loadMetadadoSelectedSuccess(mttTabela, metadados))\n    else throw new Error(metadados.aresposta.mensagem)\n  } catch (e) {\n    dispatch(loadMetadadoSelectedFailure())\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a requisição ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const loadDadoParaValidacao = (mttTabela) => async (dispatch) => {\n  const onTabelaSelectedUrl = `/dado/extenso?mtt_tabela=${mttTabela}`\n\n  try {\n    const response = await fetch(urlBase + onTabelaSelectedUrl)\n    const metadados = await response.json()\n\n    dispatch(loadMetadadoSelectedSuccessEditaveis(metadados, mttTabela))\n  } catch (e) {\n    dispatch(loadMetadadoSelectedFailure())\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a requisição ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const removeMetadado = (mttTabela, id) => async (dispatch) => {\n  const removeMetadadoUrl = `/dado/excluido?mtt_tabela=${mttTabela}&identificador=${id}`\n  try {\n    const response = await fetch(`${urlBase}${removeMetadadoUrl}`, {\n      method: 'GET', // OR DELETE\n    })\n    const removedMetadado = await response.json()\n    dispatch(removeMetadadoSelected(removedMetadado.excluido))\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: removedMetadado.aresposta.mensagem,\n        loading: false,\n        tipo: removedMetadado.aresposta.codigo === 200 ? 'success' : 'error',\n      })\n    )\n  } catch (e) {\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a exclusão ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const updateMetadado = (id, json) => async (dispatch) => {\n  const updateMetadadoUrl = `/dado/convencional/atualizado`\n  try {\n    const body = JSON.stringify(json)\n    const response = await fetch(`${urlBase}${updateMetadadoUrl}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'POST',\n      body,\n    })\n    const updatedMetadado = await response.json()\n    dispatch(updateMetadadoSelected(id, json))\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: updatedMetadado.aresposta.mensagem,\n        loading: false,\n        tipo: updatedMetadado.aresposta.codigo === 200 ? 'success' : 'error',\n      })\n    )\n  } catch (e) {\n    dispatch(\n      setMetadadoSelectedMessage({\n        open: true,\n        text: `Erro ao processar a atualizacão ${e}`,\n        tipo: 'error',\n        loading: false,\n      })\n    )\n  }\n}\n\nexport const setMessage = (message) => async (dispatch) => {\n  dispatch(setMetadadoSelectedMessage(message))\n}\n\nexport const displayAlert = (text) => () => {\n  alert(`Error ${text}`)\n}\n\nexport const validarMetadado = () => async () => {\n  const response = await fetch(urlBase + `/metadado/validado`)\n  return await response.json()\n}\n"]},"metadata":{},"sourceType":"module"}