{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import L from'leaflet';import'leaflet/dist/leaflet.css';import styled from'styled-components';var Wrapper=styled.div(_templateObject(),function(props){return props.width;},function(props){return props.height;});var Map=/*#__PURE__*/function(_React$Component){_inherits(Map,_React$Component);var _super=_createSuper(Map);function Map(){_classCallCheck(this,Map);return _super.apply(this,arguments);}_createClass(Map,[{key:\"componentDidMount\",value:function componentDidMount(){var metadado=this.props.metadado;var pontoCentral=metadado&&metadado['Q - Centro para Zoom (mtt_centro)']?metadado['Q - Centro para Zoom (mtt_centro)']:null;var lat=pontoCentral?pontoCentral.replace('[','').replace(/\\s+/g,'').split(',')[0]:-14.235004;var long=pontoCentral?pontoCentral.replace(']','').replace(/\\s+/g,'').split(',')[1]:-14.235004;var zoom=metadado&&metadado['M - Nível de Zoom (mtt_nivelzoom)']?metadado['M - Nível de Zoom (mtt_nivelzoom)']:3;var layer=metadado&&metadado['B - Nome da Tabela (mtt_tabela)']?metadado['B - Nome da Tabela (mtt_tabela)']:'';this.map=L.map('map',{center:[lat,long],zoom:zoom,zoomControl:true});var basemap=L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png',{});basemap.addTo(this.map);L.tileLayer('https://portal.geocart.xyz/geoserver/portalseg/wms',{layers:layer,format:'image/png',transparent:true,detectRetina:true,maxZoom:20,maxNativeZoom:17}).addTo(this.map);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var metadado=this.props.metadado;var pontoCentral=metadado&&metadado['Q - Centro para Zoom (mtt_centro)']?metadado['Q - Centro para Zoom (mtt_centro)']:null;var lat=pontoCentral?pontoCentral.replace('[','').replace(/\\s+/g,'').split(',')[0]:-14.235004;var long=pontoCentral?pontoCentral.replace(']','').replace(/\\s+/g,'').split(',')[1]:-14.235004;var zoom=metadado&&metadado['M - Nível de Zoom (mtt_nivelzoom)']?metadado['M - Nível de Zoom (mtt_nivelzoom)']:3;this.map.setView([lat,long],zoom);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Wrapper,{width:\"100%\",height:\"463px\",id:\"map\"});}}]);return Map;}(React.Component);export{Map as default};","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/components/Map/index.js"],"names":["React","L","styled","Wrapper","div","props","width","height","Map","metadado","pontoCentral","lat","replace","split","long","zoom","layer","map","center","zoomControl","basemap","tileLayer","addTo","layers","format","transparent","detectRetina","maxZoom","maxNativeZoom","setView","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport L from 'leaflet'\nimport 'leaflet/dist/leaflet.css'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n`\n\nexport default class Map extends React.Component {\n  componentDidMount() {\n    const { metadado } = this.props\n\n    const pontoCentral =\n      metadado && metadado['Q - Centro para Zoom (mtt_centro)']\n        ? metadado['Q - Centro para Zoom (mtt_centro)']\n        : null\n    const lat = pontoCentral\n      ? pontoCentral.replace('[', '').replace(/\\s+/g, '').split(',')[0]\n      : -14.235004\n    const long = pontoCentral\n      ? pontoCentral.replace(']', '').replace(/\\s+/g, '').split(',')[1]\n      : -14.235004\n    const zoom =\n      metadado && metadado['M - Nível de Zoom (mtt_nivelzoom)']\n        ? metadado['M - Nível de Zoom (mtt_nivelzoom)']\n        : 3\n    const layer =\n      metadado && metadado['B - Nome da Tabela (mtt_tabela)']\n        ? metadado['B - Nome da Tabela (mtt_tabela)']\n        : ''\n\n    this.map = L.map('map', {\n      center: [lat, long],\n      zoom,\n      zoomControl: true,\n    })\n\n    const basemap = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {})\n    basemap.addTo(this.map)\n\n    L.tileLayer('https://portal.geocart.xyz/geoserver/portalseg/wms', {\n      layers: layer,\n      format: 'image/png',\n      transparent: true,\n      detectRetina: true,\n      maxZoom: 20,\n      maxNativeZoom: 17,\n    }).addTo(this.map)\n  }\n\n  componentDidUpdate() {\n    const { metadado } = this.props\n\n    const pontoCentral =\n      metadado && metadado['Q - Centro para Zoom (mtt_centro)']\n        ? metadado['Q - Centro para Zoom (mtt_centro)']\n        : null\n    const lat = pontoCentral\n      ? pontoCentral.replace('[', '').replace(/\\s+/g, '').split(',')[0]\n      : -14.235004\n    const long = pontoCentral\n      ? pontoCentral.replace(']', '').replace(/\\s+/g, '').split(',')[1]\n      : -14.235004\n    const zoom =\n      metadado && metadado['M - Nível de Zoom (mtt_nivelzoom)']\n        ? metadado['M - Nível de Zoom (mtt_nivelzoom)']\n        : 3\n\n    this.map.setView([lat, long], zoom)\n  }\n\n  render() {\n    return <Wrapper width='100%' height='463px' id='map' />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}