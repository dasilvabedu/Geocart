{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\src\\\\pages\\\\Metadados\\\\Atualizacao\\\\index.js\";\nimport React from 'react';\nimport { Grid, Card, Typography, CircularProgress, IconButton, Paper, makeStyles } from '@material-ui/core';\nimport Edit from '@material-ui/icons/EditTwoTone';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CustomDialog from '../../../components/Dialog';\nimport Objetos from '../../../components/Objetos';\nimport CustomTable from '../../../components/Table';\nimport Toast from '../../../components/Toast';\nimport { removeMetadado, setMessage, updateMetadado, MTT_METADADOTABELA, MTA_METADADOATRIBUTO } from '../../../services/metadados';\nimport { getAllMetadadoSelectedCabecalho, getMetadadoSelectedLoading, getAllMetadadosTotal, getAllMetadadoSelectedTabela, getAllMetadadoSelectedCampos, getAllMetadadoSelectedEditaveis, getAllMetadadoSelectedMessage } from '../../../store/selectors/metadados';\nimport { Container, CardContent } from './styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: 520,\n    overflow: 'auto',\n    margin: '8px',\n    borderTop: '2px solid #318EDA'\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  header: {\n    alignItems: 'center',\n    background: '#1E74BB',\n    color: 'white',\n    paddingLeft: '8px',\n    margin: '-16px',\n    lineHeight: '1.5'\n  }\n}));\n\nfunction Atualizacao({\n  metadados,\n  metadadoSelectedTabela,\n  metadadoSelectedCampos,\n  metadadoSelectedCabecalho,\n  metadadoSelectedMessage,\n  metadadoSelectedEditaveis,\n  isLoadingMetadadoSelected,\n  onRemovePressed,\n  onUpdatePressed,\n  onSetMessagePressed\n}) {\n  const classes = useStyles();\n  const tabelaSelecionada = metadados.find(metadado => {\n    return metadado.mtt_tabela === metadadoSelectedTabela;\n  });\n  const [state, setState] = React.useState({\n    name: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mtt_descricao: tabelaSelecionada ? tabelaSelecionada.mtt_descricao : '',\n    mtt_tabela: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mensagem: {\n      open: false,\n      texto: '',\n      tipo: 'success',\n      data: null,\n      campos: [],\n      labelButton: null,\n      dialogTitle: null,\n      message: null,\n      action: null,\n      openToast: false,\n      tipoToast: 'success',\n      textoToast: null,\n      editData: false\n    }\n  });\n  const editTabela = metadadoSelectedCabecalho.length ? /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    style: {\n      padding: 0\n    },\n    onClick: () => {\n      updateTabela(createKeyAndValueObjects(metadadoSelectedCabecalho, 'values'), createKeyAndValueObjects(metadadoSelectedCabecalho, 'key'));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  })) : null;\n\n  const updateTabela = (dado, fields) => {\n    update(dado, fields, true);\n  };\n\n  const update = (dado, fields, isMttTabela = false) => {\n    const mensagem = {\n      open: true,\n      //texto: `Consultar/Update ${dado.id}`,\n      tipo: 'success',\n      labelButton: 'Atualizar',\n      dialogTitle: 'Atualizar atributo',\n      data: dado.length > 0 ? dado[0] : dado,\n      campos: fields,\n      editData: true,\n\n      action(id, dadoAlteracao) {\n        setState({ ...state,\n          mensagem: {\n            openToast: false,\n            open: false\n          }\n        });\n        const dataToUpdate = isMttTabela ? { ...dadoAlteracao,\n          tabela: MTT_METADADOTABELA,\n          mtt_identificador: id\n        } : { ...dadoAlteracao,\n          tabela: MTA_METADADOATRIBUTO,\n          mta_identificador: id\n        };\n        onSetMessagePressed({\n          open: false,\n          text: null,\n          tipo: 'success',\n          loading: true\n        });\n        onUpdatePressed(id, dataToUpdate);\n      }\n\n    };\n    setState({ ...state,\n      mensagem\n    });\n  };\n\n  const createKeyAndValueObjects = (metadadoMap = [], entryPreference) => {\n    let elementsKey = [];\n    let elementsParse = null;\n    const elements = metadadoMap.map(currElement => {\n      return elementsKey = createPropertyObject(currElement, entryPreference);\n    });\n\n    if (entryPreference !== 'key') {\n      const elementsStringify = JSON.stringify(elements).replaceAll('[[[{', '[{').replaceAll('}]]]', '}]').replaceAll('}]],[[{', '},{').replaceAll('[[{', '[{').replaceAll('}]]', '}]').replaceAll('}],[{', '},{');\n      elementsParse = JSON.parse(elementsStringify);\n      elementsParse = onGeneratedData(elementsParse);\n    } else {\n      elementsParse = elementsKey;\n    }\n\n    return elementsParse;\n  };\n\n  const createPropertyObject = (currElement, entryPreference) => {\n    return Object.entries(currElement).map(([key, values]) => {\n      return entryPreference === 'key' ? {\n        titulo: `${key.split(' - ')[1]}`,\n        dado: `${key}`\n      } : {\n        [key]: `${values}`\n      };\n    });\n  };\n\n  function onGeneratedData(elementsParse) {\n    let jsonData = {};\n    const tempData = [];\n\n    for (const [key, value] of Object.entries(elementsParse)) {\n      if (JSON.stringify(value).includes('A - ')) jsonData = {};\n\n      for (const [keyValue, valueValue] of Object.entries(value)) {\n        jsonData[keyValue] = valueValue;\n        if (keyValue.includes('A - ')) tempData.push(jsonData); //console.log(key, value);\n      }\n    } //console.log(tempData);\n\n\n    return tempData;\n  }\n\n  const customFilterCampos = ['Nome Interno do Atributo na Tabela (mta_atributo)', 'Descrição (mta_descricao)', 'Tipo da Tabela (mta_tipo)'];\n  const customFilterDados = ['B - Nome Interno do Atributo na Tabela (mta_atributo)', 'D - Descrição (mta_descricao)', 'E - Tipo da Tabela (mta_tipo)'];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Toast, {\n    open: state.mensagem.openToast || metadadoSelectedMessage.open,\n    handleClose: () => {\n      setState({ ...state,\n        mensagem: {\n          openToast: false\n        }\n      });\n      onSetMessagePressed({\n        open: false,\n        text: null,\n        tipo: 'success',\n        loading: false\n      });\n    },\n    severity: state.mensagem.openToast ? state.mensagem.tipoToast : metadadoSelectedMessage.tipo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, state.mensagem.textoToast, metadadoSelectedMessage.text), /*#__PURE__*/React.createElement(CustomDialog, {\n    open: state.mensagem.open,\n    mensagem: state.mensagem,\n    data: state.mensagem.data,\n    campos: state.mensagem.campos,\n    labelButton: state.mensagem.labelButton,\n    dialogTitle: state.mensagem.dialogTitle,\n    message: state.mensagem.message,\n    action: state.mensagem.action,\n    classes: classes,\n    editData: state.mensagem.editData,\n    editaveis: metadadoSelectedEditaveis,\n    handleClose: () => setState({ ...state,\n      mensagem: {\n        open: false\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    style: {\n      marginTop: '-35px',\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }, \"Objetos\")), /*#__PURE__*/React.createElement(Objetos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    style: {\n      marginTop: '-30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  }, \"Metadados do objeto\", ' ', metadadoSelectedCabecalho[0]['B - Nome da Tabela (mtt_tabela)'], ' ')), isLoadingMetadadoSelected ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }) : Array.isArray(metadadoSelectedCabecalho) && metadadoSelectedCabecalho.length ? metadadoSelectedCabecalho.map(currElement => Object.entries(currElement).map(([key, val]) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    style: {\n      display: 'flex',\n      alignItems: 'baseline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    noWrap: true,\n    style: {\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 27\n    }\n  }, key.split(' - ')[1], \": \"), val), /*#__PURE__*/React.createElement(Typography, {\n    noWrap: true,\n    style: {\n      marginLeft: key.split(' - ')[0] === 'A' ? 230 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, key.split(' - ')[0] === 'A' ? editTabela : null)))) : /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginTop: '80px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, \"Bem vindo ao M\\xF3dulo de Espacializa\\xE7\\xE3o\"))), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    style: {\n      marginTop: '-35px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 19\n    }\n  }, \"Atributos do objeto\")), isLoadingMetadadoSelected ? '' : /*#__PURE__*/React.createElement(CustomTable, {\n    dados: createKeyAndValueObjects(metadadoSelectedCampos, 'values'),\n    campos: createKeyAndValueObjects(metadadoSelectedCampos, 'key'),\n    updateDados: update,\n    contentMaxHeight: 350,\n    customFilterCampos: customFilterCampos,\n    customFilterDados: customFilterDados,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 19\n    }\n  })))))));\n}\n\nconst mapStateToProps = state => ({\n  metadados: getAllMetadadosTotal(state),\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n  metadadoSelectedCampos: getAllMetadadoSelectedCampos(state),\n  metadadoSelectedTabela: getAllMetadadoSelectedTabela(state),\n  metadadoSelectedMessage: getAllMetadadoSelectedMessage(state),\n  metadadoSelectedEditaveis: getAllMetadadoSelectedEditaveis(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n  onRemovePressed: (mttTababela, id) => dispatch(removeMetadado(mttTababela, id)),\n  onUpdatePressed: (id, json) => dispatch(updateMetadado(id, json)),\n  onSetMessagePressed: message => dispatch(setMessage(message))\n});\n\nAtualizacao.propTypes = {\n  metadadoSelectedCabecalho: PropTypes.array,\n  isLoadingMetadadoSelected: PropTypes.bool\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Atualizacao);","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/pages/Metadados/Atualizacao/index.js"],"names":["React","Grid","Card","Typography","CircularProgress","IconButton","Paper","makeStyles","Edit","PropTypes","connect","CustomDialog","Objetos","CustomTable","Toast","removeMetadado","setMessage","updateMetadado","MTT_METADADOTABELA","MTA_METADADOATRIBUTO","getAllMetadadoSelectedCabecalho","getMetadadoSelectedLoading","getAllMetadadosTotal","getAllMetadadoSelectedTabela","getAllMetadadoSelectedCampos","getAllMetadadoSelectedEditaveis","getAllMetadadoSelectedMessage","Container","CardContent","useStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","height","overflow","margin","borderTop","image","width","img","display","maxWidth","maxHeight","formControl","minWidth","selectEmpty","header","alignItems","background","color","paddingLeft","lineHeight","Atualizacao","metadados","metadadoSelectedTabela","metadadoSelectedCampos","metadadoSelectedCabecalho","metadadoSelectedMessage","metadadoSelectedEditaveis","isLoadingMetadadoSelected","onRemovePressed","onUpdatePressed","onSetMessagePressed","classes","tabelaSelecionada","find","metadado","mtt_tabela","state","setState","useState","name","mtt_descricao","mensagem","open","texto","tipo","data","campos","labelButton","dialogTitle","message","action","openToast","tipoToast","textoToast","editData","editTabela","length","updateTabela","createKeyAndValueObjects","dado","fields","update","isMttTabela","id","dadoAlteracao","dataToUpdate","tabela","mtt_identificador","mta_identificador","text","loading","metadadoMap","entryPreference","elementsKey","elementsParse","elements","map","currElement","createPropertyObject","elementsStringify","JSON","stringify","replaceAll","parse","onGeneratedData","Object","entries","key","values","titulo","split","jsonData","tempData","value","includes","keyValue","valueValue","push","customFilterCampos","customFilterDados","marginBottom","Array","isArray","val","flexDirection","marginLeft","mapStateToProps","mapDispatchToProps","dispatch","mttTababela","json","propTypes","array","bool"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport {\n  Grid,\n  Card,\n  Typography,\n  CircularProgress,\n  IconButton,\n  Paper,\n  makeStyles,\n} from '@material-ui/core'\nimport Edit from '@material-ui/icons/EditTwoTone'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport CustomDialog from '../../../components/Dialog'\nimport Objetos from '../../../components/Objetos'\nimport CustomTable from '../../../components/Table'\nimport Toast from '../../../components/Toast'\nimport {\n  removeMetadado,\n  setMessage,\n  updateMetadado,\n  MTT_METADADOTABELA,\n  MTA_METADADOATRIBUTO,\n} from '../../../services/metadados'\nimport {\n  getAllMetadadoSelectedCabecalho,\n  getMetadadoSelectedLoading,\n  getAllMetadadosTotal,\n  getAllMetadadoSelectedTabela,\n  getAllMetadadoSelectedCampos,\n  getAllMetadadoSelectedEditaveis,\n  getAllMetadadoSelectedMessage,\n} from '../../../store/selectors/metadados'\nimport { Container, CardContent } from './styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '16px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: 520,\n    overflow: 'auto',\n    margin: '8px',\n    borderTop: '2px solid #318EDA',\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  header: {\n    alignItems: 'center',\n    background: '#1E74BB',\n    color: 'white',\n    paddingLeft: '8px',\n    margin: '-16px',\n    lineHeight: '1.5',\n  },\n}))\n\nfunction Atualizacao({\n  metadados,\n  metadadoSelectedTabela,\n  metadadoSelectedCampos,\n  metadadoSelectedCabecalho,\n  metadadoSelectedMessage,\n  metadadoSelectedEditaveis,\n  isLoadingMetadadoSelected,\n  onRemovePressed,\n  onUpdatePressed,\n  onSetMessagePressed,\n}) {\n  const classes = useStyles()\n  const tabelaSelecionada = metadados.find((metadado) => {\n    return metadado.mtt_tabela === metadadoSelectedTabela\n  })\n\n  const [state, setState] = React.useState({\n    name: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mtt_descricao: tabelaSelecionada ? tabelaSelecionada.mtt_descricao : '',\n    mtt_tabela: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mensagem: {\n      open: false,\n      texto: '',\n      tipo: 'success',\n      data: null,\n      campos: [],\n      labelButton: null,\n      dialogTitle: null,\n      message: null,\n      action: null,\n      openToast: false,\n      tipoToast: 'success',\n      textoToast: null,\n      editData: false,\n    },\n  })\n\n  const editTabela = metadadoSelectedCabecalho.length ? (\n    <IconButton\n      color='primary'\n      aria-label='upload picture'\n      component='span'\n      style={{ padding: 0 }}\n      onClick={() => {\n        updateTabela(\n          createKeyAndValueObjects(metadadoSelectedCabecalho, 'values'),\n          createKeyAndValueObjects(metadadoSelectedCabecalho, 'key')\n        )\n      }}\n    >\n      <Edit />\n    </IconButton>\n  ) : null\n\n  const updateTabela = (dado, fields) => {\n    update(dado, fields, true)\n  }\n\n  const update = (dado, fields, isMttTabela = false) => {\n    const mensagem = {\n      open: true,\n      //texto: `Consultar/Update ${dado.id}`,\n      tipo: 'success',\n      labelButton: 'Atualizar',\n      dialogTitle: 'Atualizar atributo',\n      data: dado.length > 0 ? dado[0] : dado,\n      campos: fields,\n      editData: true,\n      action(id, dadoAlteracao) {\n        setState({\n          ...state,\n          mensagem: { openToast: false, open: false },\n        })\n        const dataToUpdate = isMttTabela\n          ? {\n              ...dadoAlteracao,\n              tabela: MTT_METADADOTABELA,\n              mtt_identificador: id,\n            }\n          : {\n              ...dadoAlteracao,\n              tabela: MTA_METADADOATRIBUTO,\n              mta_identificador: id,\n            }\n\n        onSetMessagePressed({\n          open: false,\n          text: null,\n          tipo: 'success',\n          loading: true,\n        })\n        onUpdatePressed(id, dataToUpdate)\n      },\n    }\n    setState({ ...state, mensagem })\n  }\n\n  const createKeyAndValueObjects = (metadadoMap = [], entryPreference) => {\n    let elementsKey = []\n    let elementsParse = null\n    const elements = metadadoMap.map((currElement) => {\n      return (elementsKey = createPropertyObject(currElement, entryPreference))\n    })\n\n    if (entryPreference !== 'key') {\n      const elementsStringify = JSON.stringify(elements)\n        .replaceAll('[[[{', '[{')\n        .replaceAll('}]]]', '}]')\n        .replaceAll('}]],[[{', '},{')\n        .replaceAll('[[{', '[{')\n        .replaceAll('}]]', '}]')\n        .replaceAll('}],[{', '},{')\n      elementsParse = JSON.parse(elementsStringify)\n      elementsParse = onGeneratedData(elementsParse)\n    } else {\n      elementsParse = elementsKey\n    }\n\n    return elementsParse\n  }\n\n  const createPropertyObject = (currElement, entryPreference) => {\n    return Object.entries(currElement).map(([key, values]) => {\n      return entryPreference === 'key'\n        ? {\n            titulo: `${key.split(' - ')[1]}`,\n            dado: `${key}`,\n          }\n        : {\n            [key]: `${values}`,\n          }\n    })\n  }\n\n  function onGeneratedData(elementsParse) {\n    let jsonData = {}\n    const tempData = []\n    for (const [key, value] of Object.entries(elementsParse)) {\n      if (JSON.stringify(value).includes('A - ')) jsonData = {}\n      for (const [keyValue, valueValue] of Object.entries(value)) {\n        jsonData[keyValue] = valueValue\n        if (keyValue.includes('A - ')) tempData.push(jsonData)\n        //console.log(key, value);\n      }\n    }\n    //console.log(tempData);\n    return tempData\n  }\n\n  const customFilterCampos = [\n    'Nome Interno do Atributo na Tabela (mta_atributo)',\n    'Descrição (mta_descricao)',\n    'Tipo da Tabela (mta_tipo)',\n  ]\n\n  const customFilterDados = [\n    'B - Nome Interno do Atributo na Tabela (mta_atributo)',\n    'D - Descrição (mta_descricao)',\n    'E - Tipo da Tabela (mta_tipo)',\n  ]\n\n  return (\n    <Container>\n      <Toast\n        open={state.mensagem.openToast || metadadoSelectedMessage.open}\n        handleClose={() => {\n          setState({ ...state, mensagem: { openToast: false } })\n          onSetMessagePressed({\n            open: false,\n            text: null,\n            tipo: 'success',\n            loading: false,\n          })\n        }}\n        severity={\n          state.mensagem.openToast\n            ? state.mensagem.tipoToast\n            : metadadoSelectedMessage.tipo\n        }\n      >\n        {state.mensagem.textoToast}\n        {metadadoSelectedMessage.text}\n      </Toast>\n      <CustomDialog\n        open={state.mensagem.open}\n        mensagem={state.mensagem}\n        data={state.mensagem.data}\n        campos={state.mensagem.campos}\n        labelButton={state.mensagem.labelButton}\n        dialogTitle={state.mensagem.dialogTitle}\n        message={state.mensagem.message}\n        action={state.mensagem.action}\n        classes={classes}\n        editData={state.mensagem.editData}\n        editaveis={metadadoSelectedEditaveis}\n        handleClose={() => setState({ ...state, mensagem: { open: false } })}\n      />\n      <Grid container direction='column' spacing={2}>\n        <Grid item xs={6}>\n          <Paper>\n            <Card>\n              <CardContent>\n                <div\n                  className={classes.header}\n                  style={{ marginTop: '-35px', marginBottom: '10px' }}\n                >\n                  <h3>Objetos</h3>\n                </div>\n                <Objetos />\n              </CardContent>\n              <CardContent>\n                <div className={classes.header} style={{ marginTop: '-30px' }}>\n                  <h3>\n                    Metadados do objeto{' '}\n                    {\n                      metadadoSelectedCabecalho[0][\n                        'B - Nome da Tabela (mtt_tabela)'\n                      ]\n                    }{' '}\n                  </h3>\n                </div>\n                {isLoadingMetadadoSelected ? (\n                  <CircularProgress />\n                ) : Array.isArray(metadadoSelectedCabecalho) &&\n                  metadadoSelectedCabecalho.length ? (\n                  metadadoSelectedCabecalho.map((currElement) =>\n                    Object.entries(currElement).map(([key, val]) => (\n                      <div\n                        key={key}\n                        style={{\n                          display: 'flex',\n                          alignItems: 'baseline',\n                        }}\n                      >\n                        <Typography\n                          variant='body2'\n                          gutterBottom\n                          noWrap\n                          style={{\n                            flexDirection: 'column',\n                          }}\n                        >\n                          <strong>{key.split(' - ')[1]}: </strong>\n                          {val}\n                        </Typography>\n                        <Typography\n                          noWrap\n                          style={{\n                            marginLeft: key.split(' - ')[0] === 'A' ? 230 : 0,\n                          }}\n                        >\n                          {key.split(' - ')[0] === 'A' ? editTabela : null}\n                        </Typography>\n                      </div>\n                    ))\n                  )\n                ) : (\n                  <h2\n                    style={{\n                      marginTop: '80px',\n                    }}\n                  >\n                    {' '}\n                    <strong>Bem vindo ao Módulo de Espacialização</strong>\n                  </h2>\n                )}\n              </CardContent>\n              <CardContent>\n                <div className={classes.header} style={{ marginTop: '-35px' }}>\n                  <h3>Atributos do objeto</h3>\n                </div>\n                {isLoadingMetadadoSelected ? (\n                  ''\n                ) : (\n                  <CustomTable\n                    dados={createKeyAndValueObjects(\n                      metadadoSelectedCampos,\n                      'values'\n                    )}\n                    campos={createKeyAndValueObjects(\n                      metadadoSelectedCampos,\n                      'key'\n                    )}\n                    updateDados={update}\n                    contentMaxHeight={350}\n                    customFilterCampos={customFilterCampos}\n                    customFilterDados={customFilterDados}\n                  />\n                )}\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  metadados: getAllMetadadosTotal(state),\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n  metadadoSelectedCampos: getAllMetadadoSelectedCampos(state),\n  metadadoSelectedTabela: getAllMetadadoSelectedTabela(state),\n  metadadoSelectedMessage: getAllMetadadoSelectedMessage(state),\n  metadadoSelectedEditaveis: getAllMetadadoSelectedEditaveis(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  // startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n  onRemovePressed: (mttTababela, id) =>\n    dispatch(removeMetadado(mttTababela, id)),\n  onUpdatePressed: (id, json) => dispatch(updateMetadado(id, json)),\n  onSetMessagePressed: (message) => dispatch(setMessage(message)),\n})\n\nAtualizacao.propTypes = {\n  metadadoSelectedCabecalho: PropTypes.array,\n  isLoadingMetadadoSelected: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Atualizacao)\n"]},"metadata":{},"sourceType":"module"}