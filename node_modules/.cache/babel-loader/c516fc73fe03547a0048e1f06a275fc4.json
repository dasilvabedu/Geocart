{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\src\\\\pages\\\\Metadados\\\\Atualizacao\\\\index.js\";\nimport React from 'react';\nimport { Grid, Card, CardContent, Typography, CircularProgress, TableContainer, Table, TableRow, TableCell, TableHead, TableBody, Button, IconButton, Paper, TextField } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport Objetos from '../../../components/Objetos';\nimport { getAllMetadadoSelectedCabecalho, getMetadadoSelectedLoading } from '../../../store/selectors/metadados';\nimport { Container, CardHeader } from './styles';\n\nfunction Atualizacao({\n  metadadoSelectedCabecalho,\n  isLoadingMetadadoSelected\n}) {\n  const metadadoSelected = useSelector(state => state.metadadoSelected);\n  const attrKeys = ['A - Identificador Interno (mta_identificador)', 'B - Nome Interno do Atributo na Tabela (mta_atributo)', 'C - Sequência do Atributo na Tabela (mta_sequencia)', 'D - Descrição (mta_descricao)', 'E - Tipo do Campo (mta_tipo)', 'F - Obrigatoriedade (mta_obrigatoriedade)', 'G - Regra de Validação (mta_regravalidacao)', 'H - Observação (mta_observacao)', 'I - Identificador Interno do Metadado de Tabela (mtt_identificador)', 'J - Possibilidade de Edição (mta_editavel)'];\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Objetos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Objetos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"\\xC1rea de Edi\\xE7\\xE3o\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: 'Metadados do Objeto ' + metadadoSelected.mttTabela,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Atualizar metadados\")), isLoadingMetadadoSelected ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }) : metadadoSelectedCabecalho.map(currElement => Object.entries(currElement).map(([key, val]) => /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, key.split(' - ')[1], \": \"), val))))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Atributos do Objeto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, attrKeys.map(key => /*#__PURE__*/React.createElement(TableCell, {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, key.split(' - ')[1])), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }\n  }, \"A\\xE7\\xF5es\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, metadadoSelected.campos.map((attr, index) => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }\n  }, attrKeys.map(key => /*#__PURE__*/React.createElement(TableCell, {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 27\n    }\n  }, attr[key] || 'null')), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  })))))))))))));\n}\n\nconst mapStateToProps = state => ({\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state)\n});\n\nconst mapDispatchToProps = () => ({// startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n});\n\nAtualizacao.propTypes = {\n  metadadoSelectedCabecalho: PropTypes.array,\n  isLoadingMetadadoSelected: PropTypes.bool\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Atualizacao);","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/pages/Metadados/Atualizacao/index.js"],"names":["React","Grid","Card","CardContent","Typography","CircularProgress","TableContainer","Table","TableRow","TableCell","TableHead","TableBody","Button","IconButton","Paper","TextField","EditIcon","PropTypes","connect","useSelector","Objetos","getAllMetadadoSelectedCabecalho","getMetadadoSelectedLoading","Container","CardHeader","Atualizacao","metadadoSelectedCabecalho","isLoadingMetadadoSelected","metadadoSelected","state","attrKeys","mttTabela","float","map","currElement","Object","entries","key","val","split","campos","attr","index","mapStateToProps","mapDispatchToProps","propTypes","array","bool"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CircularProgress,\n  TableContainer,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableBody,\n  Button,\n  IconButton,\n  Paper,\n  TextField,\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\nimport PropTypes from 'prop-types'\nimport { connect, useSelector } from 'react-redux'\n\nimport Objetos from '../../../components/Objetos'\nimport {\n  getAllMetadadoSelectedCabecalho,\n  getMetadadoSelectedLoading,\n} from '../../../store/selectors/metadados'\nimport { Container, CardHeader } from './styles'\n\nfunction Atualizacao({ metadadoSelectedCabecalho, isLoadingMetadadoSelected }) {\n  const metadadoSelected = useSelector((state) => state.metadadoSelected)\n\n  const attrKeys = [\n    'A - Identificador Interno (mta_identificador)',\n    'B - Nome Interno do Atributo na Tabela (mta_atributo)',\n    'C - Sequência do Atributo na Tabela (mta_sequencia)',\n    'D - Descrição (mta_descricao)',\n    'E - Tipo do Campo (mta_tipo)',\n    'F - Obrigatoriedade (mta_obrigatoriedade)',\n    'G - Regra de Validação (mta_regravalidacao)',\n    'H - Observação (mta_observacao)',\n    'I - Identificador Interno do Metadado de Tabela (mtt_identificador)',\n    'J - Possibilidade de Edição (mta_editavel)',\n  ]\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <Paper>\n            <Card>\n              <CardHeader title='Objetos' />\n              <CardContent>\n                <Objetos />\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Área de Edição' />\n            <CardContent>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader\n              title={'Metadados do Objeto ' + metadadoSelected.mttTabela}\n            />\n            <CardContent>\n              <div style={{ float: 'right' }}>\n                <Button variant='contained'>Atualizar metadados</Button>\n              </div>\n              {isLoadingMetadadoSelected ? (\n                <CircularProgress />\n              ) : (\n                metadadoSelectedCabecalho.map((currElement) =>\n                  Object.entries(currElement).map(([key, val]) => (\n                    <Typography variant='body2' gutterBottom key={key}>\n                      <strong>{key.split(' - ')[1]}: </strong>\n                      {val}\n                    </Typography>\n                  ))\n                )\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={6}>\n          <Card>\n            <CardHeader title='Atributos do Objeto' />\n            <CardContent>\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {attrKeys.map((key) => (\n                        <TableCell key={key}>{key.split(' - ')[1]}</TableCell>\n                      ))}\n                      <TableCell>Ações</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {metadadoSelected.campos.map((attr, index) => (\n                      <TableRow hover key={index}>\n                        {attrKeys.map((key) => (\n                          <TableCell key={key}>{attr[key] || 'null'}</TableCell>\n                        ))}\n                        <TableCell>\n                          <IconButton color='primary' component='span'>\n                            <EditIcon />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n})\n\nconst mapDispatchToProps = () => ({\n  // startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n})\n\nAtualizacao.propTypes = {\n  metadadoSelectedCabecalho: PropTypes.array,\n  isLoadingMetadadoSelected: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Atualizacao)\n"]},"metadata":{},"sourceType":"module"}