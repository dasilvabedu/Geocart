{"ast":null,"code":"import React from'react';import{Grid,Card,CardContent,CircularProgress}from'@material-ui/core';import{connect,useSelector}from'react-redux';import Map from'../../../components/Map';import Objetos from'../../../components/Objetos';import{getMetadadoSelectedLoading,getAllMetadadoSelectedCabecalho}from'../../../store/selectors/metadados';import{Container,CardHeader}from'./styles';function Consulta(_ref){var metadadoSelectedCabecalho=_ref.metadadoSelectedCabecalho,isLoadingMetadadoSelected=_ref.isLoadingMetadadoSelected;var metadadoSelected=useSelector(function(state){return state.metadadoSelected;});return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{title:\"Objetos\"}),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Objetos,null)))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{title:'Objeto '+metadadoSelected.mttTabela}),/*#__PURE__*/React.createElement(CardContent,null,isLoadingMetadadoSelected?/*#__PURE__*/React.createElement(CircularProgress,null):/*#__PURE__*/React.createElement(Map,{metadado:metadadoSelectedCabecalho[0]}))))));}var mapStateToProps=function mapStateToProps(state){return{isLoadingMetadadoSelected:getMetadadoSelectedLoading(state),metadadoSelectedCabecalho:getAllMetadadoSelectedCabecalho(state)};};var mapDispatchToProps=function mapDispatchToProps(){return{// startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n};};export default connect(mapStateToProps,mapDispatchToProps)(Consulta);","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/pages/GeoEspaciais/Consulta/index.js"],"names":["React","Grid","Card","CardContent","CircularProgress","connect","useSelector","Map","Objetos","getMetadadoSelectedLoading","getAllMetadadoSelectedCabecalho","Container","CardHeader","Consulta","metadadoSelectedCabecalho","isLoadingMetadadoSelected","metadadoSelected","state","mttTabela","mapStateToProps","mapDispatchToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,WAArB,CAAkCC,gBAAlC,KAA0D,mBAA1D,CAEA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,aAArC,CAEA,MAAOC,CAAAA,GAAP,KAAgB,yBAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,OACEC,0BADF,CAEEC,+BAFF,KAGO,oCAHP,CAIA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,UAAtC,CAEA,QAASC,CAAAA,QAAT,MAA4E,IAAxDC,CAAAA,yBAAwD,MAAxDA,yBAAwD,CAA7BC,yBAA6B,MAA7BA,yBAA6B,CAC1E,GAAMC,CAAAA,gBAAgB,CAAGV,WAAW,CAAC,SAACW,KAAD,QAAWA,CAAAA,KAAK,CAACD,gBAAjB,EAAD,CAApC,CAEA,mBACE,oBAAC,SAAD,mBACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,IAAD,mBACE,oBAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,EADF,cAEE,oBAAC,WAAD,mBACE,oBAAC,OAAD,MADF,CAFF,CADF,CADF,cASE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACE,oBAAC,IAAD,mBACE,oBAAC,UAAD,EAAY,KAAK,CAAE,UAAYA,gBAAgB,CAACE,SAAhD,EADF,cAEE,oBAAC,WAAD,MACGH,yBAAyB,cACxB,oBAAC,gBAAD,MADwB,cAGxB,oBAAC,GAAD,EAAK,QAAQ,CAAED,yBAAyB,CAAC,CAAD,CAAxC,EAJJ,CAFF,CADF,CATF,CADF,CADF,CA0BD,CAED,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACF,KAAD,QAAY,CAClCF,yBAAyB,CAAEN,0BAA0B,CAACQ,KAAD,CADnB,CAElCH,yBAAyB,CAAEJ,+BAA+B,CAACO,KAAD,CAFxB,CAAZ,EAAxB,CAKA,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAO,CAChC;AADgC,CAAP,EAA3B,CASA,cAAef,CAAAA,OAAO,CAACc,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf","sourcesContent":["import React from 'react'\n\nimport { Grid, Card, CardContent, CircularProgress } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport { connect, useSelector } from 'react-redux'\n\nimport Map from '../../../components/Map'\nimport Objetos from '../../../components/Objetos'\nimport {\n  getMetadadoSelectedLoading,\n  getAllMetadadoSelectedCabecalho,\n} from '../../../store/selectors/metadados'\nimport { Container, CardHeader } from './styles'\n\nfunction Consulta({ metadadoSelectedCabecalho, isLoadingMetadadoSelected }) {\n  const metadadoSelected = useSelector((state) => state.metadadoSelected)\n\n  return (\n    <Container>\n      <Grid container spacing={1}>\n        <Grid item>\n          <Card>\n            <CardHeader title='Objetos' />\n            <CardContent>\n              <Objetos />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12}>\n          <Card>\n            <CardHeader title={'Objeto ' + metadadoSelected.mttTabela} />\n            <CardContent>\n              {isLoadingMetadadoSelected ? (\n                <CircularProgress />\n              ) : (\n                <Map metadado={metadadoSelectedCabecalho[0]} />\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n})\n\nconst mapDispatchToProps = () => ({\n  // startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n})\n\nConsulta.propTypes = {\n  metadadoSelectedCabecalho: PropTypes.array,\n  isLoadingMetadadoSelected: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Consulta)\n"]},"metadata":{},"sourceType":"module"}