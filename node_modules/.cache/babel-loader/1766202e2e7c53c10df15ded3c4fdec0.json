{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\src\\\\components\\\\Objetos\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadMetadadosTotal, loadDadoPorExtenso } from '../../services/metadados';\nimport { getAllMetadadosTotal, getAllMetadadoSelectedTabela } from '../../store/selectors/metadados';\n\nfunction Objetos({\n  metadados,\n  startLoadingMetadados,\n  metadadoSelectedTabela,\n  onTabelaSelected\n}) {\n  useEffect(() => {\n    startLoadingMetadados();\n  }, [startLoadingMetadados]);\n  const tabelaSelecionada = metadados.find(metadado => {\n    return metadado.mtt_tabela === metadadoSelectedTabela;\n  });\n  const [state, setState] = useState({\n    name: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mtt_descricao: tabelaSelecionada ? tabelaSelecionada.mtt_descricao : '',\n    mtt_tabela: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : ''\n  });\n  const metadadosSorted = metadados.slice(0);\n  metadadosSorted.sort(function (a, b) {\n    const x = a.mtt_tabela.toLowerCase();\n    const y = b.mtt_tabela.toLowerCase();\n    return x < y ? -1 : x > y ? 1 : 0;\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    onTabelaSelected(value);\n    setState({ ...state,\n      [name]: value,\n      mtt_tabela: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(NativeSelect, {\n    value: state.mtt_descricao,\n    onChange: handleChange,\n    inputProps: {\n      name: 'mtt_descricao',\n      id: 'mtt_tabela'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, state.mtt_tabela ? /*#__PURE__*/React.createElement(\"option\", {\n    value: state.mtt_tabela,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, state.mtt_descricao, \" (\", state.mtt_tabela, \")\") : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Selecione\"), metadadosSorted.map((metadado, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: metadado.mtt_tabela,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, metadado.mtt_descricao, \" (\", metadado.mtt_tabela, \")\")));\n}\n\nconst mapStateToProps = state => ({\n  metadados: getAllMetadadosTotal(state),\n  metadadoSelectedTabela: getAllMetadadoSelectedTabela(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onTabelaSelected: mttTababela => dispatch(loadDadoPorExtenso(mttTababela)),\n  startLoadingMetadados: () => dispatch(loadMetadadosTotal())\n});\n\nObjetos.propTypes = {\n  metadados: PropTypes.array,\n  onTabelaSelected: PropTypes.func.isRequired,\n  startLoadingMetadados: PropTypes.func.isRequired,\n  metadadoSelectedTabela: PropTypes.string\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Objetos);","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/components/Objetos/index.js"],"names":["React","useState","useEffect","NativeSelect","PropTypes","connect","loadMetadadosTotal","loadDadoPorExtenso","getAllMetadadosTotal","getAllMetadadoSelectedTabela","Objetos","metadados","startLoadingMetadados","metadadoSelectedTabela","onTabelaSelected","tabelaSelecionada","find","metadado","mtt_tabela","state","setState","name","mtt_descricao","metadadosSorted","slice","sort","a","b","x","toLowerCase","y","handleChange","event","value","target","id","map","index","mapStateToProps","mapDispatchToProps","dispatch","mttTababela","propTypes","array","func","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { NativeSelect } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport {\n  loadMetadadosTotal,\n  loadDadoPorExtenso,\n} from '../../services/metadados'\nimport {\n  getAllMetadadosTotal,\n  getAllMetadadoSelectedTabela,\n} from '../../store/selectors/metadados'\n\nfunction Objetos({\n  metadados,\n  startLoadingMetadados,\n  metadadoSelectedTabela,\n  onTabelaSelected,\n}) {\n  useEffect(() => {\n    startLoadingMetadados()\n  }, [startLoadingMetadados])\n\n  const tabelaSelecionada = metadados.find((metadado) => {\n    return metadado.mtt_tabela === metadadoSelectedTabela\n  })\n\n  const [state, setState] = useState({\n    name: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mtt_descricao: tabelaSelecionada ? tabelaSelecionada.mtt_descricao : '',\n    mtt_tabela: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n  })\n\n  const metadadosSorted = metadados.slice(0)\n  metadadosSorted.sort(function (a, b) {\n    const x = a.mtt_tabela.toLowerCase()\n    const y = b.mtt_tabela.toLowerCase()\n    return x < y ? -1 : x > y ? 1 : 0\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    onTabelaSelected(value)\n    setState({\n      ...state,\n      [name]: value,\n      mtt_tabela: value,\n    })\n  }\n\n  return (\n    <NativeSelect\n      value={state.mtt_descricao}\n      onChange={handleChange}\n      inputProps={{\n        name: 'mtt_descricao',\n        id: 'mtt_tabela',\n      }}\n    >\n      {state.mtt_tabela ? (\n        <option value={state.mtt_tabela}>\n          {state.mtt_descricao} ({state.mtt_tabela})\n        </option>\n      ) : (\n        <option value=''>Selecione</option>\n      )}\n\n      {metadadosSorted.map((metadado, index) => (\n        <option value={metadado.mtt_tabela} key={index}>\n          {metadado.mtt_descricao} ({metadado.mtt_tabela})\n        </option>\n      ))}\n    </NativeSelect>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  metadados: getAllMetadadosTotal(state),\n  metadadoSelectedTabela: getAllMetadadoSelectedTabela(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabelaSelected: (mttTababela) => dispatch(loadDadoPorExtenso(mttTababela)),\n  startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n})\n\nObjetos.propTypes = {\n  metadados: PropTypes.array,\n  onTabelaSelected: PropTypes.func.isRequired,\n  startLoadingMetadados: PropTypes.func.isRequired,\n  metadadoSelectedTabela: PropTypes.string,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Objetos)\n"]},"metadata":{},"sourceType":"module"}