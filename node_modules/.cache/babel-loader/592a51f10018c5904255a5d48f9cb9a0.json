{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\src\\\\components\\\\Dialog\\\\index.js\";\n\n/* eslint-disable no-restricted-syntax */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport '../Table/scroll.css';\n\nconst PaperComponent = props => {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    style: {\n      borderTop: '3px solid #318EDA'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst CustomDialog = props => {\n  const {\n    open,\n    handleClose,\n    labelButton,\n    action,\n    message,\n    dialogTitle,\n    data = [],\n    campos = [],\n    editaveis = [],\n    editData = false\n  } = props;\n  const [state, setState] = React.useState({// name: null,\n    // value: null,\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({ ...state,\n      [name.split(' (')[1].replace(')', '')]: value\n    });\n  };\n\n  const onCloseDialog = () => {\n    setState({\n      /* name: null, value: null */\n    });\n    handleClose();\n  };\n\n  const isUpdateDisabled = entry => {\n    if (!editData) return editData; // console.log(`Pesquisando? ${entry}`);\n\n    const elementoEditavel = editaveis.find(currElement => {\n      // eslint-disable-next-line array-callback-return\n      // eslint-disable-next-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      for (const [key, value] of Object.entries(currElement)) {\n        if (entry === `${value})`) return currElement;\n      }\n\n      return null;\n    });\n    const updateDisabled = elementoEditavel && elementoEditavel[Object.keys(elementoEditavel)[Object.keys(elementoEditavel).length - 1]] !== 'sim'; // console.log(`Editavel? ${elementoEditavel[Object.keys(elementoEditavel)[Object.keys(elementoEditavel).length - 1]]}`);\n\n    return updateDisabled;\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onCloseDialog,\n    PaperComponent: PaperComponent,\n    \"aria-labelledby\": \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      cursor: 'move'\n    },\n    id: \"draggable-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, dialogTitle || 'Todos os Dados'), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, message || campos.map(campo => !editData ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, campo.dado.split(' - ')[1], \": \"), data[campo.dado]) : /*#__PURE__*/React.createElement(TextField, {\n    name: campo.dado.split(' - ')[1],\n    label: campo.dado.split(' - ')[1],\n    defaultValue: data[campo.dado],\n    InputProps: {\n      readOnly: isUpdateDisabled(campo.dado.split(' (')[1])\n    },\n    style: {\n      width: '100%'\n    },\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, !action ? null : /*#__PURE__*/React.createElement(Button // disabled={updateDisabled}\n  , {\n    autoFocus: true,\n    color: \"primary\",\n    onClick: () => {\n      let dataToUpdate = state;\n      dataToUpdate = { ...dataToUpdate\n      };\n      action(data[Object.keys(data)[0]], dataToUpdate);\n      onCloseDialog();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, labelButton || 'None'), /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    color: \"primary\",\n    onClick: onCloseDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Fechar\"))));\n};\n\nexport default CustomDialog;","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/components/Dialog/index.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","Paper","Draggable","Typography","TextField","PaperComponent","props","borderTop","CustomDialog","open","handleClose","labelButton","action","message","dialogTitle","data","campos","editaveis","editData","state","setState","useState","handleChange","event","name","value","target","split","replace","onCloseDialog","isUpdateDisabled","entry","elementoEditavel","find","currElement","key","Object","entries","updateDisabled","keys","length","cursor","map","campo","dado","readOnly","width","dataToUpdate"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-syntax */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Paper from '@material-ui/core/Paper'\nimport Draggable from 'react-draggable'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\n\nimport '../Table/scroll.css'\n\nconst PaperComponent = (props) => {\n  return (\n    <Draggable\n      handle='#draggable-dialog-title'\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} style={{ borderTop: '3px solid #318EDA' }} />\n    </Draggable>\n  )\n}\n\nconst CustomDialog = (props) => {\n  const {\n    open,\n    handleClose,\n    labelButton,\n    action,\n    message,\n    dialogTitle,\n    data = [],\n    campos = [],\n    editaveis = [],\n    editData = false,\n  } = props\n\n  const [state, setState] = React.useState({\n    // name: null,\n    // value: null,\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setState({ ...state, [name.split(' (')[1].replace(')', '')]: value })\n  }\n\n  const onCloseDialog = () => {\n    setState({\n      /* name: null, value: null */\n    })\n    handleClose()\n  }\n\n  const isUpdateDisabled = (entry) => {\n    if (!editData) return editData\n\n    // console.log(`Pesquisando? ${entry}`);\n    const elementoEditavel = editaveis.find((currElement) => {\n      // eslint-disable-next-line array-callback-return\n      // eslint-disable-next-line no-unused-vars\n\n      // eslint-disable-next-line no-unused-vars\n      for (const [key, value] of Object.entries(currElement)) {\n        if (entry === `${value})`) return currElement\n      }\n      return null\n    })\n\n    const updateDisabled =\n      elementoEditavel &&\n      elementoEditavel[\n        Object.keys(elementoEditavel)[Object.keys(elementoEditavel).length - 1]\n      ] !== 'sim'\n\n    // console.log(`Editavel? ${elementoEditavel[Object.keys(elementoEditavel)[Object.keys(elementoEditavel).length - 1]]}`);\n\n    return updateDisabled\n  }\n\n  return (\n    <form>\n      <Dialog\n        open={open}\n        onClose={onCloseDialog}\n        PaperComponent={PaperComponent}\n        aria-labelledby='draggable-dialog-title'\n      >\n        <DialogTitle style={{ cursor: 'move' }} id='draggable-dialog-title'>\n          {dialogTitle || 'Todos os Dados'}\n        </DialogTitle>\n        <DialogContent>\n          {message ||\n            campos.map((campo) =>\n              !editData ? (\n                <Typography variant='body2' gutterBottom>\n                  <strong>{campo.dado.split(' - ')[1]}: </strong>\n                  {data[campo.dado]}\n                </Typography>\n              ) : (\n                <TextField\n                  name={campo.dado.split(' - ')[1]}\n                  label={campo.dado.split(' - ')[1]}\n                  defaultValue={data[campo.dado]}\n                  InputProps={{\n                    readOnly: isUpdateDisabled(campo.dado.split(' (')[1]),\n                  }}\n                  style={{ width: '100%' }}\n                  onChange={handleChange}\n                />\n              )\n            )}\n        </DialogContent>\n        <DialogActions>\n          {!action ? null : (\n            <Button\n              // disabled={updateDisabled}\n              autoFocus\n              color='primary'\n              onClick={() => {\n                let dataToUpdate = state\n                dataToUpdate = {\n                  ...dataToUpdate,\n                }\n                action(data[Object.keys(data)[0]], dataToUpdate)\n                onCloseDialog()\n              }}\n            >\n              {labelButton || 'None'}\n            </Button>\n          )}\n          <Button autoFocus color='primary' onClick={onCloseDialog}>\n            Fechar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </form>\n  )\n}\n\nexport default CustomDialog\n"]},"metadata":{},"sourceType":"module"}