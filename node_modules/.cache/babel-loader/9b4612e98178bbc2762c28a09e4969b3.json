{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BENEDICTO EDUARDO\\\\PycharmProjects\\\\geo\\\\src\\\\pages\\\\Metadados\\\\Consultar\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport CustomDialog from '../../../components/Dialog';\nimport Map from '../../../components/Map';\nimport CustomTable from '../../../components/Table';\nimport Toast from '../../../components/Toast';\nimport { loadMetadadosTotal, loadDadoPorExtenso, setMessage, updateMetadado } from '../../../services/metadados';\nimport { getMetadadosTotalLoading, getAllMetadadosTotal, getMetadadoSelectedLoading, getAllMetadadoSelectedCabecalho, getAllMetadadoSelectedCampos, getAllMetadadoSelectedDados, getAllMetadadoSelectedTabela, getAllMetadadoSelectedMessage, getAllMetadadoSelectedEditaveis } from '../../../store/selectors/metadados';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '16px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: 520,\n    overflow: 'auto',\n    margin: '8px',\n    borderTop: '2px solid #318EDA'\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  header: {\n    alignItems: 'center',\n    background: '#1E74BB',\n    color: 'white',\n    paddingLeft: '8px',\n    margin: '-16px',\n    lineHeight: '1.5'\n  }\n}));\n\nconst Metadados = ({\n  metadados,\n  metadadoSelectedCabecalho,\n  metadadoSelectedCampos,\n  metadadoSelectedDados,\n  metadadoSelectedTabela,\n  metadadoSelectedMessage,\n  metadadoSelectedEditaveis,\n  onUpdatePressed,\n  onTabelaSelected,\n  onSetMessagePressed,\n  isLoading,\n  isLoadingMetadadoSelected,\n  startLoadingMetadados\n}) => {\n  useEffect(() => {\n    startLoadingMetadados();\n  }, [startLoadingMetadados]);\n  const classes = useStyles();\n  const tabelaSelecionada = metadados.find(metadado => {\n    return metadado.mtt_tabela === metadadoSelectedTabela;\n  });\n  const [state, setState] = React.useState({\n    name: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mtt_descricao: tabelaSelecionada ? tabelaSelecionada.mtt_descricao : '',\n    mtt_tabela: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mensagem: {\n      open: false,\n      texto: '',\n      tipo: 'success',\n      data: null,\n      campos: [],\n      labelButton: null,\n      dialogTitle: null,\n      message: null,\n      action: null,\n      openToast: false,\n      tipoToast: 'success',\n      textoToast: null,\n      editData: false\n    }\n  });\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    onTabelaSelected(value);\n    setState({ ...state,\n      [name]: value,\n      mtt_tabela: value\n    });\n  };\n\n  const info = (dado, fields) => {\n    const mensagem = {\n      open: true,\n      //texto: `Consultar/Update ${dado.id}`,\n      tipo: 'success',\n      data: dado,\n      campos: fields,\n      editData: false\n    };\n    setState({ ...state,\n      mensagem\n    });\n  };\n\n  const update = (dado, fields) => {\n    const mensagem = {\n      open: true,\n      //texto: `Consultar/Update ${dado.id}`,\n      tipo: 'success',\n      labelButton: 'Atualizar',\n      dialogTitle: 'Atualizar atributo',\n      data: dado,\n      campos: fields,\n      editData: true,\n\n      action(id, dadoAlteracao) {\n        setState({ ...state,\n          mensagem: {\n            openToast: false,\n            open: false\n          }\n        });\n        const dataToUpdate = { ...dadoAlteracao,\n          // tabela: state.mtt_tabela,\n          tabela: 'mta_metadadoatributo',\n          mta_identificador: id\n        };\n        onSetMessagePressed({\n          open: false,\n          text: null,\n          tipo: 'success',\n          loading: true\n        });\n        onUpdatePressed(id, dataToUpdate);\n      }\n\n    };\n    setState({ ...state,\n      mensagem\n    });\n  };\n\n  String.prototype.replaceAll = function (find, replace) {\n    const str = this;\n    return str.replace(new RegExp(find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replace);\n  };\n\n  const createPropertyObject = (currElement, entryPreference) => {\n    return Object.entries(currElement).map(([key, values]) => {\n      return entryPreference === 'key' ? {\n        titulo: `${key.split(' - ')[1]}`,\n        dado: `${key}`\n      } : {\n        [key]: `${values}`\n      };\n    });\n  };\n\n  function onGeneratedData(elementsParse) {\n    let jsonData = {};\n    const tempData = [];\n\n    for (const [, value] of Object.entries(elementsParse)) {\n      if (JSON.stringify(value).includes('A - ')) jsonData = {};\n\n      for (const [keyValue, valueValue] of Object.entries(value)) {\n        jsonData[keyValue] = valueValue;\n        if (keyValue.includes('A - ')) tempData.push(jsonData); //console.log(key, value);\n      }\n    } //console.log(tempData);\n\n\n    return tempData;\n  }\n\n  const createKeyAndValueObjects = (metadadoMap = [], entryPreference) => {\n    let elementsKey = [];\n    let elementsParse = null;\n    const elements = metadadoMap.map(currElement => {\n      return elementsKey = createPropertyObject(currElement, entryPreference);\n    });\n\n    if (entryPreference !== 'key') {\n      const elementsStringify = JSON.stringify(elements).replaceAll('[[[{', '[{').replaceAll('}]]]', '}]').replaceAll('}]],[[{', '},{').replaceAll('[[{', '[{').replaceAll('}]]', '}]').replaceAll('}],[{', '},{');\n      elementsParse = JSON.parse(elementsStringify);\n      elementsParse = onGeneratedData(elementsParse);\n    } else {\n      elementsParse = elementsKey;\n    }\n\n    return elementsParse;\n  };\n\n  const customFilterCampos = ['Nome Interno do Atributo na Tabela (mta_atributo)', 'Descrição (mta_descricao)', 'Tipo da Tabela (mta_tipo)'];\n  const customFilterDados = ['B - Nome Interno do Atributo na Tabela (mta_atributo)', 'D - Descrição (mta_descricao)', 'E - Tipo da Tabela (mta_tipo)'];\n  const loadingMessage = /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 26\n    }\n  });\n  const loadingAction = /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  });\n  const metadadosSorted = metadados.slice(0);\n  metadadosSorted.sort(function (a, b) {\n    const x = a.mtt_tabela.toLowerCase();\n    const y = b.mtt_tabela.toLowerCase();\n    return x < y ? -1 : x > y ? 1 : 0;\n  });\n  const content = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toast, {\n    open: state.mensagem.openToast || metadadoSelectedMessage.open,\n    handleClose: () => {\n      setState({ ...state,\n        mensagem: {\n          openToast: false\n        }\n      });\n      onSetMessagePressed({\n        open: false,\n        text: null,\n        tipo: 'success',\n        loading: false\n      });\n    },\n    severity: state.mensagem.openToast ? state.mensagem.tipoToast : metadadoSelectedMessage.tipo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, state.mensagem.textoToast, metadadoSelectedMessage.text), metadadoSelectedMessage.loading ? loadingAction : null, /*#__PURE__*/React.createElement(CustomDialog, {\n    open: state.mensagem.open,\n    mensagem: state.mensagem,\n    data: state.mensagem.data,\n    campos: state.mensagem.campos,\n    labelButton: state.mensagem.labelButton,\n    dialogTitle: state.mensagem.dialogTitle,\n    message: state.mensagem.message,\n    action: state.mensagem.action,\n    classes: classes,\n    editData: state.mensagem.editData,\n    editaveis: metadadoSelectedEditaveis,\n    handleClose: () => setState({ ...state,\n      mensagem: {\n        open: false\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    style: {\n      marginTop: '-35px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, \"Objetos\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    value: state.mtt_descricao,\n    onChange: handleChange,\n    inputProps: {\n      name: 'mtt_descricao',\n      id: 'mtt_tabela'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, state.mtt_tabela ? /*#__PURE__*/React.createElement(\"option\", {\n    value: state.mtt_tabela,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 27\n    }\n  }, state.mtt_descricao, \" (\", state.mtt_tabela, \")\") : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 27\n    }\n  }, \"Selecione\"), metadadosSorted.map((metadado, index) => /*#__PURE__*/React.createElement(\"option\", {\n    value: metadado.mtt_tabela,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 27\n    }\n  }, metadado.mtt_descricao, \" (\", metadado.mtt_tabela, \")\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }, \"Metadados do Objeto\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, isLoadingMetadadoSelected ? loadingMessage : Array.isArray(metadadoSelectedCabecalho) && metadadoSelectedCabecalho.length ? metadadoSelectedCabecalho.map(currElement => Object.entries(currElement).map(([key, val]) => /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    gutterBottom: true,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 31\n    }\n  }, key.split(' - ')[1], \": \"), val))) : /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginTop: '80px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 27\n    }\n  }, \"Bem vindo ao M\\xF3dulo de Espacializa\\xE7\\xE3o\")), isLoadingMetadadoSelected ? '' : /*#__PURE__*/React.createElement(CustomTable, {\n    dados: createKeyAndValueObjects(metadadoSelectedCampos, 'values'),\n    campos: createKeyAndValueObjects(metadadoSelectedCampos, 'key'),\n    infoDados: info,\n    updateDados: update,\n    contentMaxHeight: 350,\n    customFilterCampos: customFilterCampos,\n    customFilterDados: customFilterDados,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    style: {\n      marginTop: '-35px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }\n  }, \"Conte\\xFAdo do Objeto\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    container: true,\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 17\n    }\n  }, isLoadingMetadadoSelected ? loadingMessage : Object.values(metadadoSelectedCabecalho)[0] && Object.values(metadadoSelectedCabecalho)[0]['D - Tipo da Tabela (mtt_tipo)'] && Object.values(metadadoSelectedCabecalho)[0]['D - Tipo da Tabela (mtt_tipo)'] === 'convencional' ? /*#__PURE__*/React.createElement(CustomTable, {\n    dados: createKeyAndValueObjects(metadadoSelectedDados, 'values'),\n    campos: createKeyAndValueObjects(metadadoSelectedDados, 'key'),\n    infoDados: info\n    /*excluirDados = {dialogRemove}*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Map, {\n    metadado: Object.values(metadadoSelectedCabecalho)[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 21\n    }\n  }))))))));\n  return isLoading ? loadingMessage : content;\n};\n\nconst mapStateToProps = state => ({\n  isLoading: getMetadadosTotalLoading(state),\n  metadados: getAllMetadadosTotal(state),\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n  metadadoSelectedCampos: getAllMetadadoSelectedCampos(state),\n  metadadoSelectedDados: getAllMetadadoSelectedDados(state),\n  metadadoSelectedTabela: getAllMetadadoSelectedTabela(state),\n  metadadoSelectedMessage: getAllMetadadoSelectedMessage(state),\n  metadadoSelectedEditaveis: getAllMetadadoSelectedEditaveis(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onTabelaSelected: mttTababela => dispatch(loadDadoPorExtenso(mttTababela)),\n  onUpdatePressed: (id, json) => dispatch(updateMetadado(id, json)),\n  onSetMessagePressed: message => dispatch(setMessage(message)),\n  startLoadingMetadados: () => dispatch(loadMetadadosTotal())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Metadados);","map":{"version":3,"sources":["C:/Users/BENEDICTO EDUARDO/PycharmProjects/geo/src/pages/Metadados/Consultar/index.js"],"names":["React","useEffect","CircularProgress","FormControl","Grid","LinearProgress","NativeSelect","Paper","makeStyles","Typography","connect","CustomDialog","Map","CustomTable","Toast","loadMetadadosTotal","loadDadoPorExtenso","setMessage","updateMetadado","getMetadadosTotalLoading","getAllMetadadosTotal","getMetadadoSelectedLoading","getAllMetadadoSelectedCabecalho","getAllMetadadoSelectedCampos","getAllMetadadoSelectedDados","getAllMetadadoSelectedTabela","getAllMetadadoSelectedMessage","getAllMetadadoSelectedEditaveis","useStyles","theme","root","flexGrow","marginTop","paper","padding","spacing","height","overflow","margin","borderTop","image","width","img","display","maxWidth","maxHeight","formControl","minWidth","selectEmpty","header","alignItems","background","color","paddingLeft","lineHeight","Metadados","metadados","metadadoSelectedCabecalho","metadadoSelectedCampos","metadadoSelectedDados","metadadoSelectedTabela","metadadoSelectedMessage","metadadoSelectedEditaveis","onUpdatePressed","onTabelaSelected","onSetMessagePressed","isLoading","isLoadingMetadadoSelected","startLoadingMetadados","classes","tabelaSelecionada","find","metadado","mtt_tabela","state","setState","useState","name","mtt_descricao","mensagem","open","texto","tipo","data","campos","labelButton","dialogTitle","message","action","openToast","tipoToast","textoToast","editData","handleChange","event","value","target","info","dado","fields","update","id","dadoAlteracao","dataToUpdate","tabela","mta_identificador","text","loading","String","prototype","replaceAll","replace","str","RegExp","createPropertyObject","currElement","entryPreference","Object","entries","map","key","values","titulo","split","onGeneratedData","elementsParse","jsonData","tempData","JSON","stringify","includes","keyValue","valueValue","push","createKeyAndValueObjects","metadadoMap","elementsKey","elements","elementsStringify","parse","customFilterCampos","customFilterDados","loadingMessage","loadingAction","metadadosSorted","slice","sort","a","b","x","toLowerCase","y","content","index","Array","isArray","length","val","mapStateToProps","mapDispatchToProps","dispatch","mttTababela","json"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\n\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport FormControl from '@material-ui/core/FormControl'\nimport Grid from '@material-ui/core/Grid'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport NativeSelect from '@material-ui/core/NativeSelect'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { connect } from 'react-redux'\n\nimport CustomDialog from '../../../components/Dialog'\nimport Map from '../../../components/Map'\nimport CustomTable from '../../../components/Table'\nimport Toast from '../../../components/Toast'\nimport {\n  loadMetadadosTotal,\n  loadDadoPorExtenso,\n  setMessage,\n  updateMetadado,\n} from '../../../services/metadados'\nimport {\n  getMetadadosTotalLoading,\n  getAllMetadadosTotal,\n  getMetadadoSelectedLoading,\n  getAllMetadadoSelectedCabecalho,\n  getAllMetadadoSelectedCampos,\n  getAllMetadadoSelectedDados,\n  getAllMetadadoSelectedTabela,\n  getAllMetadadoSelectedMessage,\n  getAllMetadadoSelectedEditaveis,\n} from '../../../store/selectors/metadados'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: '16px',\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: 520,\n    overflow: 'auto',\n    margin: '8px',\n    borderTop: '2px solid #318EDA',\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  header: {\n    alignItems: 'center',\n    background: '#1E74BB',\n    color: 'white',\n    paddingLeft: '8px',\n    margin: '-16px',\n    lineHeight: '1.5',\n  },\n}))\n\nconst Metadados = ({\n  metadados,\n  metadadoSelectedCabecalho,\n  metadadoSelectedCampos,\n  metadadoSelectedDados,\n  metadadoSelectedTabela,\n  metadadoSelectedMessage,\n  metadadoSelectedEditaveis,\n  onUpdatePressed,\n  onTabelaSelected,\n  onSetMessagePressed,\n  isLoading,\n  isLoadingMetadadoSelected,\n  startLoadingMetadados,\n}) => {\n  useEffect(() => {\n    startLoadingMetadados()\n  }, [startLoadingMetadados])\n\n  const classes = useStyles()\n  const tabelaSelecionada = metadados.find((metadado) => {\n    return metadado.mtt_tabela === metadadoSelectedTabela\n  })\n\n  const [state, setState] = React.useState({\n    name: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mtt_descricao: tabelaSelecionada ? tabelaSelecionada.mtt_descricao : '',\n    mtt_tabela: tabelaSelecionada ? tabelaSelecionada.mtt_tabela : '',\n    mensagem: {\n      open: false,\n      texto: '',\n      tipo: 'success',\n      data: null,\n      campos: [],\n      labelButton: null,\n      dialogTitle: null,\n      message: null,\n      action: null,\n      openToast: false,\n      tipoToast: 'success',\n      textoToast: null,\n      editData: false,\n    },\n  })\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    onTabelaSelected(value)\n    setState({\n      ...state,\n      [name]: value,\n      mtt_tabela: value,\n    })\n  }\n\n  const info = (dado, fields) => {\n    const mensagem = {\n      open: true,\n      //texto: `Consultar/Update ${dado.id}`,\n      tipo: 'success',\n      data: dado,\n      campos: fields,\n      editData: false,\n    }\n    setState({ ...state, mensagem })\n  }\n\n  const update = (dado, fields) => {\n    const mensagem = {\n      open: true,\n      //texto: `Consultar/Update ${dado.id}`,\n      tipo: 'success',\n      labelButton: 'Atualizar',\n      dialogTitle: 'Atualizar atributo',\n      data: dado,\n      campos: fields,\n      editData: true,\n      action(id, dadoAlteracao) {\n        setState({ ...state, mensagem: { openToast: false, open: false } })\n        const dataToUpdate = {\n          ...dadoAlteracao,\n          // tabela: state.mtt_tabela,\n          tabela: 'mta_metadadoatributo',\n          mta_identificador: id,\n        }\n        onSetMessagePressed({\n          open: false,\n          text: null,\n          tipo: 'success',\n          loading: true,\n        })\n        onUpdatePressed(id, dataToUpdate)\n      },\n    }\n    setState({ ...state, mensagem })\n  }\n\n  String.prototype.replaceAll = function (find, replace) {\n    const str = this\n    return str.replace(\n      new RegExp(find.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'),\n      replace\n    )\n  }\n\n  const createPropertyObject = (currElement, entryPreference) => {\n    return Object.entries(currElement).map(([key, values]) => {\n      return entryPreference === 'key'\n        ? {\n            titulo: `${key.split(' - ')[1]}`,\n            dado: `${key}`,\n          }\n        : {\n            [key]: `${values}`,\n          }\n    })\n  }\n\n  function onGeneratedData(elementsParse) {\n    let jsonData = {}\n    const tempData = []\n    for (const [, value] of Object.entries(elementsParse)) {\n      if (JSON.stringify(value).includes('A - ')) jsonData = {}\n      for (const [keyValue, valueValue] of Object.entries(value)) {\n        jsonData[keyValue] = valueValue\n        if (keyValue.includes('A - ')) tempData.push(jsonData)\n        //console.log(key, value);\n      }\n    }\n    //console.log(tempData);\n    return tempData\n  }\n\n  const createKeyAndValueObjects = (metadadoMap = [], entryPreference) => {\n    let elementsKey = []\n    let elementsParse = null\n    const elements = metadadoMap.map((currElement) => {\n      return (elementsKey = createPropertyObject(currElement, entryPreference))\n    })\n\n    if (entryPreference !== 'key') {\n      const elementsStringify = JSON.stringify(elements)\n        .replaceAll('[[[{', '[{')\n        .replaceAll('}]]]', '}]')\n        .replaceAll('}]],[[{', '},{')\n        .replaceAll('[[{', '[{')\n        .replaceAll('}]]', '}]')\n        .replaceAll('}],[{', '},{')\n      elementsParse = JSON.parse(elementsStringify)\n      elementsParse = onGeneratedData(elementsParse)\n    } else {\n      elementsParse = elementsKey\n    }\n\n    return elementsParse\n  }\n\n  const customFilterCampos = [\n    'Nome Interno do Atributo na Tabela (mta_atributo)',\n    'Descrição (mta_descricao)',\n    'Tipo da Tabela (mta_tipo)',\n  ]\n\n  const customFilterDados = [\n    'B - Nome Interno do Atributo na Tabela (mta_atributo)',\n    'D - Descrição (mta_descricao)',\n    'E - Tipo da Tabela (mta_tipo)',\n  ]\n\n  const loadingMessage = <CircularProgress />\n  const loadingAction = <LinearProgress />\n  const metadadosSorted = metadados.slice(0)\n  metadadosSorted.sort(function (a, b) {\n    const x = a.mtt_tabela.toLowerCase()\n    const y = b.mtt_tabela.toLowerCase()\n    return x < y ? -1 : x > y ? 1 : 0\n  })\n\n  const content = (\n    <>\n      <Toast\n        open={state.mensagem.openToast || metadadoSelectedMessage.open}\n        handleClose={() => {\n          setState({ ...state, mensagem: { openToast: false } })\n          onSetMessagePressed({\n            open: false,\n            text: null,\n            tipo: 'success',\n            loading: false,\n          })\n        }}\n        severity={\n          state.mensagem.openToast\n            ? state.mensagem.tipoToast\n            : metadadoSelectedMessage.tipo\n        }\n      >\n        {state.mensagem.textoToast}\n        {metadadoSelectedMessage.text}\n      </Toast>\n\n      {metadadoSelectedMessage.loading ? loadingAction : null}\n\n      <CustomDialog\n        open={state.mensagem.open}\n        mensagem={state.mensagem}\n        data={state.mensagem.data}\n        campos={state.mensagem.campos}\n        labelButton={state.mensagem.labelButton}\n        dialogTitle={state.mensagem.dialogTitle}\n        message={state.mensagem.message}\n        action={state.mensagem.action}\n        classes={classes}\n        editData={state.mensagem.editData}\n        editaveis={metadadoSelectedEditaveis}\n        handleClose={() => setState({ ...state, mensagem: { open: false } })}\n      />\n\n      <div className={classes.root}>\n        <Grid container justify='center' alignItems='center' spacing={1}>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <div className={classes.header} style={{ marginTop: '-35px' }}>\n                <h3>Objetos</h3>\n              </div>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm container>\n                  <Grid item xs>\n                    <FormControl className={classes.formControl}>\n                      <NativeSelect\n                        value={state.mtt_descricao}\n                        onChange={handleChange}\n                        inputProps={{\n                          name: 'mtt_descricao',\n                          id: 'mtt_tabela',\n                        }}\n                      >\n                        {state.mtt_tabela ? (\n                          <option value={state.mtt_tabela}>\n                            {state.mtt_descricao} ({state.mtt_tabela})\n                          </option>\n                        ) : (\n                          <option value=''>Selecione</option>\n                        )}\n\n                        {metadadosSorted.map((metadado, index) => (\n                          <option value={metadado.mtt_tabela} key={index}>\n                            {metadado.mtt_descricao} ({metadado.mtt_tabela})\n                          </option>\n                        ))}\n                      </NativeSelect>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <div className={classes.header}>\n                <h3>Metadados do Objeto</h3>\n              </div>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm container>\n                  <Grid\n                    item\n                    xs\n                    container\n                    direction='column'\n                    spacing={2}\n                    alignItems='center'\n                    justify='center'\n                  >\n                    <Grid item xs>\n                      {isLoadingMetadadoSelected ? (\n                        loadingMessage\n                      ) : Array.isArray(metadadoSelectedCabecalho) &&\n                        metadadoSelectedCabecalho.length ? (\n                        metadadoSelectedCabecalho.map((currElement) =>\n                          Object.entries(currElement).map(([key, val]) => (\n                            <Typography variant='body2' gutterBottom key={key}>\n                              <strong>{key.split(' - ')[1]}: </strong>\n                              {val}\n                            </Typography>\n                          ))\n                        )\n                      ) : (\n                        <h2 style={{ marginTop: '80px' }}>\n                          {' '}\n                          <strong>Bem vindo ao Módulo de Espacialização</strong>\n                        </h2>\n                      )}\n                      {isLoadingMetadadoSelected ? (\n                        ''\n                      ) : (\n                        <CustomTable\n                          dados={createKeyAndValueObjects(\n                            metadadoSelectedCampos,\n                            'values'\n                          )}\n                          campos={createKeyAndValueObjects(\n                            metadadoSelectedCampos,\n                            'key'\n                          )}\n                          infoDados={info}\n                          updateDados={update}\n                          contentMaxHeight={350}\n                          customFilterCampos={customFilterCampos}\n                          customFilterDados={customFilterDados}\n                        />\n                      )}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <div className={classes.header} style={{ marginTop: '-35px' }}>\n                <h3>Conteúdo do Objeto</h3>\n              </div>\n              <Grid container spacing={2}>\n                <Grid\n                  item\n                  xs={12}\n                  sm\n                  container\n                  alignItems='center'\n                  justify='center'\n                >\n                  {isLoadingMetadadoSelected ? (\n                    loadingMessage\n                  ) : Object.values(metadadoSelectedCabecalho)[0] &&\n                    Object.values(metadadoSelectedCabecalho)[0][\n                      'D - Tipo da Tabela (mtt_tipo)'\n                    ] &&\n                    Object.values(metadadoSelectedCabecalho)[0][\n                      'D - Tipo da Tabela (mtt_tipo)'\n                    ] === 'convencional' ? (\n                    <CustomTable\n                      dados={createKeyAndValueObjects(\n                        metadadoSelectedDados,\n                        'values'\n                      )}\n                      campos={createKeyAndValueObjects(\n                        metadadoSelectedDados,\n                        'key'\n                      )}\n                      infoDados={info} /*excluirDados = {dialogRemove}*/\n                    />\n                  ) : (\n                    <Map\n                      metadado={Object.values(metadadoSelectedCabecalho)[0]}\n                    />\n                  )}\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  )\n\n  return isLoading ? loadingMessage : content\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: getMetadadosTotalLoading(state),\n  metadados: getAllMetadadosTotal(state),\n  isLoadingMetadadoSelected: getMetadadoSelectedLoading(state),\n  metadadoSelectedCabecalho: getAllMetadadoSelectedCabecalho(state),\n  metadadoSelectedCampos: getAllMetadadoSelectedCampos(state),\n  metadadoSelectedDados: getAllMetadadoSelectedDados(state),\n  metadadoSelectedTabela: getAllMetadadoSelectedTabela(state),\n  metadadoSelectedMessage: getAllMetadadoSelectedMessage(state),\n  metadadoSelectedEditaveis: getAllMetadadoSelectedEditaveis(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onTabelaSelected: (mttTababela) => dispatch(loadDadoPorExtenso(mttTababela)),\n  onUpdatePressed: (id, json) => dispatch(updateMetadado(id, json)),\n  onSetMessagePressed: (message) => dispatch(setMessage(message)),\n  startLoadingMetadados: () => dispatch(loadMetadadosTotal()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Metadados)\n"]},"metadata":{},"sourceType":"module"}